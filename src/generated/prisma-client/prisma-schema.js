module.exports = {
        typeDefs: // Code generated by Prisma (prisma@1.34.10). DO NOT EDIT.
  // Please don't change this file manually but run `prisma generate` to update it.
  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

/* GraphQL */ `type AggregateContent {
  count: Int!
}

type AggregateEchoOfEchoInVoid {
  count: Int!
}

type AggregateEchoOfShoutInVoid {
  count: Int!
}

type AggregateNVoid {
  count: Int!
}

type AggregateReplyToEchoOfEchoInVoid {
  count: Int!
}

type AggregateReplyToEchoOfShoutInVoid {
  count: Int!
}

type AggregateReplyToShoutInVoid {
  count: Int!
}

type AggregateShoutInVoid {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type AggregateUserActivatedEchoOfEcho {
  count: Int!
}

type AggregateUserActivatedEchoOfShout {
  count: Int!
}

type AggregateUserSavedVoid {
  count: Int!
}

type BatchPayload {
  count: Long!
}

type Content {
  contentId: ID!
  createdAt: DateTime!
  createdBy: User!
  message: String!
}

type ContentConnection {
  pageInfo: PageInfo!
  edges: [ContentEdge]!
  aggregate: AggregateContent!
}

input ContentCreateInput {
  contentId: ID
  createdBy: UserCreateOneWithoutCreatedContentInput!
  message: String!
}

input ContentCreateManyWithoutCreatedByInput {
  create: [ContentCreateWithoutCreatedByInput!]
  connect: [ContentWhereUniqueInput!]
}

input ContentCreateOneInput {
  create: ContentCreateInput
  connect: ContentWhereUniqueInput
}

input ContentCreateWithoutCreatedByInput {
  contentId: ID
  message: String!
}

type ContentEdge {
  node: Content!
  cursor: String!
}

enum ContentOrderByInput {
  contentId_ASC
  contentId_DESC
  createdAt_ASC
  createdAt_DESC
  message_ASC
  message_DESC
}

type ContentPreviousValues {
  contentId: ID!
  createdAt: DateTime!
  message: String!
}

input ContentScalarWhereInput {
  contentId: ID
  contentId_not: ID
  contentId_in: [ID!]
  contentId_not_in: [ID!]
  contentId_lt: ID
  contentId_lte: ID
  contentId_gt: ID
  contentId_gte: ID
  contentId_contains: ID
  contentId_not_contains: ID
  contentId_starts_with: ID
  contentId_not_starts_with: ID
  contentId_ends_with: ID
  contentId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  message: String
  message_not: String
  message_in: [String!]
  message_not_in: [String!]
  message_lt: String
  message_lte: String
  message_gt: String
  message_gte: String
  message_contains: String
  message_not_contains: String
  message_starts_with: String
  message_not_starts_with: String
  message_ends_with: String
  message_not_ends_with: String
  AND: [ContentScalarWhereInput!]
  OR: [ContentScalarWhereInput!]
  NOT: [ContentScalarWhereInput!]
}

type ContentSubscriptionPayload {
  mutation: MutationType!
  node: Content
  updatedFields: [String!]
  previousValues: ContentPreviousValues
}

input ContentSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ContentWhereInput
  AND: [ContentSubscriptionWhereInput!]
  OR: [ContentSubscriptionWhereInput!]
  NOT: [ContentSubscriptionWhereInput!]
}

input ContentUpdateDataInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedContentInput
  message: String
}

input ContentUpdateInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedContentInput
  message: String
}

input ContentUpdateManyDataInput {
  message: String
}

input ContentUpdateManyMutationInput {
  message: String
}

input ContentUpdateManyWithoutCreatedByInput {
  create: [ContentCreateWithoutCreatedByInput!]
  delete: [ContentWhereUniqueInput!]
  connect: [ContentWhereUniqueInput!]
  set: [ContentWhereUniqueInput!]
  disconnect: [ContentWhereUniqueInput!]
  update: [ContentUpdateWithWhereUniqueWithoutCreatedByInput!]
  upsert: [ContentUpsertWithWhereUniqueWithoutCreatedByInput!]
  deleteMany: [ContentScalarWhereInput!]
  updateMany: [ContentUpdateManyWithWhereNestedInput!]
}

input ContentUpdateManyWithWhereNestedInput {
  where: ContentScalarWhereInput!
  data: ContentUpdateManyDataInput!
}

input ContentUpdateOneRequiredInput {
  create: ContentCreateInput
  update: ContentUpdateDataInput
  upsert: ContentUpsertNestedInput
  connect: ContentWhereUniqueInput
}

input ContentUpdateWithoutCreatedByDataInput {
  message: String
}

input ContentUpdateWithWhereUniqueWithoutCreatedByInput {
  where: ContentWhereUniqueInput!
  data: ContentUpdateWithoutCreatedByDataInput!
}

input ContentUpsertNestedInput {
  update: ContentUpdateDataInput!
  create: ContentCreateInput!
}

input ContentUpsertWithWhereUniqueWithoutCreatedByInput {
  where: ContentWhereUniqueInput!
  update: ContentUpdateWithoutCreatedByDataInput!
  create: ContentCreateWithoutCreatedByInput!
}

input ContentWhereInput {
  contentId: ID
  contentId_not: ID
  contentId_in: [ID!]
  contentId_not_in: [ID!]
  contentId_lt: ID
  contentId_lte: ID
  contentId_gt: ID
  contentId_gte: ID
  contentId_contains: ID
  contentId_not_contains: ID
  contentId_starts_with: ID
  contentId_not_starts_with: ID
  contentId_ends_with: ID
  contentId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdBy: UserWhereInput
  message: String
  message_not: String
  message_in: [String!]
  message_not_in: [String!]
  message_lt: String
  message_lte: String
  message_gt: String
  message_gte: String
  message_contains: String
  message_not_contains: String
  message_starts_with: String
  message_not_starts_with: String
  message_ends_with: String
  message_not_ends_with: String
  AND: [ContentWhereInput!]
  OR: [ContentWhereInput!]
  NOT: [ContentWhereInput!]
}

input ContentWhereUniqueInput {
  contentId: ID
}

scalar DateTime

type EchoOfEchoInVoid {
  echoOfShoutInVoidId: ID!
  createdAt: DateTime!
  createdBy: User!
  originalShoutContent: Content!
  originalShoutVoidGeohash: String!
  originalEchoVoidGeohash: String!
  originalEchoOfShoutInVoid: EchoOfShoutInVoid!
  nvoid: NVoid!
  voteCount: Int!
  replies(where: ReplyToEchoOfEchoInVoidWhereInput, orderBy: ReplyToEchoOfEchoInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ReplyToEchoOfEchoInVoid!]
}

type EchoOfEchoInVoidConnection {
  pageInfo: PageInfo!
  edges: [EchoOfEchoInVoidEdge]!
  aggregate: AggregateEchoOfEchoInVoid!
}

input EchoOfEchoInVoidCreateInput {
  echoOfShoutInVoidId: ID
  createdBy: UserCreateOneWithoutCreatedEchosOfEchosInVoidInput!
  originalShoutContent: ContentCreateOneInput!
  originalShoutVoidGeohash: String!
  originalEchoVoidGeohash: String!
  originalEchoOfShoutInVoid: EchoOfShoutInVoidCreateOneWithoutEchosOfEchoInVoidInput!
  nvoid: NVoidCreateOneWithoutEchosOfEchosInput!
  voteCount: Int!
  replies: ReplyToEchoOfEchoInVoidCreateManyWithoutOriginalEchoOfEchoInVoidInput
}

input EchoOfEchoInVoidCreateManyWithoutCreatedByInput {
  create: [EchoOfEchoInVoidCreateWithoutCreatedByInput!]
  connect: [EchoOfEchoInVoidWhereUniqueInput!]
}

input EchoOfEchoInVoidCreateManyWithoutNvoidInput {
  create: [EchoOfEchoInVoidCreateWithoutNvoidInput!]
  connect: [EchoOfEchoInVoidWhereUniqueInput!]
}

input EchoOfEchoInVoidCreateManyWithoutOriginalEchoOfShoutInVoidInput {
  create: [EchoOfEchoInVoidCreateWithoutOriginalEchoOfShoutInVoidInput!]
  connect: [EchoOfEchoInVoidWhereUniqueInput!]
}

input EchoOfEchoInVoidCreateOneWithoutRepliesInput {
  create: EchoOfEchoInVoidCreateWithoutRepliesInput
  connect: EchoOfEchoInVoidWhereUniqueInput
}

input EchoOfEchoInVoidCreateWithoutCreatedByInput {
  echoOfShoutInVoidId: ID
  originalShoutContent: ContentCreateOneInput!
  originalShoutVoidGeohash: String!
  originalEchoVoidGeohash: String!
  originalEchoOfShoutInVoid: EchoOfShoutInVoidCreateOneWithoutEchosOfEchoInVoidInput!
  nvoid: NVoidCreateOneWithoutEchosOfEchosInput!
  voteCount: Int!
  replies: ReplyToEchoOfEchoInVoidCreateManyWithoutOriginalEchoOfEchoInVoidInput
}

input EchoOfEchoInVoidCreateWithoutNvoidInput {
  echoOfShoutInVoidId: ID
  createdBy: UserCreateOneWithoutCreatedEchosOfEchosInVoidInput!
  originalShoutContent: ContentCreateOneInput!
  originalShoutVoidGeohash: String!
  originalEchoVoidGeohash: String!
  originalEchoOfShoutInVoid: EchoOfShoutInVoidCreateOneWithoutEchosOfEchoInVoidInput!
  voteCount: Int!
  replies: ReplyToEchoOfEchoInVoidCreateManyWithoutOriginalEchoOfEchoInVoidInput
}

input EchoOfEchoInVoidCreateWithoutOriginalEchoOfShoutInVoidInput {
  echoOfShoutInVoidId: ID
  createdBy: UserCreateOneWithoutCreatedEchosOfEchosInVoidInput!
  originalShoutContent: ContentCreateOneInput!
  originalShoutVoidGeohash: String!
  originalEchoVoidGeohash: String!
  nvoid: NVoidCreateOneWithoutEchosOfEchosInput!
  voteCount: Int!
  replies: ReplyToEchoOfEchoInVoidCreateManyWithoutOriginalEchoOfEchoInVoidInput
}

input EchoOfEchoInVoidCreateWithoutRepliesInput {
  echoOfShoutInVoidId: ID
  createdBy: UserCreateOneWithoutCreatedEchosOfEchosInVoidInput!
  originalShoutContent: ContentCreateOneInput!
  originalShoutVoidGeohash: String!
  originalEchoVoidGeohash: String!
  originalEchoOfShoutInVoid: EchoOfShoutInVoidCreateOneWithoutEchosOfEchoInVoidInput!
  nvoid: NVoidCreateOneWithoutEchosOfEchosInput!
  voteCount: Int!
}

type EchoOfEchoInVoidEdge {
  node: EchoOfEchoInVoid!
  cursor: String!
}

enum EchoOfEchoInVoidOrderByInput {
  echoOfShoutInVoidId_ASC
  echoOfShoutInVoidId_DESC
  createdAt_ASC
  createdAt_DESC
  originalShoutVoidGeohash_ASC
  originalShoutVoidGeohash_DESC
  originalEchoVoidGeohash_ASC
  originalEchoVoidGeohash_DESC
  voteCount_ASC
  voteCount_DESC
}

type EchoOfEchoInVoidPreviousValues {
  echoOfShoutInVoidId: ID!
  createdAt: DateTime!
  originalShoutVoidGeohash: String!
  originalEchoVoidGeohash: String!
  voteCount: Int!
}

input EchoOfEchoInVoidScalarWhereInput {
  echoOfShoutInVoidId: ID
  echoOfShoutInVoidId_not: ID
  echoOfShoutInVoidId_in: [ID!]
  echoOfShoutInVoidId_not_in: [ID!]
  echoOfShoutInVoidId_lt: ID
  echoOfShoutInVoidId_lte: ID
  echoOfShoutInVoidId_gt: ID
  echoOfShoutInVoidId_gte: ID
  echoOfShoutInVoidId_contains: ID
  echoOfShoutInVoidId_not_contains: ID
  echoOfShoutInVoidId_starts_with: ID
  echoOfShoutInVoidId_not_starts_with: ID
  echoOfShoutInVoidId_ends_with: ID
  echoOfShoutInVoidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  originalShoutVoidGeohash: String
  originalShoutVoidGeohash_not: String
  originalShoutVoidGeohash_in: [String!]
  originalShoutVoidGeohash_not_in: [String!]
  originalShoutVoidGeohash_lt: String
  originalShoutVoidGeohash_lte: String
  originalShoutVoidGeohash_gt: String
  originalShoutVoidGeohash_gte: String
  originalShoutVoidGeohash_contains: String
  originalShoutVoidGeohash_not_contains: String
  originalShoutVoidGeohash_starts_with: String
  originalShoutVoidGeohash_not_starts_with: String
  originalShoutVoidGeohash_ends_with: String
  originalShoutVoidGeohash_not_ends_with: String
  originalEchoVoidGeohash: String
  originalEchoVoidGeohash_not: String
  originalEchoVoidGeohash_in: [String!]
  originalEchoVoidGeohash_not_in: [String!]
  originalEchoVoidGeohash_lt: String
  originalEchoVoidGeohash_lte: String
  originalEchoVoidGeohash_gt: String
  originalEchoVoidGeohash_gte: String
  originalEchoVoidGeohash_contains: String
  originalEchoVoidGeohash_not_contains: String
  originalEchoVoidGeohash_starts_with: String
  originalEchoVoidGeohash_not_starts_with: String
  originalEchoVoidGeohash_ends_with: String
  originalEchoVoidGeohash_not_ends_with: String
  voteCount: Int
  voteCount_not: Int
  voteCount_in: [Int!]
  voteCount_not_in: [Int!]
  voteCount_lt: Int
  voteCount_lte: Int
  voteCount_gt: Int
  voteCount_gte: Int
  AND: [EchoOfEchoInVoidScalarWhereInput!]
  OR: [EchoOfEchoInVoidScalarWhereInput!]
  NOT: [EchoOfEchoInVoidScalarWhereInput!]
}

type EchoOfEchoInVoidSubscriptionPayload {
  mutation: MutationType!
  node: EchoOfEchoInVoid
  updatedFields: [String!]
  previousValues: EchoOfEchoInVoidPreviousValues
}

input EchoOfEchoInVoidSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: EchoOfEchoInVoidWhereInput
  AND: [EchoOfEchoInVoidSubscriptionWhereInput!]
  OR: [EchoOfEchoInVoidSubscriptionWhereInput!]
  NOT: [EchoOfEchoInVoidSubscriptionWhereInput!]
}

input EchoOfEchoInVoidUpdateInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedEchosOfEchosInVoidInput
  originalShoutContent: ContentUpdateOneRequiredInput
  originalShoutVoidGeohash: String
  originalEchoVoidGeohash: String
  originalEchoOfShoutInVoid: EchoOfShoutInVoidUpdateOneRequiredWithoutEchosOfEchoInVoidInput
  nvoid: NVoidUpdateOneRequiredWithoutEchosOfEchosInput
  voteCount: Int
  replies: ReplyToEchoOfEchoInVoidUpdateManyWithoutOriginalEchoOfEchoInVoidInput
}

input EchoOfEchoInVoidUpdateManyDataInput {
  originalShoutVoidGeohash: String
  originalEchoVoidGeohash: String
  voteCount: Int
}

input EchoOfEchoInVoidUpdateManyMutationInput {
  originalShoutVoidGeohash: String
  originalEchoVoidGeohash: String
  voteCount: Int
}

input EchoOfEchoInVoidUpdateManyWithoutCreatedByInput {
  create: [EchoOfEchoInVoidCreateWithoutCreatedByInput!]
  delete: [EchoOfEchoInVoidWhereUniqueInput!]
  connect: [EchoOfEchoInVoidWhereUniqueInput!]
  set: [EchoOfEchoInVoidWhereUniqueInput!]
  disconnect: [EchoOfEchoInVoidWhereUniqueInput!]
  update: [EchoOfEchoInVoidUpdateWithWhereUniqueWithoutCreatedByInput!]
  upsert: [EchoOfEchoInVoidUpsertWithWhereUniqueWithoutCreatedByInput!]
  deleteMany: [EchoOfEchoInVoidScalarWhereInput!]
  updateMany: [EchoOfEchoInVoidUpdateManyWithWhereNestedInput!]
}

input EchoOfEchoInVoidUpdateManyWithoutNvoidInput {
  create: [EchoOfEchoInVoidCreateWithoutNvoidInput!]
  delete: [EchoOfEchoInVoidWhereUniqueInput!]
  connect: [EchoOfEchoInVoidWhereUniqueInput!]
  set: [EchoOfEchoInVoidWhereUniqueInput!]
  disconnect: [EchoOfEchoInVoidWhereUniqueInput!]
  update: [EchoOfEchoInVoidUpdateWithWhereUniqueWithoutNvoidInput!]
  upsert: [EchoOfEchoInVoidUpsertWithWhereUniqueWithoutNvoidInput!]
  deleteMany: [EchoOfEchoInVoidScalarWhereInput!]
  updateMany: [EchoOfEchoInVoidUpdateManyWithWhereNestedInput!]
}

input EchoOfEchoInVoidUpdateManyWithoutOriginalEchoOfShoutInVoidInput {
  create: [EchoOfEchoInVoidCreateWithoutOriginalEchoOfShoutInVoidInput!]
  delete: [EchoOfEchoInVoidWhereUniqueInput!]
  connect: [EchoOfEchoInVoidWhereUniqueInput!]
  set: [EchoOfEchoInVoidWhereUniqueInput!]
  disconnect: [EchoOfEchoInVoidWhereUniqueInput!]
  update: [EchoOfEchoInVoidUpdateWithWhereUniqueWithoutOriginalEchoOfShoutInVoidInput!]
  upsert: [EchoOfEchoInVoidUpsertWithWhereUniqueWithoutOriginalEchoOfShoutInVoidInput!]
  deleteMany: [EchoOfEchoInVoidScalarWhereInput!]
  updateMany: [EchoOfEchoInVoidUpdateManyWithWhereNestedInput!]
}

input EchoOfEchoInVoidUpdateManyWithWhereNestedInput {
  where: EchoOfEchoInVoidScalarWhereInput!
  data: EchoOfEchoInVoidUpdateManyDataInput!
}

input EchoOfEchoInVoidUpdateOneRequiredWithoutRepliesInput {
  create: EchoOfEchoInVoidCreateWithoutRepliesInput
  update: EchoOfEchoInVoidUpdateWithoutRepliesDataInput
  upsert: EchoOfEchoInVoidUpsertWithoutRepliesInput
  connect: EchoOfEchoInVoidWhereUniqueInput
}

input EchoOfEchoInVoidUpdateWithoutCreatedByDataInput {
  originalShoutContent: ContentUpdateOneRequiredInput
  originalShoutVoidGeohash: String
  originalEchoVoidGeohash: String
  originalEchoOfShoutInVoid: EchoOfShoutInVoidUpdateOneRequiredWithoutEchosOfEchoInVoidInput
  nvoid: NVoidUpdateOneRequiredWithoutEchosOfEchosInput
  voteCount: Int
  replies: ReplyToEchoOfEchoInVoidUpdateManyWithoutOriginalEchoOfEchoInVoidInput
}

input EchoOfEchoInVoidUpdateWithoutNvoidDataInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedEchosOfEchosInVoidInput
  originalShoutContent: ContentUpdateOneRequiredInput
  originalShoutVoidGeohash: String
  originalEchoVoidGeohash: String
  originalEchoOfShoutInVoid: EchoOfShoutInVoidUpdateOneRequiredWithoutEchosOfEchoInVoidInput
  voteCount: Int
  replies: ReplyToEchoOfEchoInVoidUpdateManyWithoutOriginalEchoOfEchoInVoidInput
}

input EchoOfEchoInVoidUpdateWithoutOriginalEchoOfShoutInVoidDataInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedEchosOfEchosInVoidInput
  originalShoutContent: ContentUpdateOneRequiredInput
  originalShoutVoidGeohash: String
  originalEchoVoidGeohash: String
  nvoid: NVoidUpdateOneRequiredWithoutEchosOfEchosInput
  voteCount: Int
  replies: ReplyToEchoOfEchoInVoidUpdateManyWithoutOriginalEchoOfEchoInVoidInput
}

input EchoOfEchoInVoidUpdateWithoutRepliesDataInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedEchosOfEchosInVoidInput
  originalShoutContent: ContentUpdateOneRequiredInput
  originalShoutVoidGeohash: String
  originalEchoVoidGeohash: String
  originalEchoOfShoutInVoid: EchoOfShoutInVoidUpdateOneRequiredWithoutEchosOfEchoInVoidInput
  nvoid: NVoidUpdateOneRequiredWithoutEchosOfEchosInput
  voteCount: Int
}

input EchoOfEchoInVoidUpdateWithWhereUniqueWithoutCreatedByInput {
  where: EchoOfEchoInVoidWhereUniqueInput!
  data: EchoOfEchoInVoidUpdateWithoutCreatedByDataInput!
}

input EchoOfEchoInVoidUpdateWithWhereUniqueWithoutNvoidInput {
  where: EchoOfEchoInVoidWhereUniqueInput!
  data: EchoOfEchoInVoidUpdateWithoutNvoidDataInput!
}

input EchoOfEchoInVoidUpdateWithWhereUniqueWithoutOriginalEchoOfShoutInVoidInput {
  where: EchoOfEchoInVoidWhereUniqueInput!
  data: EchoOfEchoInVoidUpdateWithoutOriginalEchoOfShoutInVoidDataInput!
}

input EchoOfEchoInVoidUpsertWithoutRepliesInput {
  update: EchoOfEchoInVoidUpdateWithoutRepliesDataInput!
  create: EchoOfEchoInVoidCreateWithoutRepliesInput!
}

input EchoOfEchoInVoidUpsertWithWhereUniqueWithoutCreatedByInput {
  where: EchoOfEchoInVoidWhereUniqueInput!
  update: EchoOfEchoInVoidUpdateWithoutCreatedByDataInput!
  create: EchoOfEchoInVoidCreateWithoutCreatedByInput!
}

input EchoOfEchoInVoidUpsertWithWhereUniqueWithoutNvoidInput {
  where: EchoOfEchoInVoidWhereUniqueInput!
  update: EchoOfEchoInVoidUpdateWithoutNvoidDataInput!
  create: EchoOfEchoInVoidCreateWithoutNvoidInput!
}

input EchoOfEchoInVoidUpsertWithWhereUniqueWithoutOriginalEchoOfShoutInVoidInput {
  where: EchoOfEchoInVoidWhereUniqueInput!
  update: EchoOfEchoInVoidUpdateWithoutOriginalEchoOfShoutInVoidDataInput!
  create: EchoOfEchoInVoidCreateWithoutOriginalEchoOfShoutInVoidInput!
}

input EchoOfEchoInVoidWhereInput {
  echoOfShoutInVoidId: ID
  echoOfShoutInVoidId_not: ID
  echoOfShoutInVoidId_in: [ID!]
  echoOfShoutInVoidId_not_in: [ID!]
  echoOfShoutInVoidId_lt: ID
  echoOfShoutInVoidId_lte: ID
  echoOfShoutInVoidId_gt: ID
  echoOfShoutInVoidId_gte: ID
  echoOfShoutInVoidId_contains: ID
  echoOfShoutInVoidId_not_contains: ID
  echoOfShoutInVoidId_starts_with: ID
  echoOfShoutInVoidId_not_starts_with: ID
  echoOfShoutInVoidId_ends_with: ID
  echoOfShoutInVoidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdBy: UserWhereInput
  originalShoutContent: ContentWhereInput
  originalShoutVoidGeohash: String
  originalShoutVoidGeohash_not: String
  originalShoutVoidGeohash_in: [String!]
  originalShoutVoidGeohash_not_in: [String!]
  originalShoutVoidGeohash_lt: String
  originalShoutVoidGeohash_lte: String
  originalShoutVoidGeohash_gt: String
  originalShoutVoidGeohash_gte: String
  originalShoutVoidGeohash_contains: String
  originalShoutVoidGeohash_not_contains: String
  originalShoutVoidGeohash_starts_with: String
  originalShoutVoidGeohash_not_starts_with: String
  originalShoutVoidGeohash_ends_with: String
  originalShoutVoidGeohash_not_ends_with: String
  originalEchoVoidGeohash: String
  originalEchoVoidGeohash_not: String
  originalEchoVoidGeohash_in: [String!]
  originalEchoVoidGeohash_not_in: [String!]
  originalEchoVoidGeohash_lt: String
  originalEchoVoidGeohash_lte: String
  originalEchoVoidGeohash_gt: String
  originalEchoVoidGeohash_gte: String
  originalEchoVoidGeohash_contains: String
  originalEchoVoidGeohash_not_contains: String
  originalEchoVoidGeohash_starts_with: String
  originalEchoVoidGeohash_not_starts_with: String
  originalEchoVoidGeohash_ends_with: String
  originalEchoVoidGeohash_not_ends_with: String
  originalEchoOfShoutInVoid: EchoOfShoutInVoidWhereInput
  nvoid: NVoidWhereInput
  voteCount: Int
  voteCount_not: Int
  voteCount_in: [Int!]
  voteCount_not_in: [Int!]
  voteCount_lt: Int
  voteCount_lte: Int
  voteCount_gt: Int
  voteCount_gte: Int
  replies_every: ReplyToEchoOfEchoInVoidWhereInput
  replies_some: ReplyToEchoOfEchoInVoidWhereInput
  replies_none: ReplyToEchoOfEchoInVoidWhereInput
  AND: [EchoOfEchoInVoidWhereInput!]
  OR: [EchoOfEchoInVoidWhereInput!]
  NOT: [EchoOfEchoInVoidWhereInput!]
}

input EchoOfEchoInVoidWhereUniqueInput {
  echoOfShoutInVoidId: ID
}

type EchoOfShoutInVoid {
  echoOfShoutInVoidId: ID!
  createdAt: DateTime!
  createdBy: User!
  originalShoutContent: Content!
  originalShoutVoidGeohash: String!
  originalShoutInVoid: ShoutInVoid!
  nvoid: NVoid!
  voteCount: Int!
  echosOfEchoInVoid(where: EchoOfEchoInVoidWhereInput, orderBy: EchoOfEchoInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [EchoOfEchoInVoid!]
  replies(where: ReplyToEchoOfShoutInVoidWhereInput, orderBy: ReplyToEchoOfShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ReplyToEchoOfShoutInVoid!]
}

type EchoOfShoutInVoidConnection {
  pageInfo: PageInfo!
  edges: [EchoOfShoutInVoidEdge]!
  aggregate: AggregateEchoOfShoutInVoid!
}

input EchoOfShoutInVoidCreateInput {
  echoOfShoutInVoidId: ID
  createdBy: UserCreateOneWithoutCreatedEchosOfShoutsInVoidInput!
  originalShoutContent: ContentCreateOneInput!
  originalShoutVoidGeohash: String!
  originalShoutInVoid: ShoutInVoidCreateOneWithoutEchosOfShoutInVoidInput!
  nvoid: NVoidCreateOneWithoutEchosOfShoutsInput!
  voteCount: Int!
  echosOfEchoInVoid: EchoOfEchoInVoidCreateManyWithoutOriginalEchoOfShoutInVoidInput
  replies: ReplyToEchoOfShoutInVoidCreateManyWithoutOriginalEchoOfShoutInVoidInput
}

input EchoOfShoutInVoidCreateManyWithoutCreatedByInput {
  create: [EchoOfShoutInVoidCreateWithoutCreatedByInput!]
  connect: [EchoOfShoutInVoidWhereUniqueInput!]
}

input EchoOfShoutInVoidCreateManyWithoutNvoidInput {
  create: [EchoOfShoutInVoidCreateWithoutNvoidInput!]
  connect: [EchoOfShoutInVoidWhereUniqueInput!]
}

input EchoOfShoutInVoidCreateManyWithoutOriginalShoutInVoidInput {
  create: [EchoOfShoutInVoidCreateWithoutOriginalShoutInVoidInput!]
  connect: [EchoOfShoutInVoidWhereUniqueInput!]
}

input EchoOfShoutInVoidCreateOneWithoutEchosOfEchoInVoidInput {
  create: EchoOfShoutInVoidCreateWithoutEchosOfEchoInVoidInput
  connect: EchoOfShoutInVoidWhereUniqueInput
}

input EchoOfShoutInVoidCreateOneWithoutRepliesInput {
  create: EchoOfShoutInVoidCreateWithoutRepliesInput
  connect: EchoOfShoutInVoidWhereUniqueInput
}

input EchoOfShoutInVoidCreateWithoutCreatedByInput {
  echoOfShoutInVoidId: ID
  originalShoutContent: ContentCreateOneInput!
  originalShoutVoidGeohash: String!
  originalShoutInVoid: ShoutInVoidCreateOneWithoutEchosOfShoutInVoidInput!
  nvoid: NVoidCreateOneWithoutEchosOfShoutsInput!
  voteCount: Int!
  echosOfEchoInVoid: EchoOfEchoInVoidCreateManyWithoutOriginalEchoOfShoutInVoidInput
  replies: ReplyToEchoOfShoutInVoidCreateManyWithoutOriginalEchoOfShoutInVoidInput
}

input EchoOfShoutInVoidCreateWithoutEchosOfEchoInVoidInput {
  echoOfShoutInVoidId: ID
  createdBy: UserCreateOneWithoutCreatedEchosOfShoutsInVoidInput!
  originalShoutContent: ContentCreateOneInput!
  originalShoutVoidGeohash: String!
  originalShoutInVoid: ShoutInVoidCreateOneWithoutEchosOfShoutInVoidInput!
  nvoid: NVoidCreateOneWithoutEchosOfShoutsInput!
  voteCount: Int!
  replies: ReplyToEchoOfShoutInVoidCreateManyWithoutOriginalEchoOfShoutInVoidInput
}

input EchoOfShoutInVoidCreateWithoutNvoidInput {
  echoOfShoutInVoidId: ID
  createdBy: UserCreateOneWithoutCreatedEchosOfShoutsInVoidInput!
  originalShoutContent: ContentCreateOneInput!
  originalShoutVoidGeohash: String!
  originalShoutInVoid: ShoutInVoidCreateOneWithoutEchosOfShoutInVoidInput!
  voteCount: Int!
  echosOfEchoInVoid: EchoOfEchoInVoidCreateManyWithoutOriginalEchoOfShoutInVoidInput
  replies: ReplyToEchoOfShoutInVoidCreateManyWithoutOriginalEchoOfShoutInVoidInput
}

input EchoOfShoutInVoidCreateWithoutOriginalShoutInVoidInput {
  echoOfShoutInVoidId: ID
  createdBy: UserCreateOneWithoutCreatedEchosOfShoutsInVoidInput!
  originalShoutContent: ContentCreateOneInput!
  originalShoutVoidGeohash: String!
  nvoid: NVoidCreateOneWithoutEchosOfShoutsInput!
  voteCount: Int!
  echosOfEchoInVoid: EchoOfEchoInVoidCreateManyWithoutOriginalEchoOfShoutInVoidInput
  replies: ReplyToEchoOfShoutInVoidCreateManyWithoutOriginalEchoOfShoutInVoidInput
}

input EchoOfShoutInVoidCreateWithoutRepliesInput {
  echoOfShoutInVoidId: ID
  createdBy: UserCreateOneWithoutCreatedEchosOfShoutsInVoidInput!
  originalShoutContent: ContentCreateOneInput!
  originalShoutVoidGeohash: String!
  originalShoutInVoid: ShoutInVoidCreateOneWithoutEchosOfShoutInVoidInput!
  nvoid: NVoidCreateOneWithoutEchosOfShoutsInput!
  voteCount: Int!
  echosOfEchoInVoid: EchoOfEchoInVoidCreateManyWithoutOriginalEchoOfShoutInVoidInput
}

type EchoOfShoutInVoidEdge {
  node: EchoOfShoutInVoid!
  cursor: String!
}

enum EchoOfShoutInVoidOrderByInput {
  echoOfShoutInVoidId_ASC
  echoOfShoutInVoidId_DESC
  createdAt_ASC
  createdAt_DESC
  originalShoutVoidGeohash_ASC
  originalShoutVoidGeohash_DESC
  voteCount_ASC
  voteCount_DESC
}

type EchoOfShoutInVoidPreviousValues {
  echoOfShoutInVoidId: ID!
  createdAt: DateTime!
  originalShoutVoidGeohash: String!
  voteCount: Int!
}

input EchoOfShoutInVoidScalarWhereInput {
  echoOfShoutInVoidId: ID
  echoOfShoutInVoidId_not: ID
  echoOfShoutInVoidId_in: [ID!]
  echoOfShoutInVoidId_not_in: [ID!]
  echoOfShoutInVoidId_lt: ID
  echoOfShoutInVoidId_lte: ID
  echoOfShoutInVoidId_gt: ID
  echoOfShoutInVoidId_gte: ID
  echoOfShoutInVoidId_contains: ID
  echoOfShoutInVoidId_not_contains: ID
  echoOfShoutInVoidId_starts_with: ID
  echoOfShoutInVoidId_not_starts_with: ID
  echoOfShoutInVoidId_ends_with: ID
  echoOfShoutInVoidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  originalShoutVoidGeohash: String
  originalShoutVoidGeohash_not: String
  originalShoutVoidGeohash_in: [String!]
  originalShoutVoidGeohash_not_in: [String!]
  originalShoutVoidGeohash_lt: String
  originalShoutVoidGeohash_lte: String
  originalShoutVoidGeohash_gt: String
  originalShoutVoidGeohash_gte: String
  originalShoutVoidGeohash_contains: String
  originalShoutVoidGeohash_not_contains: String
  originalShoutVoidGeohash_starts_with: String
  originalShoutVoidGeohash_not_starts_with: String
  originalShoutVoidGeohash_ends_with: String
  originalShoutVoidGeohash_not_ends_with: String
  voteCount: Int
  voteCount_not: Int
  voteCount_in: [Int!]
  voteCount_not_in: [Int!]
  voteCount_lt: Int
  voteCount_lte: Int
  voteCount_gt: Int
  voteCount_gte: Int
  AND: [EchoOfShoutInVoidScalarWhereInput!]
  OR: [EchoOfShoutInVoidScalarWhereInput!]
  NOT: [EchoOfShoutInVoidScalarWhereInput!]
}

type EchoOfShoutInVoidSubscriptionPayload {
  mutation: MutationType!
  node: EchoOfShoutInVoid
  updatedFields: [String!]
  previousValues: EchoOfShoutInVoidPreviousValues
}

input EchoOfShoutInVoidSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: EchoOfShoutInVoidWhereInput
  AND: [EchoOfShoutInVoidSubscriptionWhereInput!]
  OR: [EchoOfShoutInVoidSubscriptionWhereInput!]
  NOT: [EchoOfShoutInVoidSubscriptionWhereInput!]
}

input EchoOfShoutInVoidUpdateInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedEchosOfShoutsInVoidInput
  originalShoutContent: ContentUpdateOneRequiredInput
  originalShoutVoidGeohash: String
  originalShoutInVoid: ShoutInVoidUpdateOneRequiredWithoutEchosOfShoutInVoidInput
  nvoid: NVoidUpdateOneRequiredWithoutEchosOfShoutsInput
  voteCount: Int
  echosOfEchoInVoid: EchoOfEchoInVoidUpdateManyWithoutOriginalEchoOfShoutInVoidInput
  replies: ReplyToEchoOfShoutInVoidUpdateManyWithoutOriginalEchoOfShoutInVoidInput
}

input EchoOfShoutInVoidUpdateManyDataInput {
  originalShoutVoidGeohash: String
  voteCount: Int
}

input EchoOfShoutInVoidUpdateManyMutationInput {
  originalShoutVoidGeohash: String
  voteCount: Int
}

input EchoOfShoutInVoidUpdateManyWithoutCreatedByInput {
  create: [EchoOfShoutInVoidCreateWithoutCreatedByInput!]
  delete: [EchoOfShoutInVoidWhereUniqueInput!]
  connect: [EchoOfShoutInVoidWhereUniqueInput!]
  set: [EchoOfShoutInVoidWhereUniqueInput!]
  disconnect: [EchoOfShoutInVoidWhereUniqueInput!]
  update: [EchoOfShoutInVoidUpdateWithWhereUniqueWithoutCreatedByInput!]
  upsert: [EchoOfShoutInVoidUpsertWithWhereUniqueWithoutCreatedByInput!]
  deleteMany: [EchoOfShoutInVoidScalarWhereInput!]
  updateMany: [EchoOfShoutInVoidUpdateManyWithWhereNestedInput!]
}

input EchoOfShoutInVoidUpdateManyWithoutNvoidInput {
  create: [EchoOfShoutInVoidCreateWithoutNvoidInput!]
  delete: [EchoOfShoutInVoidWhereUniqueInput!]
  connect: [EchoOfShoutInVoidWhereUniqueInput!]
  set: [EchoOfShoutInVoidWhereUniqueInput!]
  disconnect: [EchoOfShoutInVoidWhereUniqueInput!]
  update: [EchoOfShoutInVoidUpdateWithWhereUniqueWithoutNvoidInput!]
  upsert: [EchoOfShoutInVoidUpsertWithWhereUniqueWithoutNvoidInput!]
  deleteMany: [EchoOfShoutInVoidScalarWhereInput!]
  updateMany: [EchoOfShoutInVoidUpdateManyWithWhereNestedInput!]
}

input EchoOfShoutInVoidUpdateManyWithoutOriginalShoutInVoidInput {
  create: [EchoOfShoutInVoidCreateWithoutOriginalShoutInVoidInput!]
  delete: [EchoOfShoutInVoidWhereUniqueInput!]
  connect: [EchoOfShoutInVoidWhereUniqueInput!]
  set: [EchoOfShoutInVoidWhereUniqueInput!]
  disconnect: [EchoOfShoutInVoidWhereUniqueInput!]
  update: [EchoOfShoutInVoidUpdateWithWhereUniqueWithoutOriginalShoutInVoidInput!]
  upsert: [EchoOfShoutInVoidUpsertWithWhereUniqueWithoutOriginalShoutInVoidInput!]
  deleteMany: [EchoOfShoutInVoidScalarWhereInput!]
  updateMany: [EchoOfShoutInVoidUpdateManyWithWhereNestedInput!]
}

input EchoOfShoutInVoidUpdateManyWithWhereNestedInput {
  where: EchoOfShoutInVoidScalarWhereInput!
  data: EchoOfShoutInVoidUpdateManyDataInput!
}

input EchoOfShoutInVoidUpdateOneRequiredWithoutEchosOfEchoInVoidInput {
  create: EchoOfShoutInVoidCreateWithoutEchosOfEchoInVoidInput
  update: EchoOfShoutInVoidUpdateWithoutEchosOfEchoInVoidDataInput
  upsert: EchoOfShoutInVoidUpsertWithoutEchosOfEchoInVoidInput
  connect: EchoOfShoutInVoidWhereUniqueInput
}

input EchoOfShoutInVoidUpdateOneRequiredWithoutRepliesInput {
  create: EchoOfShoutInVoidCreateWithoutRepliesInput
  update: EchoOfShoutInVoidUpdateWithoutRepliesDataInput
  upsert: EchoOfShoutInVoidUpsertWithoutRepliesInput
  connect: EchoOfShoutInVoidWhereUniqueInput
}

input EchoOfShoutInVoidUpdateWithoutCreatedByDataInput {
  originalShoutContent: ContentUpdateOneRequiredInput
  originalShoutVoidGeohash: String
  originalShoutInVoid: ShoutInVoidUpdateOneRequiredWithoutEchosOfShoutInVoidInput
  nvoid: NVoidUpdateOneRequiredWithoutEchosOfShoutsInput
  voteCount: Int
  echosOfEchoInVoid: EchoOfEchoInVoidUpdateManyWithoutOriginalEchoOfShoutInVoidInput
  replies: ReplyToEchoOfShoutInVoidUpdateManyWithoutOriginalEchoOfShoutInVoidInput
}

input EchoOfShoutInVoidUpdateWithoutEchosOfEchoInVoidDataInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedEchosOfShoutsInVoidInput
  originalShoutContent: ContentUpdateOneRequiredInput
  originalShoutVoidGeohash: String
  originalShoutInVoid: ShoutInVoidUpdateOneRequiredWithoutEchosOfShoutInVoidInput
  nvoid: NVoidUpdateOneRequiredWithoutEchosOfShoutsInput
  voteCount: Int
  replies: ReplyToEchoOfShoutInVoidUpdateManyWithoutOriginalEchoOfShoutInVoidInput
}

input EchoOfShoutInVoidUpdateWithoutNvoidDataInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedEchosOfShoutsInVoidInput
  originalShoutContent: ContentUpdateOneRequiredInput
  originalShoutVoidGeohash: String
  originalShoutInVoid: ShoutInVoidUpdateOneRequiredWithoutEchosOfShoutInVoidInput
  voteCount: Int
  echosOfEchoInVoid: EchoOfEchoInVoidUpdateManyWithoutOriginalEchoOfShoutInVoidInput
  replies: ReplyToEchoOfShoutInVoidUpdateManyWithoutOriginalEchoOfShoutInVoidInput
}

input EchoOfShoutInVoidUpdateWithoutOriginalShoutInVoidDataInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedEchosOfShoutsInVoidInput
  originalShoutContent: ContentUpdateOneRequiredInput
  originalShoutVoidGeohash: String
  nvoid: NVoidUpdateOneRequiredWithoutEchosOfShoutsInput
  voteCount: Int
  echosOfEchoInVoid: EchoOfEchoInVoidUpdateManyWithoutOriginalEchoOfShoutInVoidInput
  replies: ReplyToEchoOfShoutInVoidUpdateManyWithoutOriginalEchoOfShoutInVoidInput
}

input EchoOfShoutInVoidUpdateWithoutRepliesDataInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedEchosOfShoutsInVoidInput
  originalShoutContent: ContentUpdateOneRequiredInput
  originalShoutVoidGeohash: String
  originalShoutInVoid: ShoutInVoidUpdateOneRequiredWithoutEchosOfShoutInVoidInput
  nvoid: NVoidUpdateOneRequiredWithoutEchosOfShoutsInput
  voteCount: Int
  echosOfEchoInVoid: EchoOfEchoInVoidUpdateManyWithoutOriginalEchoOfShoutInVoidInput
}

input EchoOfShoutInVoidUpdateWithWhereUniqueWithoutCreatedByInput {
  where: EchoOfShoutInVoidWhereUniqueInput!
  data: EchoOfShoutInVoidUpdateWithoutCreatedByDataInput!
}

input EchoOfShoutInVoidUpdateWithWhereUniqueWithoutNvoidInput {
  where: EchoOfShoutInVoidWhereUniqueInput!
  data: EchoOfShoutInVoidUpdateWithoutNvoidDataInput!
}

input EchoOfShoutInVoidUpdateWithWhereUniqueWithoutOriginalShoutInVoidInput {
  where: EchoOfShoutInVoidWhereUniqueInput!
  data: EchoOfShoutInVoidUpdateWithoutOriginalShoutInVoidDataInput!
}

input EchoOfShoutInVoidUpsertWithoutEchosOfEchoInVoidInput {
  update: EchoOfShoutInVoidUpdateWithoutEchosOfEchoInVoidDataInput!
  create: EchoOfShoutInVoidCreateWithoutEchosOfEchoInVoidInput!
}

input EchoOfShoutInVoidUpsertWithoutRepliesInput {
  update: EchoOfShoutInVoidUpdateWithoutRepliesDataInput!
  create: EchoOfShoutInVoidCreateWithoutRepliesInput!
}

input EchoOfShoutInVoidUpsertWithWhereUniqueWithoutCreatedByInput {
  where: EchoOfShoutInVoidWhereUniqueInput!
  update: EchoOfShoutInVoidUpdateWithoutCreatedByDataInput!
  create: EchoOfShoutInVoidCreateWithoutCreatedByInput!
}

input EchoOfShoutInVoidUpsertWithWhereUniqueWithoutNvoidInput {
  where: EchoOfShoutInVoidWhereUniqueInput!
  update: EchoOfShoutInVoidUpdateWithoutNvoidDataInput!
  create: EchoOfShoutInVoidCreateWithoutNvoidInput!
}

input EchoOfShoutInVoidUpsertWithWhereUniqueWithoutOriginalShoutInVoidInput {
  where: EchoOfShoutInVoidWhereUniqueInput!
  update: EchoOfShoutInVoidUpdateWithoutOriginalShoutInVoidDataInput!
  create: EchoOfShoutInVoidCreateWithoutOriginalShoutInVoidInput!
}

input EchoOfShoutInVoidWhereInput {
  echoOfShoutInVoidId: ID
  echoOfShoutInVoidId_not: ID
  echoOfShoutInVoidId_in: [ID!]
  echoOfShoutInVoidId_not_in: [ID!]
  echoOfShoutInVoidId_lt: ID
  echoOfShoutInVoidId_lte: ID
  echoOfShoutInVoidId_gt: ID
  echoOfShoutInVoidId_gte: ID
  echoOfShoutInVoidId_contains: ID
  echoOfShoutInVoidId_not_contains: ID
  echoOfShoutInVoidId_starts_with: ID
  echoOfShoutInVoidId_not_starts_with: ID
  echoOfShoutInVoidId_ends_with: ID
  echoOfShoutInVoidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdBy: UserWhereInput
  originalShoutContent: ContentWhereInput
  originalShoutVoidGeohash: String
  originalShoutVoidGeohash_not: String
  originalShoutVoidGeohash_in: [String!]
  originalShoutVoidGeohash_not_in: [String!]
  originalShoutVoidGeohash_lt: String
  originalShoutVoidGeohash_lte: String
  originalShoutVoidGeohash_gt: String
  originalShoutVoidGeohash_gte: String
  originalShoutVoidGeohash_contains: String
  originalShoutVoidGeohash_not_contains: String
  originalShoutVoidGeohash_starts_with: String
  originalShoutVoidGeohash_not_starts_with: String
  originalShoutVoidGeohash_ends_with: String
  originalShoutVoidGeohash_not_ends_with: String
  originalShoutInVoid: ShoutInVoidWhereInput
  nvoid: NVoidWhereInput
  voteCount: Int
  voteCount_not: Int
  voteCount_in: [Int!]
  voteCount_not_in: [Int!]
  voteCount_lt: Int
  voteCount_lte: Int
  voteCount_gt: Int
  voteCount_gte: Int
  echosOfEchoInVoid_every: EchoOfEchoInVoidWhereInput
  echosOfEchoInVoid_some: EchoOfEchoInVoidWhereInput
  echosOfEchoInVoid_none: EchoOfEchoInVoidWhereInput
  replies_every: ReplyToEchoOfShoutInVoidWhereInput
  replies_some: ReplyToEchoOfShoutInVoidWhereInput
  replies_none: ReplyToEchoOfShoutInVoidWhereInput
  AND: [EchoOfShoutInVoidWhereInput!]
  OR: [EchoOfShoutInVoidWhereInput!]
  NOT: [EchoOfShoutInVoidWhereInput!]
}

input EchoOfShoutInVoidWhereUniqueInput {
  echoOfShoutInVoidId: ID
}

scalar Long

type Mutation {
  createContent(data: ContentCreateInput!): Content!
  updateContent(data: ContentUpdateInput!, where: ContentWhereUniqueInput!): Content
  updateManyContents(data: ContentUpdateManyMutationInput!, where: ContentWhereInput): BatchPayload!
  upsertContent(where: ContentWhereUniqueInput!, create: ContentCreateInput!, update: ContentUpdateInput!): Content!
  deleteContent(where: ContentWhereUniqueInput!): Content
  deleteManyContents(where: ContentWhereInput): BatchPayload!
  createEchoOfEchoInVoid(data: EchoOfEchoInVoidCreateInput!): EchoOfEchoInVoid!
  updateEchoOfEchoInVoid(data: EchoOfEchoInVoidUpdateInput!, where: EchoOfEchoInVoidWhereUniqueInput!): EchoOfEchoInVoid
  updateManyEchoOfEchoInVoids(data: EchoOfEchoInVoidUpdateManyMutationInput!, where: EchoOfEchoInVoidWhereInput): BatchPayload!
  upsertEchoOfEchoInVoid(where: EchoOfEchoInVoidWhereUniqueInput!, create: EchoOfEchoInVoidCreateInput!, update: EchoOfEchoInVoidUpdateInput!): EchoOfEchoInVoid!
  deleteEchoOfEchoInVoid(where: EchoOfEchoInVoidWhereUniqueInput!): EchoOfEchoInVoid
  deleteManyEchoOfEchoInVoids(where: EchoOfEchoInVoidWhereInput): BatchPayload!
  createEchoOfShoutInVoid(data: EchoOfShoutInVoidCreateInput!): EchoOfShoutInVoid!
  updateEchoOfShoutInVoid(data: EchoOfShoutInVoidUpdateInput!, where: EchoOfShoutInVoidWhereUniqueInput!): EchoOfShoutInVoid
  updateManyEchoOfShoutInVoids(data: EchoOfShoutInVoidUpdateManyMutationInput!, where: EchoOfShoutInVoidWhereInput): BatchPayload!
  upsertEchoOfShoutInVoid(where: EchoOfShoutInVoidWhereUniqueInput!, create: EchoOfShoutInVoidCreateInput!, update: EchoOfShoutInVoidUpdateInput!): EchoOfShoutInVoid!
  deleteEchoOfShoutInVoid(where: EchoOfShoutInVoidWhereUniqueInput!): EchoOfShoutInVoid
  deleteManyEchoOfShoutInVoids(where: EchoOfShoutInVoidWhereInput): BatchPayload!
  createNVoid(data: NVoidCreateInput!): NVoid!
  updateNVoid(data: NVoidUpdateInput!, where: NVoidWhereUniqueInput!): NVoid
  updateManyNVoids(data: NVoidUpdateManyMutationInput!, where: NVoidWhereInput): BatchPayload!
  upsertNVoid(where: NVoidWhereUniqueInput!, create: NVoidCreateInput!, update: NVoidUpdateInput!): NVoid!
  deleteNVoid(where: NVoidWhereUniqueInput!): NVoid
  deleteManyNVoids(where: NVoidWhereInput): BatchPayload!
  createReplyToEchoOfEchoInVoid(data: ReplyToEchoOfEchoInVoidCreateInput!): ReplyToEchoOfEchoInVoid!
  updateReplyToEchoOfEchoInVoid(data: ReplyToEchoOfEchoInVoidUpdateInput!, where: ReplyToEchoOfEchoInVoidWhereUniqueInput!): ReplyToEchoOfEchoInVoid
  updateManyReplyToEchoOfEchoInVoids(data: ReplyToEchoOfEchoInVoidUpdateManyMutationInput!, where: ReplyToEchoOfEchoInVoidWhereInput): BatchPayload!
  upsertReplyToEchoOfEchoInVoid(where: ReplyToEchoOfEchoInVoidWhereUniqueInput!, create: ReplyToEchoOfEchoInVoidCreateInput!, update: ReplyToEchoOfEchoInVoidUpdateInput!): ReplyToEchoOfEchoInVoid!
  deleteReplyToEchoOfEchoInVoid(where: ReplyToEchoOfEchoInVoidWhereUniqueInput!): ReplyToEchoOfEchoInVoid
  deleteManyReplyToEchoOfEchoInVoids(where: ReplyToEchoOfEchoInVoidWhereInput): BatchPayload!
  createReplyToEchoOfShoutInVoid(data: ReplyToEchoOfShoutInVoidCreateInput!): ReplyToEchoOfShoutInVoid!
  updateReplyToEchoOfShoutInVoid(data: ReplyToEchoOfShoutInVoidUpdateInput!, where: ReplyToEchoOfShoutInVoidWhereUniqueInput!): ReplyToEchoOfShoutInVoid
  updateManyReplyToEchoOfShoutInVoids(data: ReplyToEchoOfShoutInVoidUpdateManyMutationInput!, where: ReplyToEchoOfShoutInVoidWhereInput): BatchPayload!
  upsertReplyToEchoOfShoutInVoid(where: ReplyToEchoOfShoutInVoidWhereUniqueInput!, create: ReplyToEchoOfShoutInVoidCreateInput!, update: ReplyToEchoOfShoutInVoidUpdateInput!): ReplyToEchoOfShoutInVoid!
  deleteReplyToEchoOfShoutInVoid(where: ReplyToEchoOfShoutInVoidWhereUniqueInput!): ReplyToEchoOfShoutInVoid
  deleteManyReplyToEchoOfShoutInVoids(where: ReplyToEchoOfShoutInVoidWhereInput): BatchPayload!
  createReplyToShoutInVoid(data: ReplyToShoutInVoidCreateInput!): ReplyToShoutInVoid!
  updateReplyToShoutInVoid(data: ReplyToShoutInVoidUpdateInput!, where: ReplyToShoutInVoidWhereUniqueInput!): ReplyToShoutInVoid
  updateManyReplyToShoutInVoids(data: ReplyToShoutInVoidUpdateManyMutationInput!, where: ReplyToShoutInVoidWhereInput): BatchPayload!
  upsertReplyToShoutInVoid(where: ReplyToShoutInVoidWhereUniqueInput!, create: ReplyToShoutInVoidCreateInput!, update: ReplyToShoutInVoidUpdateInput!): ReplyToShoutInVoid!
  deleteReplyToShoutInVoid(where: ReplyToShoutInVoidWhereUniqueInput!): ReplyToShoutInVoid
  deleteManyReplyToShoutInVoids(where: ReplyToShoutInVoidWhereInput): BatchPayload!
  createShoutInVoid(data: ShoutInVoidCreateInput!): ShoutInVoid!
  updateShoutInVoid(data: ShoutInVoidUpdateInput!, where: ShoutInVoidWhereUniqueInput!): ShoutInVoid
  updateManyShoutInVoids(data: ShoutInVoidUpdateManyMutationInput!, where: ShoutInVoidWhereInput): BatchPayload!
  upsertShoutInVoid(where: ShoutInVoidWhereUniqueInput!, create: ShoutInVoidCreateInput!, update: ShoutInVoidUpdateInput!): ShoutInVoid!
  deleteShoutInVoid(where: ShoutInVoidWhereUniqueInput!): ShoutInVoid
  deleteManyShoutInVoids(where: ShoutInVoidWhereInput): BatchPayload!
  createUser(data: UserCreateInput!): User!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  deleteUser(where: UserWhereUniqueInput!): User
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  createUserActivatedEchoOfEcho(data: UserActivatedEchoOfEchoCreateInput!): UserActivatedEchoOfEcho!
  updateUserActivatedEchoOfEcho(data: UserActivatedEchoOfEchoUpdateInput!, where: UserActivatedEchoOfEchoWhereUniqueInput!): UserActivatedEchoOfEcho
  updateManyUserActivatedEchoOfEchoes(data: UserActivatedEchoOfEchoUpdateManyMutationInput!, where: UserActivatedEchoOfEchoWhereInput): BatchPayload!
  upsertUserActivatedEchoOfEcho(where: UserActivatedEchoOfEchoWhereUniqueInput!, create: UserActivatedEchoOfEchoCreateInput!, update: UserActivatedEchoOfEchoUpdateInput!): UserActivatedEchoOfEcho!
  deleteUserActivatedEchoOfEcho(where: UserActivatedEchoOfEchoWhereUniqueInput!): UserActivatedEchoOfEcho
  deleteManyUserActivatedEchoOfEchoes(where: UserActivatedEchoOfEchoWhereInput): BatchPayload!
  createUserActivatedEchoOfShout(data: UserActivatedEchoOfShoutCreateInput!): UserActivatedEchoOfShout!
  updateUserActivatedEchoOfShout(data: UserActivatedEchoOfShoutUpdateInput!, where: UserActivatedEchoOfShoutWhereUniqueInput!): UserActivatedEchoOfShout
  updateManyUserActivatedEchoOfShouts(data: UserActivatedEchoOfShoutUpdateManyMutationInput!, where: UserActivatedEchoOfShoutWhereInput): BatchPayload!
  upsertUserActivatedEchoOfShout(where: UserActivatedEchoOfShoutWhereUniqueInput!, create: UserActivatedEchoOfShoutCreateInput!, update: UserActivatedEchoOfShoutUpdateInput!): UserActivatedEchoOfShout!
  deleteUserActivatedEchoOfShout(where: UserActivatedEchoOfShoutWhereUniqueInput!): UserActivatedEchoOfShout
  deleteManyUserActivatedEchoOfShouts(where: UserActivatedEchoOfShoutWhereInput): BatchPayload!
  createUserSavedVoid(data: UserSavedVoidCreateInput!): UserSavedVoid!
  updateUserSavedVoid(data: UserSavedVoidUpdateInput!, where: UserSavedVoidWhereUniqueInput!): UserSavedVoid
  updateManyUserSavedVoids(data: UserSavedVoidUpdateManyMutationInput!, where: UserSavedVoidWhereInput): BatchPayload!
  upsertUserSavedVoid(where: UserSavedVoidWhereUniqueInput!, create: UserSavedVoidCreateInput!, update: UserSavedVoidUpdateInput!): UserSavedVoid!
  deleteUserSavedVoid(where: UserSavedVoidWhereUniqueInput!): UserSavedVoid
  deleteManyUserSavedVoids(where: UserSavedVoidWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type NVoid {
  voidId: ID!
  createdAt: DateTime!
  createdBy: User!
  voidGeohash: String!
  shouts(where: ShoutInVoidWhereInput, orderBy: ShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ShoutInVoid!]
  echosOfShouts(where: EchoOfShoutInVoidWhereInput, orderBy: EchoOfShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [EchoOfShoutInVoid!]
  echosOfEchos(where: EchoOfEchoInVoidWhereInput, orderBy: EchoOfEchoInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [EchoOfEchoInVoid!]
}

type NVoidConnection {
  pageInfo: PageInfo!
  edges: [NVoidEdge]!
  aggregate: AggregateNVoid!
}

input NVoidCreateInput {
  voidId: ID
  createdBy: UserCreateOneWithoutCreatedVoidsInput!
  voidGeohash: String!
  shouts: ShoutInVoidCreateManyWithoutNvoidInput
  echosOfShouts: EchoOfShoutInVoidCreateManyWithoutNvoidInput
  echosOfEchos: EchoOfEchoInVoidCreateManyWithoutNvoidInput
}

input NVoidCreateManyWithoutCreatedByInput {
  create: [NVoidCreateWithoutCreatedByInput!]
  connect: [NVoidWhereUniqueInput!]
}

input NVoidCreateOneWithoutEchosOfEchosInput {
  create: NVoidCreateWithoutEchosOfEchosInput
  connect: NVoidWhereUniqueInput
}

input NVoidCreateOneWithoutEchosOfShoutsInput {
  create: NVoidCreateWithoutEchosOfShoutsInput
  connect: NVoidWhereUniqueInput
}

input NVoidCreateOneWithoutShoutsInput {
  create: NVoidCreateWithoutShoutsInput
  connect: NVoidWhereUniqueInput
}

input NVoidCreateWithoutCreatedByInput {
  voidId: ID
  voidGeohash: String!
  shouts: ShoutInVoidCreateManyWithoutNvoidInput
  echosOfShouts: EchoOfShoutInVoidCreateManyWithoutNvoidInput
  echosOfEchos: EchoOfEchoInVoidCreateManyWithoutNvoidInput
}

input NVoidCreateWithoutEchosOfEchosInput {
  voidId: ID
  createdBy: UserCreateOneWithoutCreatedVoidsInput!
  voidGeohash: String!
  shouts: ShoutInVoidCreateManyWithoutNvoidInput
  echosOfShouts: EchoOfShoutInVoidCreateManyWithoutNvoidInput
}

input NVoidCreateWithoutEchosOfShoutsInput {
  voidId: ID
  createdBy: UserCreateOneWithoutCreatedVoidsInput!
  voidGeohash: String!
  shouts: ShoutInVoidCreateManyWithoutNvoidInput
  echosOfEchos: EchoOfEchoInVoidCreateManyWithoutNvoidInput
}

input NVoidCreateWithoutShoutsInput {
  voidId: ID
  createdBy: UserCreateOneWithoutCreatedVoidsInput!
  voidGeohash: String!
  echosOfShouts: EchoOfShoutInVoidCreateManyWithoutNvoidInput
  echosOfEchos: EchoOfEchoInVoidCreateManyWithoutNvoidInput
}

type NVoidEdge {
  node: NVoid!
  cursor: String!
}

enum NVoidOrderByInput {
  voidId_ASC
  voidId_DESC
  createdAt_ASC
  createdAt_DESC
  voidGeohash_ASC
  voidGeohash_DESC
}

type NVoidPreviousValues {
  voidId: ID!
  createdAt: DateTime!
  voidGeohash: String!
}

input NVoidScalarWhereInput {
  voidId: ID
  voidId_not: ID
  voidId_in: [ID!]
  voidId_not_in: [ID!]
  voidId_lt: ID
  voidId_lte: ID
  voidId_gt: ID
  voidId_gte: ID
  voidId_contains: ID
  voidId_not_contains: ID
  voidId_starts_with: ID
  voidId_not_starts_with: ID
  voidId_ends_with: ID
  voidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  voidGeohash: String
  voidGeohash_not: String
  voidGeohash_in: [String!]
  voidGeohash_not_in: [String!]
  voidGeohash_lt: String
  voidGeohash_lte: String
  voidGeohash_gt: String
  voidGeohash_gte: String
  voidGeohash_contains: String
  voidGeohash_not_contains: String
  voidGeohash_starts_with: String
  voidGeohash_not_starts_with: String
  voidGeohash_ends_with: String
  voidGeohash_not_ends_with: String
  AND: [NVoidScalarWhereInput!]
  OR: [NVoidScalarWhereInput!]
  NOT: [NVoidScalarWhereInput!]
}

type NVoidSubscriptionPayload {
  mutation: MutationType!
  node: NVoid
  updatedFields: [String!]
  previousValues: NVoidPreviousValues
}

input NVoidSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: NVoidWhereInput
  AND: [NVoidSubscriptionWhereInput!]
  OR: [NVoidSubscriptionWhereInput!]
  NOT: [NVoidSubscriptionWhereInput!]
}

input NVoidUpdateInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedVoidsInput
  voidGeohash: String
  shouts: ShoutInVoidUpdateManyWithoutNvoidInput
  echosOfShouts: EchoOfShoutInVoidUpdateManyWithoutNvoidInput
  echosOfEchos: EchoOfEchoInVoidUpdateManyWithoutNvoidInput
}

input NVoidUpdateManyDataInput {
  voidGeohash: String
}

input NVoidUpdateManyMutationInput {
  voidGeohash: String
}

input NVoidUpdateManyWithoutCreatedByInput {
  create: [NVoidCreateWithoutCreatedByInput!]
  delete: [NVoidWhereUniqueInput!]
  connect: [NVoidWhereUniqueInput!]
  set: [NVoidWhereUniqueInput!]
  disconnect: [NVoidWhereUniqueInput!]
  update: [NVoidUpdateWithWhereUniqueWithoutCreatedByInput!]
  upsert: [NVoidUpsertWithWhereUniqueWithoutCreatedByInput!]
  deleteMany: [NVoidScalarWhereInput!]
  updateMany: [NVoidUpdateManyWithWhereNestedInput!]
}

input NVoidUpdateManyWithWhereNestedInput {
  where: NVoidScalarWhereInput!
  data: NVoidUpdateManyDataInput!
}

input NVoidUpdateOneRequiredWithoutEchosOfEchosInput {
  create: NVoidCreateWithoutEchosOfEchosInput
  update: NVoidUpdateWithoutEchosOfEchosDataInput
  upsert: NVoidUpsertWithoutEchosOfEchosInput
  connect: NVoidWhereUniqueInput
}

input NVoidUpdateOneRequiredWithoutEchosOfShoutsInput {
  create: NVoidCreateWithoutEchosOfShoutsInput
  update: NVoidUpdateWithoutEchosOfShoutsDataInput
  upsert: NVoidUpsertWithoutEchosOfShoutsInput
  connect: NVoidWhereUniqueInput
}

input NVoidUpdateOneRequiredWithoutShoutsInput {
  create: NVoidCreateWithoutShoutsInput
  update: NVoidUpdateWithoutShoutsDataInput
  upsert: NVoidUpsertWithoutShoutsInput
  connect: NVoidWhereUniqueInput
}

input NVoidUpdateWithoutCreatedByDataInput {
  voidGeohash: String
  shouts: ShoutInVoidUpdateManyWithoutNvoidInput
  echosOfShouts: EchoOfShoutInVoidUpdateManyWithoutNvoidInput
  echosOfEchos: EchoOfEchoInVoidUpdateManyWithoutNvoidInput
}

input NVoidUpdateWithoutEchosOfEchosDataInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedVoidsInput
  voidGeohash: String
  shouts: ShoutInVoidUpdateManyWithoutNvoidInput
  echosOfShouts: EchoOfShoutInVoidUpdateManyWithoutNvoidInput
}

input NVoidUpdateWithoutEchosOfShoutsDataInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedVoidsInput
  voidGeohash: String
  shouts: ShoutInVoidUpdateManyWithoutNvoidInput
  echosOfEchos: EchoOfEchoInVoidUpdateManyWithoutNvoidInput
}

input NVoidUpdateWithoutShoutsDataInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedVoidsInput
  voidGeohash: String
  echosOfShouts: EchoOfShoutInVoidUpdateManyWithoutNvoidInput
  echosOfEchos: EchoOfEchoInVoidUpdateManyWithoutNvoidInput
}

input NVoidUpdateWithWhereUniqueWithoutCreatedByInput {
  where: NVoidWhereUniqueInput!
  data: NVoidUpdateWithoutCreatedByDataInput!
}

input NVoidUpsertWithoutEchosOfEchosInput {
  update: NVoidUpdateWithoutEchosOfEchosDataInput!
  create: NVoidCreateWithoutEchosOfEchosInput!
}

input NVoidUpsertWithoutEchosOfShoutsInput {
  update: NVoidUpdateWithoutEchosOfShoutsDataInput!
  create: NVoidCreateWithoutEchosOfShoutsInput!
}

input NVoidUpsertWithoutShoutsInput {
  update: NVoidUpdateWithoutShoutsDataInput!
  create: NVoidCreateWithoutShoutsInput!
}

input NVoidUpsertWithWhereUniqueWithoutCreatedByInput {
  where: NVoidWhereUniqueInput!
  update: NVoidUpdateWithoutCreatedByDataInput!
  create: NVoidCreateWithoutCreatedByInput!
}

input NVoidWhereInput {
  voidId: ID
  voidId_not: ID
  voidId_in: [ID!]
  voidId_not_in: [ID!]
  voidId_lt: ID
  voidId_lte: ID
  voidId_gt: ID
  voidId_gte: ID
  voidId_contains: ID
  voidId_not_contains: ID
  voidId_starts_with: ID
  voidId_not_starts_with: ID
  voidId_ends_with: ID
  voidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdBy: UserWhereInput
  voidGeohash: String
  voidGeohash_not: String
  voidGeohash_in: [String!]
  voidGeohash_not_in: [String!]
  voidGeohash_lt: String
  voidGeohash_lte: String
  voidGeohash_gt: String
  voidGeohash_gte: String
  voidGeohash_contains: String
  voidGeohash_not_contains: String
  voidGeohash_starts_with: String
  voidGeohash_not_starts_with: String
  voidGeohash_ends_with: String
  voidGeohash_not_ends_with: String
  shouts_every: ShoutInVoidWhereInput
  shouts_some: ShoutInVoidWhereInput
  shouts_none: ShoutInVoidWhereInput
  echosOfShouts_every: EchoOfShoutInVoidWhereInput
  echosOfShouts_some: EchoOfShoutInVoidWhereInput
  echosOfShouts_none: EchoOfShoutInVoidWhereInput
  echosOfEchos_every: EchoOfEchoInVoidWhereInput
  echosOfEchos_some: EchoOfEchoInVoidWhereInput
  echosOfEchos_none: EchoOfEchoInVoidWhereInput
  AND: [NVoidWhereInput!]
  OR: [NVoidWhereInput!]
  NOT: [NVoidWhereInput!]
}

input NVoidWhereUniqueInput {
  voidId: ID
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  content(where: ContentWhereUniqueInput!): Content
  contents(where: ContentWhereInput, orderBy: ContentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Content]!
  contentsConnection(where: ContentWhereInput, orderBy: ContentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ContentConnection!
  echoOfEchoInVoid(where: EchoOfEchoInVoidWhereUniqueInput!): EchoOfEchoInVoid
  echoOfEchoInVoids(where: EchoOfEchoInVoidWhereInput, orderBy: EchoOfEchoInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [EchoOfEchoInVoid]!
  echoOfEchoInVoidsConnection(where: EchoOfEchoInVoidWhereInput, orderBy: EchoOfEchoInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): EchoOfEchoInVoidConnection!
  echoOfShoutInVoid(where: EchoOfShoutInVoidWhereUniqueInput!): EchoOfShoutInVoid
  echoOfShoutInVoids(where: EchoOfShoutInVoidWhereInput, orderBy: EchoOfShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [EchoOfShoutInVoid]!
  echoOfShoutInVoidsConnection(where: EchoOfShoutInVoidWhereInput, orderBy: EchoOfShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): EchoOfShoutInVoidConnection!
  nVoid(where: NVoidWhereUniqueInput!): NVoid
  nVoids(where: NVoidWhereInput, orderBy: NVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [NVoid]!
  nVoidsConnection(where: NVoidWhereInput, orderBy: NVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): NVoidConnection!
  replyToEchoOfEchoInVoid(where: ReplyToEchoOfEchoInVoidWhereUniqueInput!): ReplyToEchoOfEchoInVoid
  replyToEchoOfEchoInVoids(where: ReplyToEchoOfEchoInVoidWhereInput, orderBy: ReplyToEchoOfEchoInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ReplyToEchoOfEchoInVoid]!
  replyToEchoOfEchoInVoidsConnection(where: ReplyToEchoOfEchoInVoidWhereInput, orderBy: ReplyToEchoOfEchoInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ReplyToEchoOfEchoInVoidConnection!
  replyToEchoOfShoutInVoid(where: ReplyToEchoOfShoutInVoidWhereUniqueInput!): ReplyToEchoOfShoutInVoid
  replyToEchoOfShoutInVoids(where: ReplyToEchoOfShoutInVoidWhereInput, orderBy: ReplyToEchoOfShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ReplyToEchoOfShoutInVoid]!
  replyToEchoOfShoutInVoidsConnection(where: ReplyToEchoOfShoutInVoidWhereInput, orderBy: ReplyToEchoOfShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ReplyToEchoOfShoutInVoidConnection!
  replyToShoutInVoid(where: ReplyToShoutInVoidWhereUniqueInput!): ReplyToShoutInVoid
  replyToShoutInVoids(where: ReplyToShoutInVoidWhereInput, orderBy: ReplyToShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ReplyToShoutInVoid]!
  replyToShoutInVoidsConnection(where: ReplyToShoutInVoidWhereInput, orderBy: ReplyToShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ReplyToShoutInVoidConnection!
  shoutInVoid(where: ShoutInVoidWhereUniqueInput!): ShoutInVoid
  shoutInVoids(where: ShoutInVoidWhereInput, orderBy: ShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ShoutInVoid]!
  shoutInVoidsConnection(where: ShoutInVoidWhereInput, orderBy: ShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ShoutInVoidConnection!
  user(where: UserWhereUniqueInput!): User
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  userActivatedEchoOfEcho(where: UserActivatedEchoOfEchoWhereUniqueInput!): UserActivatedEchoOfEcho
  userActivatedEchoOfEchoes(where: UserActivatedEchoOfEchoWhereInput, orderBy: UserActivatedEchoOfEchoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [UserActivatedEchoOfEcho]!
  userActivatedEchoOfEchoesConnection(where: UserActivatedEchoOfEchoWhereInput, orderBy: UserActivatedEchoOfEchoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserActivatedEchoOfEchoConnection!
  userActivatedEchoOfShout(where: UserActivatedEchoOfShoutWhereUniqueInput!): UserActivatedEchoOfShout
  userActivatedEchoOfShouts(where: UserActivatedEchoOfShoutWhereInput, orderBy: UserActivatedEchoOfShoutOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [UserActivatedEchoOfShout]!
  userActivatedEchoOfShoutsConnection(where: UserActivatedEchoOfShoutWhereInput, orderBy: UserActivatedEchoOfShoutOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserActivatedEchoOfShoutConnection!
  userSavedVoid(where: UserSavedVoidWhereUniqueInput!): UserSavedVoid
  userSavedVoids(where: UserSavedVoidWhereInput, orderBy: UserSavedVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [UserSavedVoid]!
  userSavedVoidsConnection(where: UserSavedVoidWhereInput, orderBy: UserSavedVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserSavedVoidConnection!
  node(id: ID!): Node
}

type ReplyToEchoOfEchoInVoid {
  replyToEchoOfEchoInVoidId: ID!
  createdAt: DateTime!
  createdBy: User!
  content: Content!
  voteCount: Int!
  originalEchoOfEchoInVoid: EchoOfEchoInVoid!
}

type ReplyToEchoOfEchoInVoidConnection {
  pageInfo: PageInfo!
  edges: [ReplyToEchoOfEchoInVoidEdge]!
  aggregate: AggregateReplyToEchoOfEchoInVoid!
}

input ReplyToEchoOfEchoInVoidCreateInput {
  replyToEchoOfEchoInVoidId: ID
  createdBy: UserCreateOneWithoutRepliesToEchosOfEchosInVoidInput!
  content: ContentCreateOneInput!
  voteCount: Int!
  originalEchoOfEchoInVoid: EchoOfEchoInVoidCreateOneWithoutRepliesInput!
}

input ReplyToEchoOfEchoInVoidCreateManyWithoutCreatedByInput {
  create: [ReplyToEchoOfEchoInVoidCreateWithoutCreatedByInput!]
  connect: [ReplyToEchoOfEchoInVoidWhereUniqueInput!]
}

input ReplyToEchoOfEchoInVoidCreateManyWithoutOriginalEchoOfEchoInVoidInput {
  create: [ReplyToEchoOfEchoInVoidCreateWithoutOriginalEchoOfEchoInVoidInput!]
  connect: [ReplyToEchoOfEchoInVoidWhereUniqueInput!]
}

input ReplyToEchoOfEchoInVoidCreateWithoutCreatedByInput {
  replyToEchoOfEchoInVoidId: ID
  content: ContentCreateOneInput!
  voteCount: Int!
  originalEchoOfEchoInVoid: EchoOfEchoInVoidCreateOneWithoutRepliesInput!
}

input ReplyToEchoOfEchoInVoidCreateWithoutOriginalEchoOfEchoInVoidInput {
  replyToEchoOfEchoInVoidId: ID
  createdBy: UserCreateOneWithoutRepliesToEchosOfEchosInVoidInput!
  content: ContentCreateOneInput!
  voteCount: Int!
}

type ReplyToEchoOfEchoInVoidEdge {
  node: ReplyToEchoOfEchoInVoid!
  cursor: String!
}

enum ReplyToEchoOfEchoInVoidOrderByInput {
  replyToEchoOfEchoInVoidId_ASC
  replyToEchoOfEchoInVoidId_DESC
  createdAt_ASC
  createdAt_DESC
  voteCount_ASC
  voteCount_DESC
}

type ReplyToEchoOfEchoInVoidPreviousValues {
  replyToEchoOfEchoInVoidId: ID!
  createdAt: DateTime!
  voteCount: Int!
}

input ReplyToEchoOfEchoInVoidScalarWhereInput {
  replyToEchoOfEchoInVoidId: ID
  replyToEchoOfEchoInVoidId_not: ID
  replyToEchoOfEchoInVoidId_in: [ID!]
  replyToEchoOfEchoInVoidId_not_in: [ID!]
  replyToEchoOfEchoInVoidId_lt: ID
  replyToEchoOfEchoInVoidId_lte: ID
  replyToEchoOfEchoInVoidId_gt: ID
  replyToEchoOfEchoInVoidId_gte: ID
  replyToEchoOfEchoInVoidId_contains: ID
  replyToEchoOfEchoInVoidId_not_contains: ID
  replyToEchoOfEchoInVoidId_starts_with: ID
  replyToEchoOfEchoInVoidId_not_starts_with: ID
  replyToEchoOfEchoInVoidId_ends_with: ID
  replyToEchoOfEchoInVoidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  voteCount: Int
  voteCount_not: Int
  voteCount_in: [Int!]
  voteCount_not_in: [Int!]
  voteCount_lt: Int
  voteCount_lte: Int
  voteCount_gt: Int
  voteCount_gte: Int
  AND: [ReplyToEchoOfEchoInVoidScalarWhereInput!]
  OR: [ReplyToEchoOfEchoInVoidScalarWhereInput!]
  NOT: [ReplyToEchoOfEchoInVoidScalarWhereInput!]
}

type ReplyToEchoOfEchoInVoidSubscriptionPayload {
  mutation: MutationType!
  node: ReplyToEchoOfEchoInVoid
  updatedFields: [String!]
  previousValues: ReplyToEchoOfEchoInVoidPreviousValues
}

input ReplyToEchoOfEchoInVoidSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ReplyToEchoOfEchoInVoidWhereInput
  AND: [ReplyToEchoOfEchoInVoidSubscriptionWhereInput!]
  OR: [ReplyToEchoOfEchoInVoidSubscriptionWhereInput!]
  NOT: [ReplyToEchoOfEchoInVoidSubscriptionWhereInput!]
}

input ReplyToEchoOfEchoInVoidUpdateInput {
  createdBy: UserUpdateOneRequiredWithoutRepliesToEchosOfEchosInVoidInput
  content: ContentUpdateOneRequiredInput
  voteCount: Int
  originalEchoOfEchoInVoid: EchoOfEchoInVoidUpdateOneRequiredWithoutRepliesInput
}

input ReplyToEchoOfEchoInVoidUpdateManyDataInput {
  voteCount: Int
}

input ReplyToEchoOfEchoInVoidUpdateManyMutationInput {
  voteCount: Int
}

input ReplyToEchoOfEchoInVoidUpdateManyWithoutCreatedByInput {
  create: [ReplyToEchoOfEchoInVoidCreateWithoutCreatedByInput!]
  delete: [ReplyToEchoOfEchoInVoidWhereUniqueInput!]
  connect: [ReplyToEchoOfEchoInVoidWhereUniqueInput!]
  set: [ReplyToEchoOfEchoInVoidWhereUniqueInput!]
  disconnect: [ReplyToEchoOfEchoInVoidWhereUniqueInput!]
  update: [ReplyToEchoOfEchoInVoidUpdateWithWhereUniqueWithoutCreatedByInput!]
  upsert: [ReplyToEchoOfEchoInVoidUpsertWithWhereUniqueWithoutCreatedByInput!]
  deleteMany: [ReplyToEchoOfEchoInVoidScalarWhereInput!]
  updateMany: [ReplyToEchoOfEchoInVoidUpdateManyWithWhereNestedInput!]
}

input ReplyToEchoOfEchoInVoidUpdateManyWithoutOriginalEchoOfEchoInVoidInput {
  create: [ReplyToEchoOfEchoInVoidCreateWithoutOriginalEchoOfEchoInVoidInput!]
  delete: [ReplyToEchoOfEchoInVoidWhereUniqueInput!]
  connect: [ReplyToEchoOfEchoInVoidWhereUniqueInput!]
  set: [ReplyToEchoOfEchoInVoidWhereUniqueInput!]
  disconnect: [ReplyToEchoOfEchoInVoidWhereUniqueInput!]
  update: [ReplyToEchoOfEchoInVoidUpdateWithWhereUniqueWithoutOriginalEchoOfEchoInVoidInput!]
  upsert: [ReplyToEchoOfEchoInVoidUpsertWithWhereUniqueWithoutOriginalEchoOfEchoInVoidInput!]
  deleteMany: [ReplyToEchoOfEchoInVoidScalarWhereInput!]
  updateMany: [ReplyToEchoOfEchoInVoidUpdateManyWithWhereNestedInput!]
}

input ReplyToEchoOfEchoInVoidUpdateManyWithWhereNestedInput {
  where: ReplyToEchoOfEchoInVoidScalarWhereInput!
  data: ReplyToEchoOfEchoInVoidUpdateManyDataInput!
}

input ReplyToEchoOfEchoInVoidUpdateWithoutCreatedByDataInput {
  content: ContentUpdateOneRequiredInput
  voteCount: Int
  originalEchoOfEchoInVoid: EchoOfEchoInVoidUpdateOneRequiredWithoutRepliesInput
}

input ReplyToEchoOfEchoInVoidUpdateWithoutOriginalEchoOfEchoInVoidDataInput {
  createdBy: UserUpdateOneRequiredWithoutRepliesToEchosOfEchosInVoidInput
  content: ContentUpdateOneRequiredInput
  voteCount: Int
}

input ReplyToEchoOfEchoInVoidUpdateWithWhereUniqueWithoutCreatedByInput {
  where: ReplyToEchoOfEchoInVoidWhereUniqueInput!
  data: ReplyToEchoOfEchoInVoidUpdateWithoutCreatedByDataInput!
}

input ReplyToEchoOfEchoInVoidUpdateWithWhereUniqueWithoutOriginalEchoOfEchoInVoidInput {
  where: ReplyToEchoOfEchoInVoidWhereUniqueInput!
  data: ReplyToEchoOfEchoInVoidUpdateWithoutOriginalEchoOfEchoInVoidDataInput!
}

input ReplyToEchoOfEchoInVoidUpsertWithWhereUniqueWithoutCreatedByInput {
  where: ReplyToEchoOfEchoInVoidWhereUniqueInput!
  update: ReplyToEchoOfEchoInVoidUpdateWithoutCreatedByDataInput!
  create: ReplyToEchoOfEchoInVoidCreateWithoutCreatedByInput!
}

input ReplyToEchoOfEchoInVoidUpsertWithWhereUniqueWithoutOriginalEchoOfEchoInVoidInput {
  where: ReplyToEchoOfEchoInVoidWhereUniqueInput!
  update: ReplyToEchoOfEchoInVoidUpdateWithoutOriginalEchoOfEchoInVoidDataInput!
  create: ReplyToEchoOfEchoInVoidCreateWithoutOriginalEchoOfEchoInVoidInput!
}

input ReplyToEchoOfEchoInVoidWhereInput {
  replyToEchoOfEchoInVoidId: ID
  replyToEchoOfEchoInVoidId_not: ID
  replyToEchoOfEchoInVoidId_in: [ID!]
  replyToEchoOfEchoInVoidId_not_in: [ID!]
  replyToEchoOfEchoInVoidId_lt: ID
  replyToEchoOfEchoInVoidId_lte: ID
  replyToEchoOfEchoInVoidId_gt: ID
  replyToEchoOfEchoInVoidId_gte: ID
  replyToEchoOfEchoInVoidId_contains: ID
  replyToEchoOfEchoInVoidId_not_contains: ID
  replyToEchoOfEchoInVoidId_starts_with: ID
  replyToEchoOfEchoInVoidId_not_starts_with: ID
  replyToEchoOfEchoInVoidId_ends_with: ID
  replyToEchoOfEchoInVoidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdBy: UserWhereInput
  content: ContentWhereInput
  voteCount: Int
  voteCount_not: Int
  voteCount_in: [Int!]
  voteCount_not_in: [Int!]
  voteCount_lt: Int
  voteCount_lte: Int
  voteCount_gt: Int
  voteCount_gte: Int
  originalEchoOfEchoInVoid: EchoOfEchoInVoidWhereInput
  AND: [ReplyToEchoOfEchoInVoidWhereInput!]
  OR: [ReplyToEchoOfEchoInVoidWhereInput!]
  NOT: [ReplyToEchoOfEchoInVoidWhereInput!]
}

input ReplyToEchoOfEchoInVoidWhereUniqueInput {
  replyToEchoOfEchoInVoidId: ID
}

type ReplyToEchoOfShoutInVoid {
  replyToEchoOfShoutInVoidId: ID!
  createdAt: DateTime!
  createdBy: User!
  content: Content!
  voteCount: Int!
  originalEchoOfShoutInVoid: EchoOfShoutInVoid!
}

type ReplyToEchoOfShoutInVoidConnection {
  pageInfo: PageInfo!
  edges: [ReplyToEchoOfShoutInVoidEdge]!
  aggregate: AggregateReplyToEchoOfShoutInVoid!
}

input ReplyToEchoOfShoutInVoidCreateInput {
  replyToEchoOfShoutInVoidId: ID
  createdBy: UserCreateOneWithoutRepliesToEchosOfShoutsInVoidInput!
  content: ContentCreateOneInput!
  voteCount: Int!
  originalEchoOfShoutInVoid: EchoOfShoutInVoidCreateOneWithoutRepliesInput!
}

input ReplyToEchoOfShoutInVoidCreateManyWithoutCreatedByInput {
  create: [ReplyToEchoOfShoutInVoidCreateWithoutCreatedByInput!]
  connect: [ReplyToEchoOfShoutInVoidWhereUniqueInput!]
}

input ReplyToEchoOfShoutInVoidCreateManyWithoutOriginalEchoOfShoutInVoidInput {
  create: [ReplyToEchoOfShoutInVoidCreateWithoutOriginalEchoOfShoutInVoidInput!]
  connect: [ReplyToEchoOfShoutInVoidWhereUniqueInput!]
}

input ReplyToEchoOfShoutInVoidCreateWithoutCreatedByInput {
  replyToEchoOfShoutInVoidId: ID
  content: ContentCreateOneInput!
  voteCount: Int!
  originalEchoOfShoutInVoid: EchoOfShoutInVoidCreateOneWithoutRepliesInput!
}

input ReplyToEchoOfShoutInVoidCreateWithoutOriginalEchoOfShoutInVoidInput {
  replyToEchoOfShoutInVoidId: ID
  createdBy: UserCreateOneWithoutRepliesToEchosOfShoutsInVoidInput!
  content: ContentCreateOneInput!
  voteCount: Int!
}

type ReplyToEchoOfShoutInVoidEdge {
  node: ReplyToEchoOfShoutInVoid!
  cursor: String!
}

enum ReplyToEchoOfShoutInVoidOrderByInput {
  replyToEchoOfShoutInVoidId_ASC
  replyToEchoOfShoutInVoidId_DESC
  createdAt_ASC
  createdAt_DESC
  voteCount_ASC
  voteCount_DESC
}

type ReplyToEchoOfShoutInVoidPreviousValues {
  replyToEchoOfShoutInVoidId: ID!
  createdAt: DateTime!
  voteCount: Int!
}

input ReplyToEchoOfShoutInVoidScalarWhereInput {
  replyToEchoOfShoutInVoidId: ID
  replyToEchoOfShoutInVoidId_not: ID
  replyToEchoOfShoutInVoidId_in: [ID!]
  replyToEchoOfShoutInVoidId_not_in: [ID!]
  replyToEchoOfShoutInVoidId_lt: ID
  replyToEchoOfShoutInVoidId_lte: ID
  replyToEchoOfShoutInVoidId_gt: ID
  replyToEchoOfShoutInVoidId_gte: ID
  replyToEchoOfShoutInVoidId_contains: ID
  replyToEchoOfShoutInVoidId_not_contains: ID
  replyToEchoOfShoutInVoidId_starts_with: ID
  replyToEchoOfShoutInVoidId_not_starts_with: ID
  replyToEchoOfShoutInVoidId_ends_with: ID
  replyToEchoOfShoutInVoidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  voteCount: Int
  voteCount_not: Int
  voteCount_in: [Int!]
  voteCount_not_in: [Int!]
  voteCount_lt: Int
  voteCount_lte: Int
  voteCount_gt: Int
  voteCount_gte: Int
  AND: [ReplyToEchoOfShoutInVoidScalarWhereInput!]
  OR: [ReplyToEchoOfShoutInVoidScalarWhereInput!]
  NOT: [ReplyToEchoOfShoutInVoidScalarWhereInput!]
}

type ReplyToEchoOfShoutInVoidSubscriptionPayload {
  mutation: MutationType!
  node: ReplyToEchoOfShoutInVoid
  updatedFields: [String!]
  previousValues: ReplyToEchoOfShoutInVoidPreviousValues
}

input ReplyToEchoOfShoutInVoidSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ReplyToEchoOfShoutInVoidWhereInput
  AND: [ReplyToEchoOfShoutInVoidSubscriptionWhereInput!]
  OR: [ReplyToEchoOfShoutInVoidSubscriptionWhereInput!]
  NOT: [ReplyToEchoOfShoutInVoidSubscriptionWhereInput!]
}

input ReplyToEchoOfShoutInVoidUpdateInput {
  createdBy: UserUpdateOneRequiredWithoutRepliesToEchosOfShoutsInVoidInput
  content: ContentUpdateOneRequiredInput
  voteCount: Int
  originalEchoOfShoutInVoid: EchoOfShoutInVoidUpdateOneRequiredWithoutRepliesInput
}

input ReplyToEchoOfShoutInVoidUpdateManyDataInput {
  voteCount: Int
}

input ReplyToEchoOfShoutInVoidUpdateManyMutationInput {
  voteCount: Int
}

input ReplyToEchoOfShoutInVoidUpdateManyWithoutCreatedByInput {
  create: [ReplyToEchoOfShoutInVoidCreateWithoutCreatedByInput!]
  delete: [ReplyToEchoOfShoutInVoidWhereUniqueInput!]
  connect: [ReplyToEchoOfShoutInVoidWhereUniqueInput!]
  set: [ReplyToEchoOfShoutInVoidWhereUniqueInput!]
  disconnect: [ReplyToEchoOfShoutInVoidWhereUniqueInput!]
  update: [ReplyToEchoOfShoutInVoidUpdateWithWhereUniqueWithoutCreatedByInput!]
  upsert: [ReplyToEchoOfShoutInVoidUpsertWithWhereUniqueWithoutCreatedByInput!]
  deleteMany: [ReplyToEchoOfShoutInVoidScalarWhereInput!]
  updateMany: [ReplyToEchoOfShoutInVoidUpdateManyWithWhereNestedInput!]
}

input ReplyToEchoOfShoutInVoidUpdateManyWithoutOriginalEchoOfShoutInVoidInput {
  create: [ReplyToEchoOfShoutInVoidCreateWithoutOriginalEchoOfShoutInVoidInput!]
  delete: [ReplyToEchoOfShoutInVoidWhereUniqueInput!]
  connect: [ReplyToEchoOfShoutInVoidWhereUniqueInput!]
  set: [ReplyToEchoOfShoutInVoidWhereUniqueInput!]
  disconnect: [ReplyToEchoOfShoutInVoidWhereUniqueInput!]
  update: [ReplyToEchoOfShoutInVoidUpdateWithWhereUniqueWithoutOriginalEchoOfShoutInVoidInput!]
  upsert: [ReplyToEchoOfShoutInVoidUpsertWithWhereUniqueWithoutOriginalEchoOfShoutInVoidInput!]
  deleteMany: [ReplyToEchoOfShoutInVoidScalarWhereInput!]
  updateMany: [ReplyToEchoOfShoutInVoidUpdateManyWithWhereNestedInput!]
}

input ReplyToEchoOfShoutInVoidUpdateManyWithWhereNestedInput {
  where: ReplyToEchoOfShoutInVoidScalarWhereInput!
  data: ReplyToEchoOfShoutInVoidUpdateManyDataInput!
}

input ReplyToEchoOfShoutInVoidUpdateWithoutCreatedByDataInput {
  content: ContentUpdateOneRequiredInput
  voteCount: Int
  originalEchoOfShoutInVoid: EchoOfShoutInVoidUpdateOneRequiredWithoutRepliesInput
}

input ReplyToEchoOfShoutInVoidUpdateWithoutOriginalEchoOfShoutInVoidDataInput {
  createdBy: UserUpdateOneRequiredWithoutRepliesToEchosOfShoutsInVoidInput
  content: ContentUpdateOneRequiredInput
  voteCount: Int
}

input ReplyToEchoOfShoutInVoidUpdateWithWhereUniqueWithoutCreatedByInput {
  where: ReplyToEchoOfShoutInVoidWhereUniqueInput!
  data: ReplyToEchoOfShoutInVoidUpdateWithoutCreatedByDataInput!
}

input ReplyToEchoOfShoutInVoidUpdateWithWhereUniqueWithoutOriginalEchoOfShoutInVoidInput {
  where: ReplyToEchoOfShoutInVoidWhereUniqueInput!
  data: ReplyToEchoOfShoutInVoidUpdateWithoutOriginalEchoOfShoutInVoidDataInput!
}

input ReplyToEchoOfShoutInVoidUpsertWithWhereUniqueWithoutCreatedByInput {
  where: ReplyToEchoOfShoutInVoidWhereUniqueInput!
  update: ReplyToEchoOfShoutInVoidUpdateWithoutCreatedByDataInput!
  create: ReplyToEchoOfShoutInVoidCreateWithoutCreatedByInput!
}

input ReplyToEchoOfShoutInVoidUpsertWithWhereUniqueWithoutOriginalEchoOfShoutInVoidInput {
  where: ReplyToEchoOfShoutInVoidWhereUniqueInput!
  update: ReplyToEchoOfShoutInVoidUpdateWithoutOriginalEchoOfShoutInVoidDataInput!
  create: ReplyToEchoOfShoutInVoidCreateWithoutOriginalEchoOfShoutInVoidInput!
}

input ReplyToEchoOfShoutInVoidWhereInput {
  replyToEchoOfShoutInVoidId: ID
  replyToEchoOfShoutInVoidId_not: ID
  replyToEchoOfShoutInVoidId_in: [ID!]
  replyToEchoOfShoutInVoidId_not_in: [ID!]
  replyToEchoOfShoutInVoidId_lt: ID
  replyToEchoOfShoutInVoidId_lte: ID
  replyToEchoOfShoutInVoidId_gt: ID
  replyToEchoOfShoutInVoidId_gte: ID
  replyToEchoOfShoutInVoidId_contains: ID
  replyToEchoOfShoutInVoidId_not_contains: ID
  replyToEchoOfShoutInVoidId_starts_with: ID
  replyToEchoOfShoutInVoidId_not_starts_with: ID
  replyToEchoOfShoutInVoidId_ends_with: ID
  replyToEchoOfShoutInVoidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdBy: UserWhereInput
  content: ContentWhereInput
  voteCount: Int
  voteCount_not: Int
  voteCount_in: [Int!]
  voteCount_not_in: [Int!]
  voteCount_lt: Int
  voteCount_lte: Int
  voteCount_gt: Int
  voteCount_gte: Int
  originalEchoOfShoutInVoid: EchoOfShoutInVoidWhereInput
  AND: [ReplyToEchoOfShoutInVoidWhereInput!]
  OR: [ReplyToEchoOfShoutInVoidWhereInput!]
  NOT: [ReplyToEchoOfShoutInVoidWhereInput!]
}

input ReplyToEchoOfShoutInVoidWhereUniqueInput {
  replyToEchoOfShoutInVoidId: ID
}

type ReplyToShoutInVoid {
  replyToShoutInVoidId: ID!
  createdAt: DateTime!
  createdBy: User!
  content: Content!
  voteCount: Int!
  originalShoutInVoid: ShoutInVoid!
}

type ReplyToShoutInVoidConnection {
  pageInfo: PageInfo!
  edges: [ReplyToShoutInVoidEdge]!
  aggregate: AggregateReplyToShoutInVoid!
}

input ReplyToShoutInVoidCreateInput {
  replyToShoutInVoidId: ID
  createdBy: UserCreateOneWithoutRepliesToShoutsInVoidInput!
  content: ContentCreateOneInput!
  voteCount: Int!
  originalShoutInVoid: ShoutInVoidCreateOneWithoutRepliesInput!
}

input ReplyToShoutInVoidCreateManyWithoutCreatedByInput {
  create: [ReplyToShoutInVoidCreateWithoutCreatedByInput!]
  connect: [ReplyToShoutInVoidWhereUniqueInput!]
}

input ReplyToShoutInVoidCreateManyWithoutOriginalShoutInVoidInput {
  create: [ReplyToShoutInVoidCreateWithoutOriginalShoutInVoidInput!]
  connect: [ReplyToShoutInVoidWhereUniqueInput!]
}

input ReplyToShoutInVoidCreateWithoutCreatedByInput {
  replyToShoutInVoidId: ID
  content: ContentCreateOneInput!
  voteCount: Int!
  originalShoutInVoid: ShoutInVoidCreateOneWithoutRepliesInput!
}

input ReplyToShoutInVoidCreateWithoutOriginalShoutInVoidInput {
  replyToShoutInVoidId: ID
  createdBy: UserCreateOneWithoutRepliesToShoutsInVoidInput!
  content: ContentCreateOneInput!
  voteCount: Int!
}

type ReplyToShoutInVoidEdge {
  node: ReplyToShoutInVoid!
  cursor: String!
}

enum ReplyToShoutInVoidOrderByInput {
  replyToShoutInVoidId_ASC
  replyToShoutInVoidId_DESC
  createdAt_ASC
  createdAt_DESC
  voteCount_ASC
  voteCount_DESC
}

type ReplyToShoutInVoidPreviousValues {
  replyToShoutInVoidId: ID!
  createdAt: DateTime!
  voteCount: Int!
}

input ReplyToShoutInVoidScalarWhereInput {
  replyToShoutInVoidId: ID
  replyToShoutInVoidId_not: ID
  replyToShoutInVoidId_in: [ID!]
  replyToShoutInVoidId_not_in: [ID!]
  replyToShoutInVoidId_lt: ID
  replyToShoutInVoidId_lte: ID
  replyToShoutInVoidId_gt: ID
  replyToShoutInVoidId_gte: ID
  replyToShoutInVoidId_contains: ID
  replyToShoutInVoidId_not_contains: ID
  replyToShoutInVoidId_starts_with: ID
  replyToShoutInVoidId_not_starts_with: ID
  replyToShoutInVoidId_ends_with: ID
  replyToShoutInVoidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  voteCount: Int
  voteCount_not: Int
  voteCount_in: [Int!]
  voteCount_not_in: [Int!]
  voteCount_lt: Int
  voteCount_lte: Int
  voteCount_gt: Int
  voteCount_gte: Int
  AND: [ReplyToShoutInVoidScalarWhereInput!]
  OR: [ReplyToShoutInVoidScalarWhereInput!]
  NOT: [ReplyToShoutInVoidScalarWhereInput!]
}

type ReplyToShoutInVoidSubscriptionPayload {
  mutation: MutationType!
  node: ReplyToShoutInVoid
  updatedFields: [String!]
  previousValues: ReplyToShoutInVoidPreviousValues
}

input ReplyToShoutInVoidSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ReplyToShoutInVoidWhereInput
  AND: [ReplyToShoutInVoidSubscriptionWhereInput!]
  OR: [ReplyToShoutInVoidSubscriptionWhereInput!]
  NOT: [ReplyToShoutInVoidSubscriptionWhereInput!]
}

input ReplyToShoutInVoidUpdateInput {
  createdBy: UserUpdateOneRequiredWithoutRepliesToShoutsInVoidInput
  content: ContentUpdateOneRequiredInput
  voteCount: Int
  originalShoutInVoid: ShoutInVoidUpdateOneRequiredWithoutRepliesInput
}

input ReplyToShoutInVoidUpdateManyDataInput {
  voteCount: Int
}

input ReplyToShoutInVoidUpdateManyMutationInput {
  voteCount: Int
}

input ReplyToShoutInVoidUpdateManyWithoutCreatedByInput {
  create: [ReplyToShoutInVoidCreateWithoutCreatedByInput!]
  delete: [ReplyToShoutInVoidWhereUniqueInput!]
  connect: [ReplyToShoutInVoidWhereUniqueInput!]
  set: [ReplyToShoutInVoidWhereUniqueInput!]
  disconnect: [ReplyToShoutInVoidWhereUniqueInput!]
  update: [ReplyToShoutInVoidUpdateWithWhereUniqueWithoutCreatedByInput!]
  upsert: [ReplyToShoutInVoidUpsertWithWhereUniqueWithoutCreatedByInput!]
  deleteMany: [ReplyToShoutInVoidScalarWhereInput!]
  updateMany: [ReplyToShoutInVoidUpdateManyWithWhereNestedInput!]
}

input ReplyToShoutInVoidUpdateManyWithoutOriginalShoutInVoidInput {
  create: [ReplyToShoutInVoidCreateWithoutOriginalShoutInVoidInput!]
  delete: [ReplyToShoutInVoidWhereUniqueInput!]
  connect: [ReplyToShoutInVoidWhereUniqueInput!]
  set: [ReplyToShoutInVoidWhereUniqueInput!]
  disconnect: [ReplyToShoutInVoidWhereUniqueInput!]
  update: [ReplyToShoutInVoidUpdateWithWhereUniqueWithoutOriginalShoutInVoidInput!]
  upsert: [ReplyToShoutInVoidUpsertWithWhereUniqueWithoutOriginalShoutInVoidInput!]
  deleteMany: [ReplyToShoutInVoidScalarWhereInput!]
  updateMany: [ReplyToShoutInVoidUpdateManyWithWhereNestedInput!]
}

input ReplyToShoutInVoidUpdateManyWithWhereNestedInput {
  where: ReplyToShoutInVoidScalarWhereInput!
  data: ReplyToShoutInVoidUpdateManyDataInput!
}

input ReplyToShoutInVoidUpdateWithoutCreatedByDataInput {
  content: ContentUpdateOneRequiredInput
  voteCount: Int
  originalShoutInVoid: ShoutInVoidUpdateOneRequiredWithoutRepliesInput
}

input ReplyToShoutInVoidUpdateWithoutOriginalShoutInVoidDataInput {
  createdBy: UserUpdateOneRequiredWithoutRepliesToShoutsInVoidInput
  content: ContentUpdateOneRequiredInput
  voteCount: Int
}

input ReplyToShoutInVoidUpdateWithWhereUniqueWithoutCreatedByInput {
  where: ReplyToShoutInVoidWhereUniqueInput!
  data: ReplyToShoutInVoidUpdateWithoutCreatedByDataInput!
}

input ReplyToShoutInVoidUpdateWithWhereUniqueWithoutOriginalShoutInVoidInput {
  where: ReplyToShoutInVoidWhereUniqueInput!
  data: ReplyToShoutInVoidUpdateWithoutOriginalShoutInVoidDataInput!
}

input ReplyToShoutInVoidUpsertWithWhereUniqueWithoutCreatedByInput {
  where: ReplyToShoutInVoidWhereUniqueInput!
  update: ReplyToShoutInVoidUpdateWithoutCreatedByDataInput!
  create: ReplyToShoutInVoidCreateWithoutCreatedByInput!
}

input ReplyToShoutInVoidUpsertWithWhereUniqueWithoutOriginalShoutInVoidInput {
  where: ReplyToShoutInVoidWhereUniqueInput!
  update: ReplyToShoutInVoidUpdateWithoutOriginalShoutInVoidDataInput!
  create: ReplyToShoutInVoidCreateWithoutOriginalShoutInVoidInput!
}

input ReplyToShoutInVoidWhereInput {
  replyToShoutInVoidId: ID
  replyToShoutInVoidId_not: ID
  replyToShoutInVoidId_in: [ID!]
  replyToShoutInVoidId_not_in: [ID!]
  replyToShoutInVoidId_lt: ID
  replyToShoutInVoidId_lte: ID
  replyToShoutInVoidId_gt: ID
  replyToShoutInVoidId_gte: ID
  replyToShoutInVoidId_contains: ID
  replyToShoutInVoidId_not_contains: ID
  replyToShoutInVoidId_starts_with: ID
  replyToShoutInVoidId_not_starts_with: ID
  replyToShoutInVoidId_ends_with: ID
  replyToShoutInVoidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdBy: UserWhereInput
  content: ContentWhereInput
  voteCount: Int
  voteCount_not: Int
  voteCount_in: [Int!]
  voteCount_not_in: [Int!]
  voteCount_lt: Int
  voteCount_lte: Int
  voteCount_gt: Int
  voteCount_gte: Int
  originalShoutInVoid: ShoutInVoidWhereInput
  AND: [ReplyToShoutInVoidWhereInput!]
  OR: [ReplyToShoutInVoidWhereInput!]
  NOT: [ReplyToShoutInVoidWhereInput!]
}

input ReplyToShoutInVoidWhereUniqueInput {
  replyToShoutInVoidId: ID
}

type ShoutInVoid {
  shoutInVoidId: ID!
  createdAt: DateTime!
  createdBy: User!
  content: Content!
  nvoid: NVoid!
  voteCount: Int!
  echosOfShoutInVoid(where: EchoOfShoutInVoidWhereInput, orderBy: EchoOfShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [EchoOfShoutInVoid!]
  replies(where: ReplyToShoutInVoidWhereInput, orderBy: ReplyToShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ReplyToShoutInVoid!]
}

type ShoutInVoidConnection {
  pageInfo: PageInfo!
  edges: [ShoutInVoidEdge]!
  aggregate: AggregateShoutInVoid!
}

input ShoutInVoidCreateInput {
  shoutInVoidId: ID
  createdBy: UserCreateOneWithoutCreatedShoutsInVoidsInput!
  content: ContentCreateOneInput!
  nvoid: NVoidCreateOneWithoutShoutsInput!
  voteCount: Int!
  echosOfShoutInVoid: EchoOfShoutInVoidCreateManyWithoutOriginalShoutInVoidInput
  replies: ReplyToShoutInVoidCreateManyWithoutOriginalShoutInVoidInput
}

input ShoutInVoidCreateManyWithoutCreatedByInput {
  create: [ShoutInVoidCreateWithoutCreatedByInput!]
  connect: [ShoutInVoidWhereUniqueInput!]
}

input ShoutInVoidCreateManyWithoutNvoidInput {
  create: [ShoutInVoidCreateWithoutNvoidInput!]
  connect: [ShoutInVoidWhereUniqueInput!]
}

input ShoutInVoidCreateOneWithoutEchosOfShoutInVoidInput {
  create: ShoutInVoidCreateWithoutEchosOfShoutInVoidInput
  connect: ShoutInVoidWhereUniqueInput
}

input ShoutInVoidCreateOneWithoutRepliesInput {
  create: ShoutInVoidCreateWithoutRepliesInput
  connect: ShoutInVoidWhereUniqueInput
}

input ShoutInVoidCreateWithoutCreatedByInput {
  shoutInVoidId: ID
  content: ContentCreateOneInput!
  nvoid: NVoidCreateOneWithoutShoutsInput!
  voteCount: Int!
  echosOfShoutInVoid: EchoOfShoutInVoidCreateManyWithoutOriginalShoutInVoidInput
  replies: ReplyToShoutInVoidCreateManyWithoutOriginalShoutInVoidInput
}

input ShoutInVoidCreateWithoutEchosOfShoutInVoidInput {
  shoutInVoidId: ID
  createdBy: UserCreateOneWithoutCreatedShoutsInVoidsInput!
  content: ContentCreateOneInput!
  nvoid: NVoidCreateOneWithoutShoutsInput!
  voteCount: Int!
  replies: ReplyToShoutInVoidCreateManyWithoutOriginalShoutInVoidInput
}

input ShoutInVoidCreateWithoutNvoidInput {
  shoutInVoidId: ID
  createdBy: UserCreateOneWithoutCreatedShoutsInVoidsInput!
  content: ContentCreateOneInput!
  voteCount: Int!
  echosOfShoutInVoid: EchoOfShoutInVoidCreateManyWithoutOriginalShoutInVoidInput
  replies: ReplyToShoutInVoidCreateManyWithoutOriginalShoutInVoidInput
}

input ShoutInVoidCreateWithoutRepliesInput {
  shoutInVoidId: ID
  createdBy: UserCreateOneWithoutCreatedShoutsInVoidsInput!
  content: ContentCreateOneInput!
  nvoid: NVoidCreateOneWithoutShoutsInput!
  voteCount: Int!
  echosOfShoutInVoid: EchoOfShoutInVoidCreateManyWithoutOriginalShoutInVoidInput
}

type ShoutInVoidEdge {
  node: ShoutInVoid!
  cursor: String!
}

enum ShoutInVoidOrderByInput {
  shoutInVoidId_ASC
  shoutInVoidId_DESC
  createdAt_ASC
  createdAt_DESC
  voteCount_ASC
  voteCount_DESC
}

type ShoutInVoidPreviousValues {
  shoutInVoidId: ID!
  createdAt: DateTime!
  voteCount: Int!
}

input ShoutInVoidScalarWhereInput {
  shoutInVoidId: ID
  shoutInVoidId_not: ID
  shoutInVoidId_in: [ID!]
  shoutInVoidId_not_in: [ID!]
  shoutInVoidId_lt: ID
  shoutInVoidId_lte: ID
  shoutInVoidId_gt: ID
  shoutInVoidId_gte: ID
  shoutInVoidId_contains: ID
  shoutInVoidId_not_contains: ID
  shoutInVoidId_starts_with: ID
  shoutInVoidId_not_starts_with: ID
  shoutInVoidId_ends_with: ID
  shoutInVoidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  voteCount: Int
  voteCount_not: Int
  voteCount_in: [Int!]
  voteCount_not_in: [Int!]
  voteCount_lt: Int
  voteCount_lte: Int
  voteCount_gt: Int
  voteCount_gte: Int
  AND: [ShoutInVoidScalarWhereInput!]
  OR: [ShoutInVoidScalarWhereInput!]
  NOT: [ShoutInVoidScalarWhereInput!]
}

type ShoutInVoidSubscriptionPayload {
  mutation: MutationType!
  node: ShoutInVoid
  updatedFields: [String!]
  previousValues: ShoutInVoidPreviousValues
}

input ShoutInVoidSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ShoutInVoidWhereInput
  AND: [ShoutInVoidSubscriptionWhereInput!]
  OR: [ShoutInVoidSubscriptionWhereInput!]
  NOT: [ShoutInVoidSubscriptionWhereInput!]
}

input ShoutInVoidUpdateInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedShoutsInVoidsInput
  content: ContentUpdateOneRequiredInput
  nvoid: NVoidUpdateOneRequiredWithoutShoutsInput
  voteCount: Int
  echosOfShoutInVoid: EchoOfShoutInVoidUpdateManyWithoutOriginalShoutInVoidInput
  replies: ReplyToShoutInVoidUpdateManyWithoutOriginalShoutInVoidInput
}

input ShoutInVoidUpdateManyDataInput {
  voteCount: Int
}

input ShoutInVoidUpdateManyMutationInput {
  voteCount: Int
}

input ShoutInVoidUpdateManyWithoutCreatedByInput {
  create: [ShoutInVoidCreateWithoutCreatedByInput!]
  delete: [ShoutInVoidWhereUniqueInput!]
  connect: [ShoutInVoidWhereUniqueInput!]
  set: [ShoutInVoidWhereUniqueInput!]
  disconnect: [ShoutInVoidWhereUniqueInput!]
  update: [ShoutInVoidUpdateWithWhereUniqueWithoutCreatedByInput!]
  upsert: [ShoutInVoidUpsertWithWhereUniqueWithoutCreatedByInput!]
  deleteMany: [ShoutInVoidScalarWhereInput!]
  updateMany: [ShoutInVoidUpdateManyWithWhereNestedInput!]
}

input ShoutInVoidUpdateManyWithoutNvoidInput {
  create: [ShoutInVoidCreateWithoutNvoidInput!]
  delete: [ShoutInVoidWhereUniqueInput!]
  connect: [ShoutInVoidWhereUniqueInput!]
  set: [ShoutInVoidWhereUniqueInput!]
  disconnect: [ShoutInVoidWhereUniqueInput!]
  update: [ShoutInVoidUpdateWithWhereUniqueWithoutNvoidInput!]
  upsert: [ShoutInVoidUpsertWithWhereUniqueWithoutNvoidInput!]
  deleteMany: [ShoutInVoidScalarWhereInput!]
  updateMany: [ShoutInVoidUpdateManyWithWhereNestedInput!]
}

input ShoutInVoidUpdateManyWithWhereNestedInput {
  where: ShoutInVoidScalarWhereInput!
  data: ShoutInVoidUpdateManyDataInput!
}

input ShoutInVoidUpdateOneRequiredWithoutEchosOfShoutInVoidInput {
  create: ShoutInVoidCreateWithoutEchosOfShoutInVoidInput
  update: ShoutInVoidUpdateWithoutEchosOfShoutInVoidDataInput
  upsert: ShoutInVoidUpsertWithoutEchosOfShoutInVoidInput
  connect: ShoutInVoidWhereUniqueInput
}

input ShoutInVoidUpdateOneRequiredWithoutRepliesInput {
  create: ShoutInVoidCreateWithoutRepliesInput
  update: ShoutInVoidUpdateWithoutRepliesDataInput
  upsert: ShoutInVoidUpsertWithoutRepliesInput
  connect: ShoutInVoidWhereUniqueInput
}

input ShoutInVoidUpdateWithoutCreatedByDataInput {
  content: ContentUpdateOneRequiredInput
  nvoid: NVoidUpdateOneRequiredWithoutShoutsInput
  voteCount: Int
  echosOfShoutInVoid: EchoOfShoutInVoidUpdateManyWithoutOriginalShoutInVoidInput
  replies: ReplyToShoutInVoidUpdateManyWithoutOriginalShoutInVoidInput
}

input ShoutInVoidUpdateWithoutEchosOfShoutInVoidDataInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedShoutsInVoidsInput
  content: ContentUpdateOneRequiredInput
  nvoid: NVoidUpdateOneRequiredWithoutShoutsInput
  voteCount: Int
  replies: ReplyToShoutInVoidUpdateManyWithoutOriginalShoutInVoidInput
}

input ShoutInVoidUpdateWithoutNvoidDataInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedShoutsInVoidsInput
  content: ContentUpdateOneRequiredInput
  voteCount: Int
  echosOfShoutInVoid: EchoOfShoutInVoidUpdateManyWithoutOriginalShoutInVoidInput
  replies: ReplyToShoutInVoidUpdateManyWithoutOriginalShoutInVoidInput
}

input ShoutInVoidUpdateWithoutRepliesDataInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedShoutsInVoidsInput
  content: ContentUpdateOneRequiredInput
  nvoid: NVoidUpdateOneRequiredWithoutShoutsInput
  voteCount: Int
  echosOfShoutInVoid: EchoOfShoutInVoidUpdateManyWithoutOriginalShoutInVoidInput
}

input ShoutInVoidUpdateWithWhereUniqueWithoutCreatedByInput {
  where: ShoutInVoidWhereUniqueInput!
  data: ShoutInVoidUpdateWithoutCreatedByDataInput!
}

input ShoutInVoidUpdateWithWhereUniqueWithoutNvoidInput {
  where: ShoutInVoidWhereUniqueInput!
  data: ShoutInVoidUpdateWithoutNvoidDataInput!
}

input ShoutInVoidUpsertWithoutEchosOfShoutInVoidInput {
  update: ShoutInVoidUpdateWithoutEchosOfShoutInVoidDataInput!
  create: ShoutInVoidCreateWithoutEchosOfShoutInVoidInput!
}

input ShoutInVoidUpsertWithoutRepliesInput {
  update: ShoutInVoidUpdateWithoutRepliesDataInput!
  create: ShoutInVoidCreateWithoutRepliesInput!
}

input ShoutInVoidUpsertWithWhereUniqueWithoutCreatedByInput {
  where: ShoutInVoidWhereUniqueInput!
  update: ShoutInVoidUpdateWithoutCreatedByDataInput!
  create: ShoutInVoidCreateWithoutCreatedByInput!
}

input ShoutInVoidUpsertWithWhereUniqueWithoutNvoidInput {
  where: ShoutInVoidWhereUniqueInput!
  update: ShoutInVoidUpdateWithoutNvoidDataInput!
  create: ShoutInVoidCreateWithoutNvoidInput!
}

input ShoutInVoidWhereInput {
  shoutInVoidId: ID
  shoutInVoidId_not: ID
  shoutInVoidId_in: [ID!]
  shoutInVoidId_not_in: [ID!]
  shoutInVoidId_lt: ID
  shoutInVoidId_lte: ID
  shoutInVoidId_gt: ID
  shoutInVoidId_gte: ID
  shoutInVoidId_contains: ID
  shoutInVoidId_not_contains: ID
  shoutInVoidId_starts_with: ID
  shoutInVoidId_not_starts_with: ID
  shoutInVoidId_ends_with: ID
  shoutInVoidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdBy: UserWhereInput
  content: ContentWhereInput
  nvoid: NVoidWhereInput
  voteCount: Int
  voteCount_not: Int
  voteCount_in: [Int!]
  voteCount_not_in: [Int!]
  voteCount_lt: Int
  voteCount_lte: Int
  voteCount_gt: Int
  voteCount_gte: Int
  echosOfShoutInVoid_every: EchoOfShoutInVoidWhereInput
  echosOfShoutInVoid_some: EchoOfShoutInVoidWhereInput
  echosOfShoutInVoid_none: EchoOfShoutInVoidWhereInput
  replies_every: ReplyToShoutInVoidWhereInput
  replies_some: ReplyToShoutInVoidWhereInput
  replies_none: ReplyToShoutInVoidWhereInput
  AND: [ShoutInVoidWhereInput!]
  OR: [ShoutInVoidWhereInput!]
  NOT: [ShoutInVoidWhereInput!]
}

input ShoutInVoidWhereUniqueInput {
  shoutInVoidId: ID
}

type Subscription {
  content(where: ContentSubscriptionWhereInput): ContentSubscriptionPayload
  echoOfEchoInVoid(where: EchoOfEchoInVoidSubscriptionWhereInput): EchoOfEchoInVoidSubscriptionPayload
  echoOfShoutInVoid(where: EchoOfShoutInVoidSubscriptionWhereInput): EchoOfShoutInVoidSubscriptionPayload
  nVoid(where: NVoidSubscriptionWhereInput): NVoidSubscriptionPayload
  replyToEchoOfEchoInVoid(where: ReplyToEchoOfEchoInVoidSubscriptionWhereInput): ReplyToEchoOfEchoInVoidSubscriptionPayload
  replyToEchoOfShoutInVoid(where: ReplyToEchoOfShoutInVoidSubscriptionWhereInput): ReplyToEchoOfShoutInVoidSubscriptionPayload
  replyToShoutInVoid(where: ReplyToShoutInVoidSubscriptionWhereInput): ReplyToShoutInVoidSubscriptionPayload
  shoutInVoid(where: ShoutInVoidSubscriptionWhereInput): ShoutInVoidSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  userActivatedEchoOfEcho(where: UserActivatedEchoOfEchoSubscriptionWhereInput): UserActivatedEchoOfEchoSubscriptionPayload
  userActivatedEchoOfShout(where: UserActivatedEchoOfShoutSubscriptionWhereInput): UserActivatedEchoOfShoutSubscriptionPayload
  userSavedVoid(where: UserSavedVoidSubscriptionWhereInput): UserSavedVoidSubscriptionPayload
}

type User {
  userId: ID!
  createdAt: DateTime!
  username: String!
  password: String!
  currentLocationGeohash: String!
  createdContent(where: ContentWhereInput, orderBy: ContentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Content!]
  createdVoids(where: NVoidWhereInput, orderBy: NVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [NVoid!]
  savedVoids(where: UserSavedVoidWhereInput, orderBy: UserSavedVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [UserSavedVoid!]
  createdShoutsInVoids(where: ShoutInVoidWhereInput, orderBy: ShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ShoutInVoid!]
  activatedEchosOfShouts(where: UserActivatedEchoOfShoutWhereInput, orderBy: UserActivatedEchoOfShoutOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [UserActivatedEchoOfShout!]
  createdEchosOfShoutsInVoid(where: EchoOfShoutInVoidWhereInput, orderBy: EchoOfShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [EchoOfShoutInVoid!]
  activatedEchosOfEchos(where: UserActivatedEchoOfEchoWhereInput, orderBy: UserActivatedEchoOfEchoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [UserActivatedEchoOfEcho!]
  createdEchosOfEchosInVoid(where: EchoOfEchoInVoidWhereInput, orderBy: EchoOfEchoInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [EchoOfEchoInVoid!]
  repliesToShoutsInVoid(where: ReplyToShoutInVoidWhereInput, orderBy: ReplyToShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ReplyToShoutInVoid!]
  repliesToEchosOfShoutsInVoid(where: ReplyToEchoOfShoutInVoidWhereInput, orderBy: ReplyToEchoOfShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ReplyToEchoOfShoutInVoid!]
  repliesToEchosOfEchosInVoid(where: ReplyToEchoOfEchoInVoidWhereInput, orderBy: ReplyToEchoOfEchoInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ReplyToEchoOfEchoInVoid!]
}

type UserActivatedEchoOfEcho {
  userActivatedEchoOfEcho: ID!
  createdAt: DateTime!
  createdBy: User!
  originalShoutContent: Content!
  originalShoutVoidGeohash: String!
  originalEchoVoidGeohash: String!
}

type UserActivatedEchoOfEchoConnection {
  pageInfo: PageInfo!
  edges: [UserActivatedEchoOfEchoEdge]!
  aggregate: AggregateUserActivatedEchoOfEcho!
}

input UserActivatedEchoOfEchoCreateInput {
  userActivatedEchoOfEcho: ID
  createdBy: UserCreateOneWithoutActivatedEchosOfEchosInput!
  originalShoutContent: ContentCreateOneInput!
  originalShoutVoidGeohash: String!
  originalEchoVoidGeohash: String!
}

input UserActivatedEchoOfEchoCreateManyWithoutCreatedByInput {
  create: [UserActivatedEchoOfEchoCreateWithoutCreatedByInput!]
  connect: [UserActivatedEchoOfEchoWhereUniqueInput!]
}

input UserActivatedEchoOfEchoCreateWithoutCreatedByInput {
  userActivatedEchoOfEcho: ID
  originalShoutContent: ContentCreateOneInput!
  originalShoutVoidGeohash: String!
  originalEchoVoidGeohash: String!
}

type UserActivatedEchoOfEchoEdge {
  node: UserActivatedEchoOfEcho!
  cursor: String!
}

enum UserActivatedEchoOfEchoOrderByInput {
  userActivatedEchoOfEcho_ASC
  userActivatedEchoOfEcho_DESC
  createdAt_ASC
  createdAt_DESC
  originalShoutVoidGeohash_ASC
  originalShoutVoidGeohash_DESC
  originalEchoVoidGeohash_ASC
  originalEchoVoidGeohash_DESC
}

type UserActivatedEchoOfEchoPreviousValues {
  userActivatedEchoOfEcho: ID!
  createdAt: DateTime!
  originalShoutVoidGeohash: String!
  originalEchoVoidGeohash: String!
}

input UserActivatedEchoOfEchoScalarWhereInput {
  userActivatedEchoOfEcho: ID
  userActivatedEchoOfEcho_not: ID
  userActivatedEchoOfEcho_in: [ID!]
  userActivatedEchoOfEcho_not_in: [ID!]
  userActivatedEchoOfEcho_lt: ID
  userActivatedEchoOfEcho_lte: ID
  userActivatedEchoOfEcho_gt: ID
  userActivatedEchoOfEcho_gte: ID
  userActivatedEchoOfEcho_contains: ID
  userActivatedEchoOfEcho_not_contains: ID
  userActivatedEchoOfEcho_starts_with: ID
  userActivatedEchoOfEcho_not_starts_with: ID
  userActivatedEchoOfEcho_ends_with: ID
  userActivatedEchoOfEcho_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  originalShoutVoidGeohash: String
  originalShoutVoidGeohash_not: String
  originalShoutVoidGeohash_in: [String!]
  originalShoutVoidGeohash_not_in: [String!]
  originalShoutVoidGeohash_lt: String
  originalShoutVoidGeohash_lte: String
  originalShoutVoidGeohash_gt: String
  originalShoutVoidGeohash_gte: String
  originalShoutVoidGeohash_contains: String
  originalShoutVoidGeohash_not_contains: String
  originalShoutVoidGeohash_starts_with: String
  originalShoutVoidGeohash_not_starts_with: String
  originalShoutVoidGeohash_ends_with: String
  originalShoutVoidGeohash_not_ends_with: String
  originalEchoVoidGeohash: String
  originalEchoVoidGeohash_not: String
  originalEchoVoidGeohash_in: [String!]
  originalEchoVoidGeohash_not_in: [String!]
  originalEchoVoidGeohash_lt: String
  originalEchoVoidGeohash_lte: String
  originalEchoVoidGeohash_gt: String
  originalEchoVoidGeohash_gte: String
  originalEchoVoidGeohash_contains: String
  originalEchoVoidGeohash_not_contains: String
  originalEchoVoidGeohash_starts_with: String
  originalEchoVoidGeohash_not_starts_with: String
  originalEchoVoidGeohash_ends_with: String
  originalEchoVoidGeohash_not_ends_with: String
  AND: [UserActivatedEchoOfEchoScalarWhereInput!]
  OR: [UserActivatedEchoOfEchoScalarWhereInput!]
  NOT: [UserActivatedEchoOfEchoScalarWhereInput!]
}

type UserActivatedEchoOfEchoSubscriptionPayload {
  mutation: MutationType!
  node: UserActivatedEchoOfEcho
  updatedFields: [String!]
  previousValues: UserActivatedEchoOfEchoPreviousValues
}

input UserActivatedEchoOfEchoSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UserActivatedEchoOfEchoWhereInput
  AND: [UserActivatedEchoOfEchoSubscriptionWhereInput!]
  OR: [UserActivatedEchoOfEchoSubscriptionWhereInput!]
  NOT: [UserActivatedEchoOfEchoSubscriptionWhereInput!]
}

input UserActivatedEchoOfEchoUpdateInput {
  createdBy: UserUpdateOneRequiredWithoutActivatedEchosOfEchosInput
  originalShoutContent: ContentUpdateOneRequiredInput
  originalShoutVoidGeohash: String
  originalEchoVoidGeohash: String
}

input UserActivatedEchoOfEchoUpdateManyDataInput {
  originalShoutVoidGeohash: String
  originalEchoVoidGeohash: String
}

input UserActivatedEchoOfEchoUpdateManyMutationInput {
  originalShoutVoidGeohash: String
  originalEchoVoidGeohash: String
}

input UserActivatedEchoOfEchoUpdateManyWithoutCreatedByInput {
  create: [UserActivatedEchoOfEchoCreateWithoutCreatedByInput!]
  delete: [UserActivatedEchoOfEchoWhereUniqueInput!]
  connect: [UserActivatedEchoOfEchoWhereUniqueInput!]
  set: [UserActivatedEchoOfEchoWhereUniqueInput!]
  disconnect: [UserActivatedEchoOfEchoWhereUniqueInput!]
  update: [UserActivatedEchoOfEchoUpdateWithWhereUniqueWithoutCreatedByInput!]
  upsert: [UserActivatedEchoOfEchoUpsertWithWhereUniqueWithoutCreatedByInput!]
  deleteMany: [UserActivatedEchoOfEchoScalarWhereInput!]
  updateMany: [UserActivatedEchoOfEchoUpdateManyWithWhereNestedInput!]
}

input UserActivatedEchoOfEchoUpdateManyWithWhereNestedInput {
  where: UserActivatedEchoOfEchoScalarWhereInput!
  data: UserActivatedEchoOfEchoUpdateManyDataInput!
}

input UserActivatedEchoOfEchoUpdateWithoutCreatedByDataInput {
  originalShoutContent: ContentUpdateOneRequiredInput
  originalShoutVoidGeohash: String
  originalEchoVoidGeohash: String
}

input UserActivatedEchoOfEchoUpdateWithWhereUniqueWithoutCreatedByInput {
  where: UserActivatedEchoOfEchoWhereUniqueInput!
  data: UserActivatedEchoOfEchoUpdateWithoutCreatedByDataInput!
}

input UserActivatedEchoOfEchoUpsertWithWhereUniqueWithoutCreatedByInput {
  where: UserActivatedEchoOfEchoWhereUniqueInput!
  update: UserActivatedEchoOfEchoUpdateWithoutCreatedByDataInput!
  create: UserActivatedEchoOfEchoCreateWithoutCreatedByInput!
}

input UserActivatedEchoOfEchoWhereInput {
  userActivatedEchoOfEcho: ID
  userActivatedEchoOfEcho_not: ID
  userActivatedEchoOfEcho_in: [ID!]
  userActivatedEchoOfEcho_not_in: [ID!]
  userActivatedEchoOfEcho_lt: ID
  userActivatedEchoOfEcho_lte: ID
  userActivatedEchoOfEcho_gt: ID
  userActivatedEchoOfEcho_gte: ID
  userActivatedEchoOfEcho_contains: ID
  userActivatedEchoOfEcho_not_contains: ID
  userActivatedEchoOfEcho_starts_with: ID
  userActivatedEchoOfEcho_not_starts_with: ID
  userActivatedEchoOfEcho_ends_with: ID
  userActivatedEchoOfEcho_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdBy: UserWhereInput
  originalShoutContent: ContentWhereInput
  originalShoutVoidGeohash: String
  originalShoutVoidGeohash_not: String
  originalShoutVoidGeohash_in: [String!]
  originalShoutVoidGeohash_not_in: [String!]
  originalShoutVoidGeohash_lt: String
  originalShoutVoidGeohash_lte: String
  originalShoutVoidGeohash_gt: String
  originalShoutVoidGeohash_gte: String
  originalShoutVoidGeohash_contains: String
  originalShoutVoidGeohash_not_contains: String
  originalShoutVoidGeohash_starts_with: String
  originalShoutVoidGeohash_not_starts_with: String
  originalShoutVoidGeohash_ends_with: String
  originalShoutVoidGeohash_not_ends_with: String
  originalEchoVoidGeohash: String
  originalEchoVoidGeohash_not: String
  originalEchoVoidGeohash_in: [String!]
  originalEchoVoidGeohash_not_in: [String!]
  originalEchoVoidGeohash_lt: String
  originalEchoVoidGeohash_lte: String
  originalEchoVoidGeohash_gt: String
  originalEchoVoidGeohash_gte: String
  originalEchoVoidGeohash_contains: String
  originalEchoVoidGeohash_not_contains: String
  originalEchoVoidGeohash_starts_with: String
  originalEchoVoidGeohash_not_starts_with: String
  originalEchoVoidGeohash_ends_with: String
  originalEchoVoidGeohash_not_ends_with: String
  AND: [UserActivatedEchoOfEchoWhereInput!]
  OR: [UserActivatedEchoOfEchoWhereInput!]
  NOT: [UserActivatedEchoOfEchoWhereInput!]
}

input UserActivatedEchoOfEchoWhereUniqueInput {
  userActivatedEchoOfEcho: ID
}

type UserActivatedEchoOfShout {
  userActivatedEchoOfShoutId: ID!
  createdAt: DateTime!
  createdBy: User!
  originalShoutContent: Content!
  originalShoutVoidGeohash: String!
}

type UserActivatedEchoOfShoutConnection {
  pageInfo: PageInfo!
  edges: [UserActivatedEchoOfShoutEdge]!
  aggregate: AggregateUserActivatedEchoOfShout!
}

input UserActivatedEchoOfShoutCreateInput {
  userActivatedEchoOfShoutId: ID
  createdBy: UserCreateOneWithoutActivatedEchosOfShoutsInput!
  originalShoutContent: ContentCreateOneInput!
  originalShoutVoidGeohash: String!
}

input UserActivatedEchoOfShoutCreateManyWithoutCreatedByInput {
  create: [UserActivatedEchoOfShoutCreateWithoutCreatedByInput!]
  connect: [UserActivatedEchoOfShoutWhereUniqueInput!]
}

input UserActivatedEchoOfShoutCreateWithoutCreatedByInput {
  userActivatedEchoOfShoutId: ID
  originalShoutContent: ContentCreateOneInput!
  originalShoutVoidGeohash: String!
}

type UserActivatedEchoOfShoutEdge {
  node: UserActivatedEchoOfShout!
  cursor: String!
}

enum UserActivatedEchoOfShoutOrderByInput {
  userActivatedEchoOfShoutId_ASC
  userActivatedEchoOfShoutId_DESC
  createdAt_ASC
  createdAt_DESC
  originalShoutVoidGeohash_ASC
  originalShoutVoidGeohash_DESC
}

type UserActivatedEchoOfShoutPreviousValues {
  userActivatedEchoOfShoutId: ID!
  createdAt: DateTime!
  originalShoutVoidGeohash: String!
}

input UserActivatedEchoOfShoutScalarWhereInput {
  userActivatedEchoOfShoutId: ID
  userActivatedEchoOfShoutId_not: ID
  userActivatedEchoOfShoutId_in: [ID!]
  userActivatedEchoOfShoutId_not_in: [ID!]
  userActivatedEchoOfShoutId_lt: ID
  userActivatedEchoOfShoutId_lte: ID
  userActivatedEchoOfShoutId_gt: ID
  userActivatedEchoOfShoutId_gte: ID
  userActivatedEchoOfShoutId_contains: ID
  userActivatedEchoOfShoutId_not_contains: ID
  userActivatedEchoOfShoutId_starts_with: ID
  userActivatedEchoOfShoutId_not_starts_with: ID
  userActivatedEchoOfShoutId_ends_with: ID
  userActivatedEchoOfShoutId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  originalShoutVoidGeohash: String
  originalShoutVoidGeohash_not: String
  originalShoutVoidGeohash_in: [String!]
  originalShoutVoidGeohash_not_in: [String!]
  originalShoutVoidGeohash_lt: String
  originalShoutVoidGeohash_lte: String
  originalShoutVoidGeohash_gt: String
  originalShoutVoidGeohash_gte: String
  originalShoutVoidGeohash_contains: String
  originalShoutVoidGeohash_not_contains: String
  originalShoutVoidGeohash_starts_with: String
  originalShoutVoidGeohash_not_starts_with: String
  originalShoutVoidGeohash_ends_with: String
  originalShoutVoidGeohash_not_ends_with: String
  AND: [UserActivatedEchoOfShoutScalarWhereInput!]
  OR: [UserActivatedEchoOfShoutScalarWhereInput!]
  NOT: [UserActivatedEchoOfShoutScalarWhereInput!]
}

type UserActivatedEchoOfShoutSubscriptionPayload {
  mutation: MutationType!
  node: UserActivatedEchoOfShout
  updatedFields: [String!]
  previousValues: UserActivatedEchoOfShoutPreviousValues
}

input UserActivatedEchoOfShoutSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UserActivatedEchoOfShoutWhereInput
  AND: [UserActivatedEchoOfShoutSubscriptionWhereInput!]
  OR: [UserActivatedEchoOfShoutSubscriptionWhereInput!]
  NOT: [UserActivatedEchoOfShoutSubscriptionWhereInput!]
}

input UserActivatedEchoOfShoutUpdateInput {
  createdBy: UserUpdateOneRequiredWithoutActivatedEchosOfShoutsInput
  originalShoutContent: ContentUpdateOneRequiredInput
  originalShoutVoidGeohash: String
}

input UserActivatedEchoOfShoutUpdateManyDataInput {
  originalShoutVoidGeohash: String
}

input UserActivatedEchoOfShoutUpdateManyMutationInput {
  originalShoutVoidGeohash: String
}

input UserActivatedEchoOfShoutUpdateManyWithoutCreatedByInput {
  create: [UserActivatedEchoOfShoutCreateWithoutCreatedByInput!]
  delete: [UserActivatedEchoOfShoutWhereUniqueInput!]
  connect: [UserActivatedEchoOfShoutWhereUniqueInput!]
  set: [UserActivatedEchoOfShoutWhereUniqueInput!]
  disconnect: [UserActivatedEchoOfShoutWhereUniqueInput!]
  update: [UserActivatedEchoOfShoutUpdateWithWhereUniqueWithoutCreatedByInput!]
  upsert: [UserActivatedEchoOfShoutUpsertWithWhereUniqueWithoutCreatedByInput!]
  deleteMany: [UserActivatedEchoOfShoutScalarWhereInput!]
  updateMany: [UserActivatedEchoOfShoutUpdateManyWithWhereNestedInput!]
}

input UserActivatedEchoOfShoutUpdateManyWithWhereNestedInput {
  where: UserActivatedEchoOfShoutScalarWhereInput!
  data: UserActivatedEchoOfShoutUpdateManyDataInput!
}

input UserActivatedEchoOfShoutUpdateWithoutCreatedByDataInput {
  originalShoutContent: ContentUpdateOneRequiredInput
  originalShoutVoidGeohash: String
}

input UserActivatedEchoOfShoutUpdateWithWhereUniqueWithoutCreatedByInput {
  where: UserActivatedEchoOfShoutWhereUniqueInput!
  data: UserActivatedEchoOfShoutUpdateWithoutCreatedByDataInput!
}

input UserActivatedEchoOfShoutUpsertWithWhereUniqueWithoutCreatedByInput {
  where: UserActivatedEchoOfShoutWhereUniqueInput!
  update: UserActivatedEchoOfShoutUpdateWithoutCreatedByDataInput!
  create: UserActivatedEchoOfShoutCreateWithoutCreatedByInput!
}

input UserActivatedEchoOfShoutWhereInput {
  userActivatedEchoOfShoutId: ID
  userActivatedEchoOfShoutId_not: ID
  userActivatedEchoOfShoutId_in: [ID!]
  userActivatedEchoOfShoutId_not_in: [ID!]
  userActivatedEchoOfShoutId_lt: ID
  userActivatedEchoOfShoutId_lte: ID
  userActivatedEchoOfShoutId_gt: ID
  userActivatedEchoOfShoutId_gte: ID
  userActivatedEchoOfShoutId_contains: ID
  userActivatedEchoOfShoutId_not_contains: ID
  userActivatedEchoOfShoutId_starts_with: ID
  userActivatedEchoOfShoutId_not_starts_with: ID
  userActivatedEchoOfShoutId_ends_with: ID
  userActivatedEchoOfShoutId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdBy: UserWhereInput
  originalShoutContent: ContentWhereInput
  originalShoutVoidGeohash: String
  originalShoutVoidGeohash_not: String
  originalShoutVoidGeohash_in: [String!]
  originalShoutVoidGeohash_not_in: [String!]
  originalShoutVoidGeohash_lt: String
  originalShoutVoidGeohash_lte: String
  originalShoutVoidGeohash_gt: String
  originalShoutVoidGeohash_gte: String
  originalShoutVoidGeohash_contains: String
  originalShoutVoidGeohash_not_contains: String
  originalShoutVoidGeohash_starts_with: String
  originalShoutVoidGeohash_not_starts_with: String
  originalShoutVoidGeohash_ends_with: String
  originalShoutVoidGeohash_not_ends_with: String
  AND: [UserActivatedEchoOfShoutWhereInput!]
  OR: [UserActivatedEchoOfShoutWhereInput!]
  NOT: [UserActivatedEchoOfShoutWhereInput!]
}

input UserActivatedEchoOfShoutWhereUniqueInput {
  userActivatedEchoOfShoutId: ID
}

type UserConnection {
  pageInfo: PageInfo!
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  userId: ID
  username: String!
  password: String!
  currentLocationGeohash: String!
  createdContent: ContentCreateManyWithoutCreatedByInput
  createdVoids: NVoidCreateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidCreateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidCreateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutCreateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidCreateManyWithoutCreatedByInput
  activatedEchosOfEchos: UserActivatedEchoOfEchoCreateManyWithoutCreatedByInput
  createdEchosOfEchosInVoid: EchoOfEchoInVoidCreateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidCreateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidCreateManyWithoutCreatedByInput
  repliesToEchosOfEchosInVoid: ReplyToEchoOfEchoInVoidCreateManyWithoutCreatedByInput
}

input UserCreateOneWithoutActivatedEchosOfEchosInput {
  create: UserCreateWithoutActivatedEchosOfEchosInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutActivatedEchosOfShoutsInput {
  create: UserCreateWithoutActivatedEchosOfShoutsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutCreatedContentInput {
  create: UserCreateWithoutCreatedContentInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutCreatedEchosOfEchosInVoidInput {
  create: UserCreateWithoutCreatedEchosOfEchosInVoidInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutCreatedEchosOfShoutsInVoidInput {
  create: UserCreateWithoutCreatedEchosOfShoutsInVoidInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutCreatedShoutsInVoidsInput {
  create: UserCreateWithoutCreatedShoutsInVoidsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutCreatedVoidsInput {
  create: UserCreateWithoutCreatedVoidsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutRepliesToEchosOfEchosInVoidInput {
  create: UserCreateWithoutRepliesToEchosOfEchosInVoidInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutRepliesToEchosOfShoutsInVoidInput {
  create: UserCreateWithoutRepliesToEchosOfShoutsInVoidInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutRepliesToShoutsInVoidInput {
  create: UserCreateWithoutRepliesToShoutsInVoidInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutSavedVoidsInput {
  create: UserCreateWithoutSavedVoidsInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutActivatedEchosOfEchosInput {
  userId: ID
  username: String!
  password: String!
  currentLocationGeohash: String!
  createdContent: ContentCreateManyWithoutCreatedByInput
  createdVoids: NVoidCreateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidCreateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidCreateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutCreateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidCreateManyWithoutCreatedByInput
  createdEchosOfEchosInVoid: EchoOfEchoInVoidCreateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidCreateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidCreateManyWithoutCreatedByInput
  repliesToEchosOfEchosInVoid: ReplyToEchoOfEchoInVoidCreateManyWithoutCreatedByInput
}

input UserCreateWithoutActivatedEchosOfShoutsInput {
  userId: ID
  username: String!
  password: String!
  currentLocationGeohash: String!
  createdContent: ContentCreateManyWithoutCreatedByInput
  createdVoids: NVoidCreateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidCreateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidCreateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidCreateManyWithoutCreatedByInput
  activatedEchosOfEchos: UserActivatedEchoOfEchoCreateManyWithoutCreatedByInput
  createdEchosOfEchosInVoid: EchoOfEchoInVoidCreateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidCreateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidCreateManyWithoutCreatedByInput
  repliesToEchosOfEchosInVoid: ReplyToEchoOfEchoInVoidCreateManyWithoutCreatedByInput
}

input UserCreateWithoutCreatedContentInput {
  userId: ID
  username: String!
  password: String!
  currentLocationGeohash: String!
  createdVoids: NVoidCreateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidCreateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidCreateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutCreateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidCreateManyWithoutCreatedByInput
  activatedEchosOfEchos: UserActivatedEchoOfEchoCreateManyWithoutCreatedByInput
  createdEchosOfEchosInVoid: EchoOfEchoInVoidCreateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidCreateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidCreateManyWithoutCreatedByInput
  repliesToEchosOfEchosInVoid: ReplyToEchoOfEchoInVoidCreateManyWithoutCreatedByInput
}

input UserCreateWithoutCreatedEchosOfEchosInVoidInput {
  userId: ID
  username: String!
  password: String!
  currentLocationGeohash: String!
  createdContent: ContentCreateManyWithoutCreatedByInput
  createdVoids: NVoidCreateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidCreateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidCreateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutCreateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidCreateManyWithoutCreatedByInput
  activatedEchosOfEchos: UserActivatedEchoOfEchoCreateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidCreateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidCreateManyWithoutCreatedByInput
  repliesToEchosOfEchosInVoid: ReplyToEchoOfEchoInVoidCreateManyWithoutCreatedByInput
}

input UserCreateWithoutCreatedEchosOfShoutsInVoidInput {
  userId: ID
  username: String!
  password: String!
  currentLocationGeohash: String!
  createdContent: ContentCreateManyWithoutCreatedByInput
  createdVoids: NVoidCreateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidCreateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidCreateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutCreateManyWithoutCreatedByInput
  activatedEchosOfEchos: UserActivatedEchoOfEchoCreateManyWithoutCreatedByInput
  createdEchosOfEchosInVoid: EchoOfEchoInVoidCreateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidCreateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidCreateManyWithoutCreatedByInput
  repliesToEchosOfEchosInVoid: ReplyToEchoOfEchoInVoidCreateManyWithoutCreatedByInput
}

input UserCreateWithoutCreatedShoutsInVoidsInput {
  userId: ID
  username: String!
  password: String!
  currentLocationGeohash: String!
  createdContent: ContentCreateManyWithoutCreatedByInput
  createdVoids: NVoidCreateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidCreateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutCreateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidCreateManyWithoutCreatedByInput
  activatedEchosOfEchos: UserActivatedEchoOfEchoCreateManyWithoutCreatedByInput
  createdEchosOfEchosInVoid: EchoOfEchoInVoidCreateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidCreateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidCreateManyWithoutCreatedByInput
  repliesToEchosOfEchosInVoid: ReplyToEchoOfEchoInVoidCreateManyWithoutCreatedByInput
}

input UserCreateWithoutCreatedVoidsInput {
  userId: ID
  username: String!
  password: String!
  currentLocationGeohash: String!
  createdContent: ContentCreateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidCreateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidCreateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutCreateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidCreateManyWithoutCreatedByInput
  activatedEchosOfEchos: UserActivatedEchoOfEchoCreateManyWithoutCreatedByInput
  createdEchosOfEchosInVoid: EchoOfEchoInVoidCreateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidCreateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidCreateManyWithoutCreatedByInput
  repliesToEchosOfEchosInVoid: ReplyToEchoOfEchoInVoidCreateManyWithoutCreatedByInput
}

input UserCreateWithoutRepliesToEchosOfEchosInVoidInput {
  userId: ID
  username: String!
  password: String!
  currentLocationGeohash: String!
  createdContent: ContentCreateManyWithoutCreatedByInput
  createdVoids: NVoidCreateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidCreateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidCreateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutCreateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidCreateManyWithoutCreatedByInput
  activatedEchosOfEchos: UserActivatedEchoOfEchoCreateManyWithoutCreatedByInput
  createdEchosOfEchosInVoid: EchoOfEchoInVoidCreateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidCreateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidCreateManyWithoutCreatedByInput
}

input UserCreateWithoutRepliesToEchosOfShoutsInVoidInput {
  userId: ID
  username: String!
  password: String!
  currentLocationGeohash: String!
  createdContent: ContentCreateManyWithoutCreatedByInput
  createdVoids: NVoidCreateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidCreateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidCreateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutCreateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidCreateManyWithoutCreatedByInput
  activatedEchosOfEchos: UserActivatedEchoOfEchoCreateManyWithoutCreatedByInput
  createdEchosOfEchosInVoid: EchoOfEchoInVoidCreateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidCreateManyWithoutCreatedByInput
  repliesToEchosOfEchosInVoid: ReplyToEchoOfEchoInVoidCreateManyWithoutCreatedByInput
}

input UserCreateWithoutRepliesToShoutsInVoidInput {
  userId: ID
  username: String!
  password: String!
  currentLocationGeohash: String!
  createdContent: ContentCreateManyWithoutCreatedByInput
  createdVoids: NVoidCreateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidCreateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidCreateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutCreateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidCreateManyWithoutCreatedByInput
  activatedEchosOfEchos: UserActivatedEchoOfEchoCreateManyWithoutCreatedByInput
  createdEchosOfEchosInVoid: EchoOfEchoInVoidCreateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidCreateManyWithoutCreatedByInput
  repliesToEchosOfEchosInVoid: ReplyToEchoOfEchoInVoidCreateManyWithoutCreatedByInput
}

input UserCreateWithoutSavedVoidsInput {
  userId: ID
  username: String!
  password: String!
  currentLocationGeohash: String!
  createdContent: ContentCreateManyWithoutCreatedByInput
  createdVoids: NVoidCreateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidCreateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutCreateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidCreateManyWithoutCreatedByInput
  activatedEchosOfEchos: UserActivatedEchoOfEchoCreateManyWithoutCreatedByInput
  createdEchosOfEchosInVoid: EchoOfEchoInVoidCreateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidCreateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidCreateManyWithoutCreatedByInput
  repliesToEchosOfEchosInVoid: ReplyToEchoOfEchoInVoidCreateManyWithoutCreatedByInput
}

type UserEdge {
  node: User!
  cursor: String!
}

enum UserOrderByInput {
  userId_ASC
  userId_DESC
  createdAt_ASC
  createdAt_DESC
  username_ASC
  username_DESC
  password_ASC
  password_DESC
  currentLocationGeohash_ASC
  currentLocationGeohash_DESC
}

type UserPreviousValues {
  userId: ID!
  createdAt: DateTime!
  username: String!
  password: String!
  currentLocationGeohash: String!
}

type UserSavedVoid {
  userSavedVoidId: ID!
  createdAt: DateTime!
  createdBy: User!
  originalVoidGeohash: String!
}

type UserSavedVoidConnection {
  pageInfo: PageInfo!
  edges: [UserSavedVoidEdge]!
  aggregate: AggregateUserSavedVoid!
}

input UserSavedVoidCreateInput {
  userSavedVoidId: ID
  createdBy: UserCreateOneWithoutSavedVoidsInput!
  originalVoidGeohash: String!
}

input UserSavedVoidCreateManyWithoutCreatedByInput {
  create: [UserSavedVoidCreateWithoutCreatedByInput!]
  connect: [UserSavedVoidWhereUniqueInput!]
}

input UserSavedVoidCreateWithoutCreatedByInput {
  userSavedVoidId: ID
  originalVoidGeohash: String!
}

type UserSavedVoidEdge {
  node: UserSavedVoid!
  cursor: String!
}

enum UserSavedVoidOrderByInput {
  userSavedVoidId_ASC
  userSavedVoidId_DESC
  createdAt_ASC
  createdAt_DESC
  originalVoidGeohash_ASC
  originalVoidGeohash_DESC
}

type UserSavedVoidPreviousValues {
  userSavedVoidId: ID!
  createdAt: DateTime!
  originalVoidGeohash: String!
}

input UserSavedVoidScalarWhereInput {
  userSavedVoidId: ID
  userSavedVoidId_not: ID
  userSavedVoidId_in: [ID!]
  userSavedVoidId_not_in: [ID!]
  userSavedVoidId_lt: ID
  userSavedVoidId_lte: ID
  userSavedVoidId_gt: ID
  userSavedVoidId_gte: ID
  userSavedVoidId_contains: ID
  userSavedVoidId_not_contains: ID
  userSavedVoidId_starts_with: ID
  userSavedVoidId_not_starts_with: ID
  userSavedVoidId_ends_with: ID
  userSavedVoidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  originalVoidGeohash: String
  originalVoidGeohash_not: String
  originalVoidGeohash_in: [String!]
  originalVoidGeohash_not_in: [String!]
  originalVoidGeohash_lt: String
  originalVoidGeohash_lte: String
  originalVoidGeohash_gt: String
  originalVoidGeohash_gte: String
  originalVoidGeohash_contains: String
  originalVoidGeohash_not_contains: String
  originalVoidGeohash_starts_with: String
  originalVoidGeohash_not_starts_with: String
  originalVoidGeohash_ends_with: String
  originalVoidGeohash_not_ends_with: String
  AND: [UserSavedVoidScalarWhereInput!]
  OR: [UserSavedVoidScalarWhereInput!]
  NOT: [UserSavedVoidScalarWhereInput!]
}

type UserSavedVoidSubscriptionPayload {
  mutation: MutationType!
  node: UserSavedVoid
  updatedFields: [String!]
  previousValues: UserSavedVoidPreviousValues
}

input UserSavedVoidSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UserSavedVoidWhereInput
  AND: [UserSavedVoidSubscriptionWhereInput!]
  OR: [UserSavedVoidSubscriptionWhereInput!]
  NOT: [UserSavedVoidSubscriptionWhereInput!]
}

input UserSavedVoidUpdateInput {
  createdBy: UserUpdateOneRequiredWithoutSavedVoidsInput
  originalVoidGeohash: String
}

input UserSavedVoidUpdateManyDataInput {
  originalVoidGeohash: String
}

input UserSavedVoidUpdateManyMutationInput {
  originalVoidGeohash: String
}

input UserSavedVoidUpdateManyWithoutCreatedByInput {
  create: [UserSavedVoidCreateWithoutCreatedByInput!]
  delete: [UserSavedVoidWhereUniqueInput!]
  connect: [UserSavedVoidWhereUniqueInput!]
  set: [UserSavedVoidWhereUniqueInput!]
  disconnect: [UserSavedVoidWhereUniqueInput!]
  update: [UserSavedVoidUpdateWithWhereUniqueWithoutCreatedByInput!]
  upsert: [UserSavedVoidUpsertWithWhereUniqueWithoutCreatedByInput!]
  deleteMany: [UserSavedVoidScalarWhereInput!]
  updateMany: [UserSavedVoidUpdateManyWithWhereNestedInput!]
}

input UserSavedVoidUpdateManyWithWhereNestedInput {
  where: UserSavedVoidScalarWhereInput!
  data: UserSavedVoidUpdateManyDataInput!
}

input UserSavedVoidUpdateWithoutCreatedByDataInput {
  originalVoidGeohash: String
}

input UserSavedVoidUpdateWithWhereUniqueWithoutCreatedByInput {
  where: UserSavedVoidWhereUniqueInput!
  data: UserSavedVoidUpdateWithoutCreatedByDataInput!
}

input UserSavedVoidUpsertWithWhereUniqueWithoutCreatedByInput {
  where: UserSavedVoidWhereUniqueInput!
  update: UserSavedVoidUpdateWithoutCreatedByDataInput!
  create: UserSavedVoidCreateWithoutCreatedByInput!
}

input UserSavedVoidWhereInput {
  userSavedVoidId: ID
  userSavedVoidId_not: ID
  userSavedVoidId_in: [ID!]
  userSavedVoidId_not_in: [ID!]
  userSavedVoidId_lt: ID
  userSavedVoidId_lte: ID
  userSavedVoidId_gt: ID
  userSavedVoidId_gte: ID
  userSavedVoidId_contains: ID
  userSavedVoidId_not_contains: ID
  userSavedVoidId_starts_with: ID
  userSavedVoidId_not_starts_with: ID
  userSavedVoidId_ends_with: ID
  userSavedVoidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdBy: UserWhereInput
  originalVoidGeohash: String
  originalVoidGeohash_not: String
  originalVoidGeohash_in: [String!]
  originalVoidGeohash_not_in: [String!]
  originalVoidGeohash_lt: String
  originalVoidGeohash_lte: String
  originalVoidGeohash_gt: String
  originalVoidGeohash_gte: String
  originalVoidGeohash_contains: String
  originalVoidGeohash_not_contains: String
  originalVoidGeohash_starts_with: String
  originalVoidGeohash_not_starts_with: String
  originalVoidGeohash_ends_with: String
  originalVoidGeohash_not_ends_with: String
  AND: [UserSavedVoidWhereInput!]
  OR: [UserSavedVoidWhereInput!]
  NOT: [UserSavedVoidWhereInput!]
}

input UserSavedVoidWhereUniqueInput {
  userSavedVoidId: ID
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UserWhereInput
  AND: [UserSubscriptionWhereInput!]
  OR: [UserSubscriptionWhereInput!]
  NOT: [UserSubscriptionWhereInput!]
}

input UserUpdateInput {
  username: String
  password: String
  currentLocationGeohash: String
  createdContent: ContentUpdateManyWithoutCreatedByInput
  createdVoids: NVoidUpdateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidUpdateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidUpdateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutUpdateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidUpdateManyWithoutCreatedByInput
  activatedEchosOfEchos: UserActivatedEchoOfEchoUpdateManyWithoutCreatedByInput
  createdEchosOfEchosInVoid: EchoOfEchoInVoidUpdateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToEchosOfEchosInVoid: ReplyToEchoOfEchoInVoidUpdateManyWithoutCreatedByInput
}

input UserUpdateManyMutationInput {
  username: String
  password: String
  currentLocationGeohash: String
}

input UserUpdateOneRequiredWithoutActivatedEchosOfEchosInput {
  create: UserCreateWithoutActivatedEchosOfEchosInput
  update: UserUpdateWithoutActivatedEchosOfEchosDataInput
  upsert: UserUpsertWithoutActivatedEchosOfEchosInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutActivatedEchosOfShoutsInput {
  create: UserCreateWithoutActivatedEchosOfShoutsInput
  update: UserUpdateWithoutActivatedEchosOfShoutsDataInput
  upsert: UserUpsertWithoutActivatedEchosOfShoutsInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutCreatedContentInput {
  create: UserCreateWithoutCreatedContentInput
  update: UserUpdateWithoutCreatedContentDataInput
  upsert: UserUpsertWithoutCreatedContentInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutCreatedEchosOfEchosInVoidInput {
  create: UserCreateWithoutCreatedEchosOfEchosInVoidInput
  update: UserUpdateWithoutCreatedEchosOfEchosInVoidDataInput
  upsert: UserUpsertWithoutCreatedEchosOfEchosInVoidInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutCreatedEchosOfShoutsInVoidInput {
  create: UserCreateWithoutCreatedEchosOfShoutsInVoidInput
  update: UserUpdateWithoutCreatedEchosOfShoutsInVoidDataInput
  upsert: UserUpsertWithoutCreatedEchosOfShoutsInVoidInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutCreatedShoutsInVoidsInput {
  create: UserCreateWithoutCreatedShoutsInVoidsInput
  update: UserUpdateWithoutCreatedShoutsInVoidsDataInput
  upsert: UserUpsertWithoutCreatedShoutsInVoidsInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutCreatedVoidsInput {
  create: UserCreateWithoutCreatedVoidsInput
  update: UserUpdateWithoutCreatedVoidsDataInput
  upsert: UserUpsertWithoutCreatedVoidsInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutRepliesToEchosOfEchosInVoidInput {
  create: UserCreateWithoutRepliesToEchosOfEchosInVoidInput
  update: UserUpdateWithoutRepliesToEchosOfEchosInVoidDataInput
  upsert: UserUpsertWithoutRepliesToEchosOfEchosInVoidInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutRepliesToEchosOfShoutsInVoidInput {
  create: UserCreateWithoutRepliesToEchosOfShoutsInVoidInput
  update: UserUpdateWithoutRepliesToEchosOfShoutsInVoidDataInput
  upsert: UserUpsertWithoutRepliesToEchosOfShoutsInVoidInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutRepliesToShoutsInVoidInput {
  create: UserCreateWithoutRepliesToShoutsInVoidInput
  update: UserUpdateWithoutRepliesToShoutsInVoidDataInput
  upsert: UserUpsertWithoutRepliesToShoutsInVoidInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutSavedVoidsInput {
  create: UserCreateWithoutSavedVoidsInput
  update: UserUpdateWithoutSavedVoidsDataInput
  upsert: UserUpsertWithoutSavedVoidsInput
  connect: UserWhereUniqueInput
}

input UserUpdateWithoutActivatedEchosOfEchosDataInput {
  username: String
  password: String
  currentLocationGeohash: String
  createdContent: ContentUpdateManyWithoutCreatedByInput
  createdVoids: NVoidUpdateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidUpdateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidUpdateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutUpdateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidUpdateManyWithoutCreatedByInput
  createdEchosOfEchosInVoid: EchoOfEchoInVoidUpdateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToEchosOfEchosInVoid: ReplyToEchoOfEchoInVoidUpdateManyWithoutCreatedByInput
}

input UserUpdateWithoutActivatedEchosOfShoutsDataInput {
  username: String
  password: String
  currentLocationGeohash: String
  createdContent: ContentUpdateManyWithoutCreatedByInput
  createdVoids: NVoidUpdateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidUpdateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidUpdateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidUpdateManyWithoutCreatedByInput
  activatedEchosOfEchos: UserActivatedEchoOfEchoUpdateManyWithoutCreatedByInput
  createdEchosOfEchosInVoid: EchoOfEchoInVoidUpdateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToEchosOfEchosInVoid: ReplyToEchoOfEchoInVoidUpdateManyWithoutCreatedByInput
}

input UserUpdateWithoutCreatedContentDataInput {
  username: String
  password: String
  currentLocationGeohash: String
  createdVoids: NVoidUpdateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidUpdateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidUpdateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutUpdateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidUpdateManyWithoutCreatedByInput
  activatedEchosOfEchos: UserActivatedEchoOfEchoUpdateManyWithoutCreatedByInput
  createdEchosOfEchosInVoid: EchoOfEchoInVoidUpdateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToEchosOfEchosInVoid: ReplyToEchoOfEchoInVoidUpdateManyWithoutCreatedByInput
}

input UserUpdateWithoutCreatedEchosOfEchosInVoidDataInput {
  username: String
  password: String
  currentLocationGeohash: String
  createdContent: ContentUpdateManyWithoutCreatedByInput
  createdVoids: NVoidUpdateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidUpdateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidUpdateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutUpdateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidUpdateManyWithoutCreatedByInput
  activatedEchosOfEchos: UserActivatedEchoOfEchoUpdateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToEchosOfEchosInVoid: ReplyToEchoOfEchoInVoidUpdateManyWithoutCreatedByInput
}

input UserUpdateWithoutCreatedEchosOfShoutsInVoidDataInput {
  username: String
  password: String
  currentLocationGeohash: String
  createdContent: ContentUpdateManyWithoutCreatedByInput
  createdVoids: NVoidUpdateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidUpdateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidUpdateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutUpdateManyWithoutCreatedByInput
  activatedEchosOfEchos: UserActivatedEchoOfEchoUpdateManyWithoutCreatedByInput
  createdEchosOfEchosInVoid: EchoOfEchoInVoidUpdateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToEchosOfEchosInVoid: ReplyToEchoOfEchoInVoidUpdateManyWithoutCreatedByInput
}

input UserUpdateWithoutCreatedShoutsInVoidsDataInput {
  username: String
  password: String
  currentLocationGeohash: String
  createdContent: ContentUpdateManyWithoutCreatedByInput
  createdVoids: NVoidUpdateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidUpdateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutUpdateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidUpdateManyWithoutCreatedByInput
  activatedEchosOfEchos: UserActivatedEchoOfEchoUpdateManyWithoutCreatedByInput
  createdEchosOfEchosInVoid: EchoOfEchoInVoidUpdateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToEchosOfEchosInVoid: ReplyToEchoOfEchoInVoidUpdateManyWithoutCreatedByInput
}

input UserUpdateWithoutCreatedVoidsDataInput {
  username: String
  password: String
  currentLocationGeohash: String
  createdContent: ContentUpdateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidUpdateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidUpdateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutUpdateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidUpdateManyWithoutCreatedByInput
  activatedEchosOfEchos: UserActivatedEchoOfEchoUpdateManyWithoutCreatedByInput
  createdEchosOfEchosInVoid: EchoOfEchoInVoidUpdateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToEchosOfEchosInVoid: ReplyToEchoOfEchoInVoidUpdateManyWithoutCreatedByInput
}

input UserUpdateWithoutRepliesToEchosOfEchosInVoidDataInput {
  username: String
  password: String
  currentLocationGeohash: String
  createdContent: ContentUpdateManyWithoutCreatedByInput
  createdVoids: NVoidUpdateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidUpdateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidUpdateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutUpdateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidUpdateManyWithoutCreatedByInput
  activatedEchosOfEchos: UserActivatedEchoOfEchoUpdateManyWithoutCreatedByInput
  createdEchosOfEchosInVoid: EchoOfEchoInVoidUpdateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidUpdateManyWithoutCreatedByInput
}

input UserUpdateWithoutRepliesToEchosOfShoutsInVoidDataInput {
  username: String
  password: String
  currentLocationGeohash: String
  createdContent: ContentUpdateManyWithoutCreatedByInput
  createdVoids: NVoidUpdateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidUpdateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidUpdateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutUpdateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidUpdateManyWithoutCreatedByInput
  activatedEchosOfEchos: UserActivatedEchoOfEchoUpdateManyWithoutCreatedByInput
  createdEchosOfEchosInVoid: EchoOfEchoInVoidUpdateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToEchosOfEchosInVoid: ReplyToEchoOfEchoInVoidUpdateManyWithoutCreatedByInput
}

input UserUpdateWithoutRepliesToShoutsInVoidDataInput {
  username: String
  password: String
  currentLocationGeohash: String
  createdContent: ContentUpdateManyWithoutCreatedByInput
  createdVoids: NVoidUpdateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidUpdateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidUpdateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutUpdateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidUpdateManyWithoutCreatedByInput
  activatedEchosOfEchos: UserActivatedEchoOfEchoUpdateManyWithoutCreatedByInput
  createdEchosOfEchosInVoid: EchoOfEchoInVoidUpdateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToEchosOfEchosInVoid: ReplyToEchoOfEchoInVoidUpdateManyWithoutCreatedByInput
}

input UserUpdateWithoutSavedVoidsDataInput {
  username: String
  password: String
  currentLocationGeohash: String
  createdContent: ContentUpdateManyWithoutCreatedByInput
  createdVoids: NVoidUpdateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidUpdateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutUpdateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidUpdateManyWithoutCreatedByInput
  activatedEchosOfEchos: UserActivatedEchoOfEchoUpdateManyWithoutCreatedByInput
  createdEchosOfEchosInVoid: EchoOfEchoInVoidUpdateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToEchosOfEchosInVoid: ReplyToEchoOfEchoInVoidUpdateManyWithoutCreatedByInput
}

input UserUpsertWithoutActivatedEchosOfEchosInput {
  update: UserUpdateWithoutActivatedEchosOfEchosDataInput!
  create: UserCreateWithoutActivatedEchosOfEchosInput!
}

input UserUpsertWithoutActivatedEchosOfShoutsInput {
  update: UserUpdateWithoutActivatedEchosOfShoutsDataInput!
  create: UserCreateWithoutActivatedEchosOfShoutsInput!
}

input UserUpsertWithoutCreatedContentInput {
  update: UserUpdateWithoutCreatedContentDataInput!
  create: UserCreateWithoutCreatedContentInput!
}

input UserUpsertWithoutCreatedEchosOfEchosInVoidInput {
  update: UserUpdateWithoutCreatedEchosOfEchosInVoidDataInput!
  create: UserCreateWithoutCreatedEchosOfEchosInVoidInput!
}

input UserUpsertWithoutCreatedEchosOfShoutsInVoidInput {
  update: UserUpdateWithoutCreatedEchosOfShoutsInVoidDataInput!
  create: UserCreateWithoutCreatedEchosOfShoutsInVoidInput!
}

input UserUpsertWithoutCreatedShoutsInVoidsInput {
  update: UserUpdateWithoutCreatedShoutsInVoidsDataInput!
  create: UserCreateWithoutCreatedShoutsInVoidsInput!
}

input UserUpsertWithoutCreatedVoidsInput {
  update: UserUpdateWithoutCreatedVoidsDataInput!
  create: UserCreateWithoutCreatedVoidsInput!
}

input UserUpsertWithoutRepliesToEchosOfEchosInVoidInput {
  update: UserUpdateWithoutRepliesToEchosOfEchosInVoidDataInput!
  create: UserCreateWithoutRepliesToEchosOfEchosInVoidInput!
}

input UserUpsertWithoutRepliesToEchosOfShoutsInVoidInput {
  update: UserUpdateWithoutRepliesToEchosOfShoutsInVoidDataInput!
  create: UserCreateWithoutRepliesToEchosOfShoutsInVoidInput!
}

input UserUpsertWithoutRepliesToShoutsInVoidInput {
  update: UserUpdateWithoutRepliesToShoutsInVoidDataInput!
  create: UserCreateWithoutRepliesToShoutsInVoidInput!
}

input UserUpsertWithoutSavedVoidsInput {
  update: UserUpdateWithoutSavedVoidsDataInput!
  create: UserCreateWithoutSavedVoidsInput!
}

input UserWhereInput {
  userId: ID
  userId_not: ID
  userId_in: [ID!]
  userId_not_in: [ID!]
  userId_lt: ID
  userId_lte: ID
  userId_gt: ID
  userId_gte: ID
  userId_contains: ID
  userId_not_contains: ID
  userId_starts_with: ID
  userId_not_starts_with: ID
  userId_ends_with: ID
  userId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  username: String
  username_not: String
  username_in: [String!]
  username_not_in: [String!]
  username_lt: String
  username_lte: String
  username_gt: String
  username_gte: String
  username_contains: String
  username_not_contains: String
  username_starts_with: String
  username_not_starts_with: String
  username_ends_with: String
  username_not_ends_with: String
  password: String
  password_not: String
  password_in: [String!]
  password_not_in: [String!]
  password_lt: String
  password_lte: String
  password_gt: String
  password_gte: String
  password_contains: String
  password_not_contains: String
  password_starts_with: String
  password_not_starts_with: String
  password_ends_with: String
  password_not_ends_with: String
  currentLocationGeohash: String
  currentLocationGeohash_not: String
  currentLocationGeohash_in: [String!]
  currentLocationGeohash_not_in: [String!]
  currentLocationGeohash_lt: String
  currentLocationGeohash_lte: String
  currentLocationGeohash_gt: String
  currentLocationGeohash_gte: String
  currentLocationGeohash_contains: String
  currentLocationGeohash_not_contains: String
  currentLocationGeohash_starts_with: String
  currentLocationGeohash_not_starts_with: String
  currentLocationGeohash_ends_with: String
  currentLocationGeohash_not_ends_with: String
  createdContent_every: ContentWhereInput
  createdContent_some: ContentWhereInput
  createdContent_none: ContentWhereInput
  createdVoids_every: NVoidWhereInput
  createdVoids_some: NVoidWhereInput
  createdVoids_none: NVoidWhereInput
  savedVoids_every: UserSavedVoidWhereInput
  savedVoids_some: UserSavedVoidWhereInput
  savedVoids_none: UserSavedVoidWhereInput
  createdShoutsInVoids_every: ShoutInVoidWhereInput
  createdShoutsInVoids_some: ShoutInVoidWhereInput
  createdShoutsInVoids_none: ShoutInVoidWhereInput
  activatedEchosOfShouts_every: UserActivatedEchoOfShoutWhereInput
  activatedEchosOfShouts_some: UserActivatedEchoOfShoutWhereInput
  activatedEchosOfShouts_none: UserActivatedEchoOfShoutWhereInput
  createdEchosOfShoutsInVoid_every: EchoOfShoutInVoidWhereInput
  createdEchosOfShoutsInVoid_some: EchoOfShoutInVoidWhereInput
  createdEchosOfShoutsInVoid_none: EchoOfShoutInVoidWhereInput
  activatedEchosOfEchos_every: UserActivatedEchoOfEchoWhereInput
  activatedEchosOfEchos_some: UserActivatedEchoOfEchoWhereInput
  activatedEchosOfEchos_none: UserActivatedEchoOfEchoWhereInput
  createdEchosOfEchosInVoid_every: EchoOfEchoInVoidWhereInput
  createdEchosOfEchosInVoid_some: EchoOfEchoInVoidWhereInput
  createdEchosOfEchosInVoid_none: EchoOfEchoInVoidWhereInput
  repliesToShoutsInVoid_every: ReplyToShoutInVoidWhereInput
  repliesToShoutsInVoid_some: ReplyToShoutInVoidWhereInput
  repliesToShoutsInVoid_none: ReplyToShoutInVoidWhereInput
  repliesToEchosOfShoutsInVoid_every: ReplyToEchoOfShoutInVoidWhereInput
  repliesToEchosOfShoutsInVoid_some: ReplyToEchoOfShoutInVoidWhereInput
  repliesToEchosOfShoutsInVoid_none: ReplyToEchoOfShoutInVoidWhereInput
  repliesToEchosOfEchosInVoid_every: ReplyToEchoOfEchoInVoidWhereInput
  repliesToEchosOfEchosInVoid_some: ReplyToEchoOfEchoInVoidWhereInput
  repliesToEchosOfEchosInVoid_none: ReplyToEchoOfEchoInVoidWhereInput
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
}

input UserWhereUniqueInput {
  userId: ID
}
`
      }
    