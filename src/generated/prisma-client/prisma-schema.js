module.exports = {
        typeDefs: // Code generated by Prisma (prisma@1.34.10). DO NOT EDIT.
  // Please don't change this file manually but run `prisma generate` to update it.
  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

/* GraphQL */ `type AggregateContent {
  count: Int!
}

type AggregateEchoOfShoutInVoid {
  count: Int!
}

type AggregateNVoid {
  count: Int!
}

type AggregateReplyToEchoOfShoutInVoid {
  count: Int!
}

type AggregateReplyToShoutInVoid {
  count: Int!
}

type AggregateShoutInVoid {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type AggregateUserActivatedEchoOfShout {
  count: Int!
}

type AggregateUserLocation {
  count: Int!
}

type AggregateUserSavedVoid {
  count: Int!
}

type AggregateVote {
  count: Int!
}

type AggregateVoteBucket {
  count: Int!
}

type BatchPayload {
  count: Long!
}

type Content {
  contentId: ID!
  createdAt: DateTime!
  createdBy: User!
  message: String!
}

type ContentConnection {
  pageInfo: PageInfo!
  edges: [ContentEdge]!
  aggregate: AggregateContent!
}

input ContentCreateInput {
  contentId: ID
  createdBy: UserCreateOneWithoutCreatedContentInput!
  message: String!
}

input ContentCreateManyWithoutCreatedByInput {
  create: [ContentCreateWithoutCreatedByInput!]
  connect: [ContentWhereUniqueInput!]
}

input ContentCreateOneInput {
  create: ContentCreateInput
  connect: ContentWhereUniqueInput
}

input ContentCreateWithoutCreatedByInput {
  contentId: ID
  message: String!
}

type ContentEdge {
  node: Content!
  cursor: String!
}

enum ContentOrderByInput {
  contentId_ASC
  contentId_DESC
  createdAt_ASC
  createdAt_DESC
  message_ASC
  message_DESC
}

type ContentPreviousValues {
  contentId: ID!
  createdAt: DateTime!
  message: String!
}

input ContentScalarWhereInput {
  contentId: ID
  contentId_not: ID
  contentId_in: [ID!]
  contentId_not_in: [ID!]
  contentId_lt: ID
  contentId_lte: ID
  contentId_gt: ID
  contentId_gte: ID
  contentId_contains: ID
  contentId_not_contains: ID
  contentId_starts_with: ID
  contentId_not_starts_with: ID
  contentId_ends_with: ID
  contentId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  message: String
  message_not: String
  message_in: [String!]
  message_not_in: [String!]
  message_lt: String
  message_lte: String
  message_gt: String
  message_gte: String
  message_contains: String
  message_not_contains: String
  message_starts_with: String
  message_not_starts_with: String
  message_ends_with: String
  message_not_ends_with: String
  AND: [ContentScalarWhereInput!]
  OR: [ContentScalarWhereInput!]
  NOT: [ContentScalarWhereInput!]
}

type ContentSubscriptionPayload {
  mutation: MutationType!
  node: Content
  updatedFields: [String!]
  previousValues: ContentPreviousValues
}

input ContentSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ContentWhereInput
  AND: [ContentSubscriptionWhereInput!]
  OR: [ContentSubscriptionWhereInput!]
  NOT: [ContentSubscriptionWhereInput!]
}

input ContentUpdateDataInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedContentInput
  message: String
}

input ContentUpdateInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedContentInput
  message: String
}

input ContentUpdateManyDataInput {
  message: String
}

input ContentUpdateManyMutationInput {
  message: String
}

input ContentUpdateManyWithoutCreatedByInput {
  create: [ContentCreateWithoutCreatedByInput!]
  delete: [ContentWhereUniqueInput!]
  connect: [ContentWhereUniqueInput!]
  set: [ContentWhereUniqueInput!]
  disconnect: [ContentWhereUniqueInput!]
  update: [ContentUpdateWithWhereUniqueWithoutCreatedByInput!]
  upsert: [ContentUpsertWithWhereUniqueWithoutCreatedByInput!]
  deleteMany: [ContentScalarWhereInput!]
  updateMany: [ContentUpdateManyWithWhereNestedInput!]
}

input ContentUpdateManyWithWhereNestedInput {
  where: ContentScalarWhereInput!
  data: ContentUpdateManyDataInput!
}

input ContentUpdateOneRequiredInput {
  create: ContentCreateInput
  update: ContentUpdateDataInput
  upsert: ContentUpsertNestedInput
  connect: ContentWhereUniqueInput
}

input ContentUpdateWithoutCreatedByDataInput {
  message: String
}

input ContentUpdateWithWhereUniqueWithoutCreatedByInput {
  where: ContentWhereUniqueInput!
  data: ContentUpdateWithoutCreatedByDataInput!
}

input ContentUpsertNestedInput {
  update: ContentUpdateDataInput!
  create: ContentCreateInput!
}

input ContentUpsertWithWhereUniqueWithoutCreatedByInput {
  where: ContentWhereUniqueInput!
  update: ContentUpdateWithoutCreatedByDataInput!
  create: ContentCreateWithoutCreatedByInput!
}

input ContentWhereInput {
  contentId: ID
  contentId_not: ID
  contentId_in: [ID!]
  contentId_not_in: [ID!]
  contentId_lt: ID
  contentId_lte: ID
  contentId_gt: ID
  contentId_gte: ID
  contentId_contains: ID
  contentId_not_contains: ID
  contentId_starts_with: ID
  contentId_not_starts_with: ID
  contentId_ends_with: ID
  contentId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdBy: UserWhereInput
  message: String
  message_not: String
  message_in: [String!]
  message_not_in: [String!]
  message_lt: String
  message_lte: String
  message_gt: String
  message_gte: String
  message_contains: String
  message_not_contains: String
  message_starts_with: String
  message_not_starts_with: String
  message_ends_with: String
  message_not_ends_with: String
  AND: [ContentWhereInput!]
  OR: [ContentWhereInput!]
  NOT: [ContentWhereInput!]
}

input ContentWhereUniqueInput {
  contentId: ID
}

scalar DateTime

type EchoOfShoutInVoid {
  echoOfShoutInVoidId: ID!
  createdAt: DateTime!
  createdBy: User!
  originalShoutContent: Content!
  originalShoutVoidGeohash: String!
  originalShoutInVoid: ShoutInVoid!
  originalEchoOfShoutInVoid: EchoOfShoutInVoid
  nVoid: NVoid!
  voteBucket: VoteBucket!
  echosOfEchos(where: EchoOfShoutInVoidWhereInput, orderBy: EchoOfShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [EchoOfShoutInVoid!]
  replies(where: ReplyToEchoOfShoutInVoidWhereInput, orderBy: ReplyToEchoOfShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ReplyToEchoOfShoutInVoid!]
}

type EchoOfShoutInVoidConnection {
  pageInfo: PageInfo!
  edges: [EchoOfShoutInVoidEdge]!
  aggregate: AggregateEchoOfShoutInVoid!
}

input EchoOfShoutInVoidCreateInput {
  echoOfShoutInVoidId: ID
  createdBy: UserCreateOneWithoutCreatedEchosOfShoutsInVoidInput!
  originalShoutContent: ContentCreateOneInput!
  originalShoutVoidGeohash: String!
  originalShoutInVoid: ShoutInVoidCreateOneWithoutEchosInput!
  originalEchoOfShoutInVoid: EchoOfShoutInVoidCreateOneWithoutEchosOfEchosInput
  nVoid: NVoidCreateOneWithoutEchosInput!
  voteBucket: VoteBucketCreateOneInput!
  echosOfEchos: EchoOfShoutInVoidCreateManyWithoutOriginalEchoOfShoutInVoidInput
  replies: ReplyToEchoOfShoutInVoidCreateManyWithoutOriginalEchoOfShoutInVoidInput
}

input EchoOfShoutInVoidCreateManyWithoutCreatedByInput {
  create: [EchoOfShoutInVoidCreateWithoutCreatedByInput!]
  connect: [EchoOfShoutInVoidWhereUniqueInput!]
}

input EchoOfShoutInVoidCreateManyWithoutNVoidInput {
  create: [EchoOfShoutInVoidCreateWithoutNVoidInput!]
  connect: [EchoOfShoutInVoidWhereUniqueInput!]
}

input EchoOfShoutInVoidCreateManyWithoutOriginalEchoOfShoutInVoidInput {
  create: [EchoOfShoutInVoidCreateWithoutOriginalEchoOfShoutInVoidInput!]
  connect: [EchoOfShoutInVoidWhereUniqueInput!]
}

input EchoOfShoutInVoidCreateManyWithoutOriginalShoutInVoidInput {
  create: [EchoOfShoutInVoidCreateWithoutOriginalShoutInVoidInput!]
  connect: [EchoOfShoutInVoidWhereUniqueInput!]
}

input EchoOfShoutInVoidCreateOneInput {
  create: EchoOfShoutInVoidCreateInput
  connect: EchoOfShoutInVoidWhereUniqueInput
}

input EchoOfShoutInVoidCreateOneWithoutEchosOfEchosInput {
  create: EchoOfShoutInVoidCreateWithoutEchosOfEchosInput
  connect: EchoOfShoutInVoidWhereUniqueInput
}

input EchoOfShoutInVoidCreateOneWithoutRepliesInput {
  create: EchoOfShoutInVoidCreateWithoutRepliesInput
  connect: EchoOfShoutInVoidWhereUniqueInput
}

input EchoOfShoutInVoidCreateWithoutCreatedByInput {
  echoOfShoutInVoidId: ID
  originalShoutContent: ContentCreateOneInput!
  originalShoutVoidGeohash: String!
  originalShoutInVoid: ShoutInVoidCreateOneWithoutEchosInput!
  originalEchoOfShoutInVoid: EchoOfShoutInVoidCreateOneWithoutEchosOfEchosInput
  nVoid: NVoidCreateOneWithoutEchosInput!
  voteBucket: VoteBucketCreateOneInput!
  echosOfEchos: EchoOfShoutInVoidCreateManyWithoutOriginalEchoOfShoutInVoidInput
  replies: ReplyToEchoOfShoutInVoidCreateManyWithoutOriginalEchoOfShoutInVoidInput
}

input EchoOfShoutInVoidCreateWithoutEchosOfEchosInput {
  echoOfShoutInVoidId: ID
  createdBy: UserCreateOneWithoutCreatedEchosOfShoutsInVoidInput!
  originalShoutContent: ContentCreateOneInput!
  originalShoutVoidGeohash: String!
  originalShoutInVoid: ShoutInVoidCreateOneWithoutEchosInput!
  originalEchoOfShoutInVoid: EchoOfShoutInVoidCreateOneWithoutEchosOfEchosInput
  nVoid: NVoidCreateOneWithoutEchosInput!
  voteBucket: VoteBucketCreateOneInput!
  replies: ReplyToEchoOfShoutInVoidCreateManyWithoutOriginalEchoOfShoutInVoidInput
}

input EchoOfShoutInVoidCreateWithoutNVoidInput {
  echoOfShoutInVoidId: ID
  createdBy: UserCreateOneWithoutCreatedEchosOfShoutsInVoidInput!
  originalShoutContent: ContentCreateOneInput!
  originalShoutVoidGeohash: String!
  originalShoutInVoid: ShoutInVoidCreateOneWithoutEchosInput!
  originalEchoOfShoutInVoid: EchoOfShoutInVoidCreateOneWithoutEchosOfEchosInput
  voteBucket: VoteBucketCreateOneInput!
  echosOfEchos: EchoOfShoutInVoidCreateManyWithoutOriginalEchoOfShoutInVoidInput
  replies: ReplyToEchoOfShoutInVoidCreateManyWithoutOriginalEchoOfShoutInVoidInput
}

input EchoOfShoutInVoidCreateWithoutOriginalEchoOfShoutInVoidInput {
  echoOfShoutInVoidId: ID
  createdBy: UserCreateOneWithoutCreatedEchosOfShoutsInVoidInput!
  originalShoutContent: ContentCreateOneInput!
  originalShoutVoidGeohash: String!
  originalShoutInVoid: ShoutInVoidCreateOneWithoutEchosInput!
  nVoid: NVoidCreateOneWithoutEchosInput!
  voteBucket: VoteBucketCreateOneInput!
  echosOfEchos: EchoOfShoutInVoidCreateManyWithoutOriginalEchoOfShoutInVoidInput
  replies: ReplyToEchoOfShoutInVoidCreateManyWithoutOriginalEchoOfShoutInVoidInput
}

input EchoOfShoutInVoidCreateWithoutOriginalShoutInVoidInput {
  echoOfShoutInVoidId: ID
  createdBy: UserCreateOneWithoutCreatedEchosOfShoutsInVoidInput!
  originalShoutContent: ContentCreateOneInput!
  originalShoutVoidGeohash: String!
  originalEchoOfShoutInVoid: EchoOfShoutInVoidCreateOneWithoutEchosOfEchosInput
  nVoid: NVoidCreateOneWithoutEchosInput!
  voteBucket: VoteBucketCreateOneInput!
  echosOfEchos: EchoOfShoutInVoidCreateManyWithoutOriginalEchoOfShoutInVoidInput
  replies: ReplyToEchoOfShoutInVoidCreateManyWithoutOriginalEchoOfShoutInVoidInput
}

input EchoOfShoutInVoidCreateWithoutRepliesInput {
  echoOfShoutInVoidId: ID
  createdBy: UserCreateOneWithoutCreatedEchosOfShoutsInVoidInput!
  originalShoutContent: ContentCreateOneInput!
  originalShoutVoidGeohash: String!
  originalShoutInVoid: ShoutInVoidCreateOneWithoutEchosInput!
  originalEchoOfShoutInVoid: EchoOfShoutInVoidCreateOneWithoutEchosOfEchosInput
  nVoid: NVoidCreateOneWithoutEchosInput!
  voteBucket: VoteBucketCreateOneInput!
  echosOfEchos: EchoOfShoutInVoidCreateManyWithoutOriginalEchoOfShoutInVoidInput
}

type EchoOfShoutInVoidEdge {
  node: EchoOfShoutInVoid!
  cursor: String!
}

enum EchoOfShoutInVoidOrderByInput {
  echoOfShoutInVoidId_ASC
  echoOfShoutInVoidId_DESC
  createdAt_ASC
  createdAt_DESC
  originalShoutVoidGeohash_ASC
  originalShoutVoidGeohash_DESC
}

type EchoOfShoutInVoidPreviousValues {
  echoOfShoutInVoidId: ID!
  createdAt: DateTime!
  originalShoutVoidGeohash: String!
}

input EchoOfShoutInVoidScalarWhereInput {
  echoOfShoutInVoidId: ID
  echoOfShoutInVoidId_not: ID
  echoOfShoutInVoidId_in: [ID!]
  echoOfShoutInVoidId_not_in: [ID!]
  echoOfShoutInVoidId_lt: ID
  echoOfShoutInVoidId_lte: ID
  echoOfShoutInVoidId_gt: ID
  echoOfShoutInVoidId_gte: ID
  echoOfShoutInVoidId_contains: ID
  echoOfShoutInVoidId_not_contains: ID
  echoOfShoutInVoidId_starts_with: ID
  echoOfShoutInVoidId_not_starts_with: ID
  echoOfShoutInVoidId_ends_with: ID
  echoOfShoutInVoidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  originalShoutVoidGeohash: String
  originalShoutVoidGeohash_not: String
  originalShoutVoidGeohash_in: [String!]
  originalShoutVoidGeohash_not_in: [String!]
  originalShoutVoidGeohash_lt: String
  originalShoutVoidGeohash_lte: String
  originalShoutVoidGeohash_gt: String
  originalShoutVoidGeohash_gte: String
  originalShoutVoidGeohash_contains: String
  originalShoutVoidGeohash_not_contains: String
  originalShoutVoidGeohash_starts_with: String
  originalShoutVoidGeohash_not_starts_with: String
  originalShoutVoidGeohash_ends_with: String
  originalShoutVoidGeohash_not_ends_with: String
  AND: [EchoOfShoutInVoidScalarWhereInput!]
  OR: [EchoOfShoutInVoidScalarWhereInput!]
  NOT: [EchoOfShoutInVoidScalarWhereInput!]
}

type EchoOfShoutInVoidSubscriptionPayload {
  mutation: MutationType!
  node: EchoOfShoutInVoid
  updatedFields: [String!]
  previousValues: EchoOfShoutInVoidPreviousValues
}

input EchoOfShoutInVoidSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: EchoOfShoutInVoidWhereInput
  AND: [EchoOfShoutInVoidSubscriptionWhereInput!]
  OR: [EchoOfShoutInVoidSubscriptionWhereInput!]
  NOT: [EchoOfShoutInVoidSubscriptionWhereInput!]
}

input EchoOfShoutInVoidUpdateDataInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedEchosOfShoutsInVoidInput
  originalShoutContent: ContentUpdateOneRequiredInput
  originalShoutVoidGeohash: String
  originalShoutInVoid: ShoutInVoidUpdateOneRequiredWithoutEchosInput
  originalEchoOfShoutInVoid: EchoOfShoutInVoidUpdateOneWithoutEchosOfEchosInput
  nVoid: NVoidUpdateOneRequiredWithoutEchosInput
  voteBucket: VoteBucketUpdateOneRequiredInput
  echosOfEchos: EchoOfShoutInVoidUpdateManyWithoutOriginalEchoOfShoutInVoidInput
  replies: ReplyToEchoOfShoutInVoidUpdateManyWithoutOriginalEchoOfShoutInVoidInput
}

input EchoOfShoutInVoidUpdateInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedEchosOfShoutsInVoidInput
  originalShoutContent: ContentUpdateOneRequiredInput
  originalShoutVoidGeohash: String
  originalShoutInVoid: ShoutInVoidUpdateOneRequiredWithoutEchosInput
  originalEchoOfShoutInVoid: EchoOfShoutInVoidUpdateOneWithoutEchosOfEchosInput
  nVoid: NVoidUpdateOneRequiredWithoutEchosInput
  voteBucket: VoteBucketUpdateOneRequiredInput
  echosOfEchos: EchoOfShoutInVoidUpdateManyWithoutOriginalEchoOfShoutInVoidInput
  replies: ReplyToEchoOfShoutInVoidUpdateManyWithoutOriginalEchoOfShoutInVoidInput
}

input EchoOfShoutInVoidUpdateManyDataInput {
  originalShoutVoidGeohash: String
}

input EchoOfShoutInVoidUpdateManyMutationInput {
  originalShoutVoidGeohash: String
}

input EchoOfShoutInVoidUpdateManyWithoutCreatedByInput {
  create: [EchoOfShoutInVoidCreateWithoutCreatedByInput!]
  delete: [EchoOfShoutInVoidWhereUniqueInput!]
  connect: [EchoOfShoutInVoidWhereUniqueInput!]
  set: [EchoOfShoutInVoidWhereUniqueInput!]
  disconnect: [EchoOfShoutInVoidWhereUniqueInput!]
  update: [EchoOfShoutInVoidUpdateWithWhereUniqueWithoutCreatedByInput!]
  upsert: [EchoOfShoutInVoidUpsertWithWhereUniqueWithoutCreatedByInput!]
  deleteMany: [EchoOfShoutInVoidScalarWhereInput!]
  updateMany: [EchoOfShoutInVoidUpdateManyWithWhereNestedInput!]
}

input EchoOfShoutInVoidUpdateManyWithoutNVoidInput {
  create: [EchoOfShoutInVoidCreateWithoutNVoidInput!]
  delete: [EchoOfShoutInVoidWhereUniqueInput!]
  connect: [EchoOfShoutInVoidWhereUniqueInput!]
  set: [EchoOfShoutInVoidWhereUniqueInput!]
  disconnect: [EchoOfShoutInVoidWhereUniqueInput!]
  update: [EchoOfShoutInVoidUpdateWithWhereUniqueWithoutNVoidInput!]
  upsert: [EchoOfShoutInVoidUpsertWithWhereUniqueWithoutNVoidInput!]
  deleteMany: [EchoOfShoutInVoidScalarWhereInput!]
  updateMany: [EchoOfShoutInVoidUpdateManyWithWhereNestedInput!]
}

input EchoOfShoutInVoidUpdateManyWithoutOriginalEchoOfShoutInVoidInput {
  create: [EchoOfShoutInVoidCreateWithoutOriginalEchoOfShoutInVoidInput!]
  delete: [EchoOfShoutInVoidWhereUniqueInput!]
  connect: [EchoOfShoutInVoidWhereUniqueInput!]
  set: [EchoOfShoutInVoidWhereUniqueInput!]
  disconnect: [EchoOfShoutInVoidWhereUniqueInput!]
  update: [EchoOfShoutInVoidUpdateWithWhereUniqueWithoutOriginalEchoOfShoutInVoidInput!]
  upsert: [EchoOfShoutInVoidUpsertWithWhereUniqueWithoutOriginalEchoOfShoutInVoidInput!]
  deleteMany: [EchoOfShoutInVoidScalarWhereInput!]
  updateMany: [EchoOfShoutInVoidUpdateManyWithWhereNestedInput!]
}

input EchoOfShoutInVoidUpdateManyWithoutOriginalShoutInVoidInput {
  create: [EchoOfShoutInVoidCreateWithoutOriginalShoutInVoidInput!]
  delete: [EchoOfShoutInVoidWhereUniqueInput!]
  connect: [EchoOfShoutInVoidWhereUniqueInput!]
  set: [EchoOfShoutInVoidWhereUniqueInput!]
  disconnect: [EchoOfShoutInVoidWhereUniqueInput!]
  update: [EchoOfShoutInVoidUpdateWithWhereUniqueWithoutOriginalShoutInVoidInput!]
  upsert: [EchoOfShoutInVoidUpsertWithWhereUniqueWithoutOriginalShoutInVoidInput!]
  deleteMany: [EchoOfShoutInVoidScalarWhereInput!]
  updateMany: [EchoOfShoutInVoidUpdateManyWithWhereNestedInput!]
}

input EchoOfShoutInVoidUpdateManyWithWhereNestedInput {
  where: EchoOfShoutInVoidScalarWhereInput!
  data: EchoOfShoutInVoidUpdateManyDataInput!
}

input EchoOfShoutInVoidUpdateOneInput {
  create: EchoOfShoutInVoidCreateInput
  update: EchoOfShoutInVoidUpdateDataInput
  upsert: EchoOfShoutInVoidUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: EchoOfShoutInVoidWhereUniqueInput
}

input EchoOfShoutInVoidUpdateOneRequiredWithoutRepliesInput {
  create: EchoOfShoutInVoidCreateWithoutRepliesInput
  update: EchoOfShoutInVoidUpdateWithoutRepliesDataInput
  upsert: EchoOfShoutInVoidUpsertWithoutRepliesInput
  connect: EchoOfShoutInVoidWhereUniqueInput
}

input EchoOfShoutInVoidUpdateOneWithoutEchosOfEchosInput {
  create: EchoOfShoutInVoidCreateWithoutEchosOfEchosInput
  update: EchoOfShoutInVoidUpdateWithoutEchosOfEchosDataInput
  upsert: EchoOfShoutInVoidUpsertWithoutEchosOfEchosInput
  delete: Boolean
  disconnect: Boolean
  connect: EchoOfShoutInVoidWhereUniqueInput
}

input EchoOfShoutInVoidUpdateWithoutCreatedByDataInput {
  originalShoutContent: ContentUpdateOneRequiredInput
  originalShoutVoidGeohash: String
  originalShoutInVoid: ShoutInVoidUpdateOneRequiredWithoutEchosInput
  originalEchoOfShoutInVoid: EchoOfShoutInVoidUpdateOneWithoutEchosOfEchosInput
  nVoid: NVoidUpdateOneRequiredWithoutEchosInput
  voteBucket: VoteBucketUpdateOneRequiredInput
  echosOfEchos: EchoOfShoutInVoidUpdateManyWithoutOriginalEchoOfShoutInVoidInput
  replies: ReplyToEchoOfShoutInVoidUpdateManyWithoutOriginalEchoOfShoutInVoidInput
}

input EchoOfShoutInVoidUpdateWithoutEchosOfEchosDataInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedEchosOfShoutsInVoidInput
  originalShoutContent: ContentUpdateOneRequiredInput
  originalShoutVoidGeohash: String
  originalShoutInVoid: ShoutInVoidUpdateOneRequiredWithoutEchosInput
  originalEchoOfShoutInVoid: EchoOfShoutInVoidUpdateOneWithoutEchosOfEchosInput
  nVoid: NVoidUpdateOneRequiredWithoutEchosInput
  voteBucket: VoteBucketUpdateOneRequiredInput
  replies: ReplyToEchoOfShoutInVoidUpdateManyWithoutOriginalEchoOfShoutInVoidInput
}

input EchoOfShoutInVoidUpdateWithoutNVoidDataInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedEchosOfShoutsInVoidInput
  originalShoutContent: ContentUpdateOneRequiredInput
  originalShoutVoidGeohash: String
  originalShoutInVoid: ShoutInVoidUpdateOneRequiredWithoutEchosInput
  originalEchoOfShoutInVoid: EchoOfShoutInVoidUpdateOneWithoutEchosOfEchosInput
  voteBucket: VoteBucketUpdateOneRequiredInput
  echosOfEchos: EchoOfShoutInVoidUpdateManyWithoutOriginalEchoOfShoutInVoidInput
  replies: ReplyToEchoOfShoutInVoidUpdateManyWithoutOriginalEchoOfShoutInVoidInput
}

input EchoOfShoutInVoidUpdateWithoutOriginalEchoOfShoutInVoidDataInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedEchosOfShoutsInVoidInput
  originalShoutContent: ContentUpdateOneRequiredInput
  originalShoutVoidGeohash: String
  originalShoutInVoid: ShoutInVoidUpdateOneRequiredWithoutEchosInput
  nVoid: NVoidUpdateOneRequiredWithoutEchosInput
  voteBucket: VoteBucketUpdateOneRequiredInput
  echosOfEchos: EchoOfShoutInVoidUpdateManyWithoutOriginalEchoOfShoutInVoidInput
  replies: ReplyToEchoOfShoutInVoidUpdateManyWithoutOriginalEchoOfShoutInVoidInput
}

input EchoOfShoutInVoidUpdateWithoutOriginalShoutInVoidDataInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedEchosOfShoutsInVoidInput
  originalShoutContent: ContentUpdateOneRequiredInput
  originalShoutVoidGeohash: String
  originalEchoOfShoutInVoid: EchoOfShoutInVoidUpdateOneWithoutEchosOfEchosInput
  nVoid: NVoidUpdateOneRequiredWithoutEchosInput
  voteBucket: VoteBucketUpdateOneRequiredInput
  echosOfEchos: EchoOfShoutInVoidUpdateManyWithoutOriginalEchoOfShoutInVoidInput
  replies: ReplyToEchoOfShoutInVoidUpdateManyWithoutOriginalEchoOfShoutInVoidInput
}

input EchoOfShoutInVoidUpdateWithoutRepliesDataInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedEchosOfShoutsInVoidInput
  originalShoutContent: ContentUpdateOneRequiredInput
  originalShoutVoidGeohash: String
  originalShoutInVoid: ShoutInVoidUpdateOneRequiredWithoutEchosInput
  originalEchoOfShoutInVoid: EchoOfShoutInVoidUpdateOneWithoutEchosOfEchosInput
  nVoid: NVoidUpdateOneRequiredWithoutEchosInput
  voteBucket: VoteBucketUpdateOneRequiredInput
  echosOfEchos: EchoOfShoutInVoidUpdateManyWithoutOriginalEchoOfShoutInVoidInput
}

input EchoOfShoutInVoidUpdateWithWhereUniqueWithoutCreatedByInput {
  where: EchoOfShoutInVoidWhereUniqueInput!
  data: EchoOfShoutInVoidUpdateWithoutCreatedByDataInput!
}

input EchoOfShoutInVoidUpdateWithWhereUniqueWithoutNVoidInput {
  where: EchoOfShoutInVoidWhereUniqueInput!
  data: EchoOfShoutInVoidUpdateWithoutNVoidDataInput!
}

input EchoOfShoutInVoidUpdateWithWhereUniqueWithoutOriginalEchoOfShoutInVoidInput {
  where: EchoOfShoutInVoidWhereUniqueInput!
  data: EchoOfShoutInVoidUpdateWithoutOriginalEchoOfShoutInVoidDataInput!
}

input EchoOfShoutInVoidUpdateWithWhereUniqueWithoutOriginalShoutInVoidInput {
  where: EchoOfShoutInVoidWhereUniqueInput!
  data: EchoOfShoutInVoidUpdateWithoutOriginalShoutInVoidDataInput!
}

input EchoOfShoutInVoidUpsertNestedInput {
  update: EchoOfShoutInVoidUpdateDataInput!
  create: EchoOfShoutInVoidCreateInput!
}

input EchoOfShoutInVoidUpsertWithoutEchosOfEchosInput {
  update: EchoOfShoutInVoidUpdateWithoutEchosOfEchosDataInput!
  create: EchoOfShoutInVoidCreateWithoutEchosOfEchosInput!
}

input EchoOfShoutInVoidUpsertWithoutRepliesInput {
  update: EchoOfShoutInVoidUpdateWithoutRepliesDataInput!
  create: EchoOfShoutInVoidCreateWithoutRepliesInput!
}

input EchoOfShoutInVoidUpsertWithWhereUniqueWithoutCreatedByInput {
  where: EchoOfShoutInVoidWhereUniqueInput!
  update: EchoOfShoutInVoidUpdateWithoutCreatedByDataInput!
  create: EchoOfShoutInVoidCreateWithoutCreatedByInput!
}

input EchoOfShoutInVoidUpsertWithWhereUniqueWithoutNVoidInput {
  where: EchoOfShoutInVoidWhereUniqueInput!
  update: EchoOfShoutInVoidUpdateWithoutNVoidDataInput!
  create: EchoOfShoutInVoidCreateWithoutNVoidInput!
}

input EchoOfShoutInVoidUpsertWithWhereUniqueWithoutOriginalEchoOfShoutInVoidInput {
  where: EchoOfShoutInVoidWhereUniqueInput!
  update: EchoOfShoutInVoidUpdateWithoutOriginalEchoOfShoutInVoidDataInput!
  create: EchoOfShoutInVoidCreateWithoutOriginalEchoOfShoutInVoidInput!
}

input EchoOfShoutInVoidUpsertWithWhereUniqueWithoutOriginalShoutInVoidInput {
  where: EchoOfShoutInVoidWhereUniqueInput!
  update: EchoOfShoutInVoidUpdateWithoutOriginalShoutInVoidDataInput!
  create: EchoOfShoutInVoidCreateWithoutOriginalShoutInVoidInput!
}

input EchoOfShoutInVoidWhereInput {
  echoOfShoutInVoidId: ID
  echoOfShoutInVoidId_not: ID
  echoOfShoutInVoidId_in: [ID!]
  echoOfShoutInVoidId_not_in: [ID!]
  echoOfShoutInVoidId_lt: ID
  echoOfShoutInVoidId_lte: ID
  echoOfShoutInVoidId_gt: ID
  echoOfShoutInVoidId_gte: ID
  echoOfShoutInVoidId_contains: ID
  echoOfShoutInVoidId_not_contains: ID
  echoOfShoutInVoidId_starts_with: ID
  echoOfShoutInVoidId_not_starts_with: ID
  echoOfShoutInVoidId_ends_with: ID
  echoOfShoutInVoidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdBy: UserWhereInput
  originalShoutContent: ContentWhereInput
  originalShoutVoidGeohash: String
  originalShoutVoidGeohash_not: String
  originalShoutVoidGeohash_in: [String!]
  originalShoutVoidGeohash_not_in: [String!]
  originalShoutVoidGeohash_lt: String
  originalShoutVoidGeohash_lte: String
  originalShoutVoidGeohash_gt: String
  originalShoutVoidGeohash_gte: String
  originalShoutVoidGeohash_contains: String
  originalShoutVoidGeohash_not_contains: String
  originalShoutVoidGeohash_starts_with: String
  originalShoutVoidGeohash_not_starts_with: String
  originalShoutVoidGeohash_ends_with: String
  originalShoutVoidGeohash_not_ends_with: String
  originalShoutInVoid: ShoutInVoidWhereInput
  originalEchoOfShoutInVoid: EchoOfShoutInVoidWhereInput
  nVoid: NVoidWhereInput
  voteBucket: VoteBucketWhereInput
  echosOfEchos_every: EchoOfShoutInVoidWhereInput
  echosOfEchos_some: EchoOfShoutInVoidWhereInput
  echosOfEchos_none: EchoOfShoutInVoidWhereInput
  replies_every: ReplyToEchoOfShoutInVoidWhereInput
  replies_some: ReplyToEchoOfShoutInVoidWhereInput
  replies_none: ReplyToEchoOfShoutInVoidWhereInput
  AND: [EchoOfShoutInVoidWhereInput!]
  OR: [EchoOfShoutInVoidWhereInput!]
  NOT: [EchoOfShoutInVoidWhereInput!]
}

input EchoOfShoutInVoidWhereUniqueInput {
  echoOfShoutInVoidId: ID
}

scalar Long

type Mutation {
  createContent(data: ContentCreateInput!): Content!
  updateContent(data: ContentUpdateInput!, where: ContentWhereUniqueInput!): Content
  updateManyContents(data: ContentUpdateManyMutationInput!, where: ContentWhereInput): BatchPayload!
  upsertContent(where: ContentWhereUniqueInput!, create: ContentCreateInput!, update: ContentUpdateInput!): Content!
  deleteContent(where: ContentWhereUniqueInput!): Content
  deleteManyContents(where: ContentWhereInput): BatchPayload!
  createEchoOfShoutInVoid(data: EchoOfShoutInVoidCreateInput!): EchoOfShoutInVoid!
  updateEchoOfShoutInVoid(data: EchoOfShoutInVoidUpdateInput!, where: EchoOfShoutInVoidWhereUniqueInput!): EchoOfShoutInVoid
  updateManyEchoOfShoutInVoids(data: EchoOfShoutInVoidUpdateManyMutationInput!, where: EchoOfShoutInVoidWhereInput): BatchPayload!
  upsertEchoOfShoutInVoid(where: EchoOfShoutInVoidWhereUniqueInput!, create: EchoOfShoutInVoidCreateInput!, update: EchoOfShoutInVoidUpdateInput!): EchoOfShoutInVoid!
  deleteEchoOfShoutInVoid(where: EchoOfShoutInVoidWhereUniqueInput!): EchoOfShoutInVoid
  deleteManyEchoOfShoutInVoids(where: EchoOfShoutInVoidWhereInput): BatchPayload!
  createNVoid(data: NVoidCreateInput!): NVoid!
  updateNVoid(data: NVoidUpdateInput!, where: NVoidWhereUniqueInput!): NVoid
  updateManyNVoids(data: NVoidUpdateManyMutationInput!, where: NVoidWhereInput): BatchPayload!
  upsertNVoid(where: NVoidWhereUniqueInput!, create: NVoidCreateInput!, update: NVoidUpdateInput!): NVoid!
  deleteNVoid(where: NVoidWhereUniqueInput!): NVoid
  deleteManyNVoids(where: NVoidWhereInput): BatchPayload!
  createReplyToEchoOfShoutInVoid(data: ReplyToEchoOfShoutInVoidCreateInput!): ReplyToEchoOfShoutInVoid!
  updateReplyToEchoOfShoutInVoid(data: ReplyToEchoOfShoutInVoidUpdateInput!, where: ReplyToEchoOfShoutInVoidWhereUniqueInput!): ReplyToEchoOfShoutInVoid
  upsertReplyToEchoOfShoutInVoid(where: ReplyToEchoOfShoutInVoidWhereUniqueInput!, create: ReplyToEchoOfShoutInVoidCreateInput!, update: ReplyToEchoOfShoutInVoidUpdateInput!): ReplyToEchoOfShoutInVoid!
  deleteReplyToEchoOfShoutInVoid(where: ReplyToEchoOfShoutInVoidWhereUniqueInput!): ReplyToEchoOfShoutInVoid
  deleteManyReplyToEchoOfShoutInVoids(where: ReplyToEchoOfShoutInVoidWhereInput): BatchPayload!
  createReplyToShoutInVoid(data: ReplyToShoutInVoidCreateInput!): ReplyToShoutInVoid!
  updateReplyToShoutInVoid(data: ReplyToShoutInVoidUpdateInput!, where: ReplyToShoutInVoidWhereUniqueInput!): ReplyToShoutInVoid
  upsertReplyToShoutInVoid(where: ReplyToShoutInVoidWhereUniqueInput!, create: ReplyToShoutInVoidCreateInput!, update: ReplyToShoutInVoidUpdateInput!): ReplyToShoutInVoid!
  deleteReplyToShoutInVoid(where: ReplyToShoutInVoidWhereUniqueInput!): ReplyToShoutInVoid
  deleteManyReplyToShoutInVoids(where: ReplyToShoutInVoidWhereInput): BatchPayload!
  createShoutInVoid(data: ShoutInVoidCreateInput!): ShoutInVoid!
  updateShoutInVoid(data: ShoutInVoidUpdateInput!, where: ShoutInVoidWhereUniqueInput!): ShoutInVoid
  updateManyShoutInVoids(data: ShoutInVoidUpdateManyMutationInput!, where: ShoutInVoidWhereInput): BatchPayload!
  upsertShoutInVoid(where: ShoutInVoidWhereUniqueInput!, create: ShoutInVoidCreateInput!, update: ShoutInVoidUpdateInput!): ShoutInVoid!
  deleteShoutInVoid(where: ShoutInVoidWhereUniqueInput!): ShoutInVoid
  deleteManyShoutInVoids(where: ShoutInVoidWhereInput): BatchPayload!
  createUser(data: UserCreateInput!): User!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  deleteUser(where: UserWhereUniqueInput!): User
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  createUserActivatedEchoOfShout(data: UserActivatedEchoOfShoutCreateInput!): UserActivatedEchoOfShout!
  updateUserActivatedEchoOfShout(data: UserActivatedEchoOfShoutUpdateInput!, where: UserActivatedEchoOfShoutWhereUniqueInput!): UserActivatedEchoOfShout
  updateManyUserActivatedEchoOfShouts(data: UserActivatedEchoOfShoutUpdateManyMutationInput!, where: UserActivatedEchoOfShoutWhereInput): BatchPayload!
  upsertUserActivatedEchoOfShout(where: UserActivatedEchoOfShoutWhereUniqueInput!, create: UserActivatedEchoOfShoutCreateInput!, update: UserActivatedEchoOfShoutUpdateInput!): UserActivatedEchoOfShout!
  deleteUserActivatedEchoOfShout(where: UserActivatedEchoOfShoutWhereUniqueInput!): UserActivatedEchoOfShout
  deleteManyUserActivatedEchoOfShouts(where: UserActivatedEchoOfShoutWhereInput): BatchPayload!
  createUserLocation(data: UserLocationCreateInput!): UserLocation!
  updateUserLocation(data: UserLocationUpdateInput!, where: UserLocationWhereUniqueInput!): UserLocation
  updateManyUserLocations(data: UserLocationUpdateManyMutationInput!, where: UserLocationWhereInput): BatchPayload!
  upsertUserLocation(where: UserLocationWhereUniqueInput!, create: UserLocationCreateInput!, update: UserLocationUpdateInput!): UserLocation!
  deleteUserLocation(where: UserLocationWhereUniqueInput!): UserLocation
  deleteManyUserLocations(where: UserLocationWhereInput): BatchPayload!
  createUserSavedVoid(data: UserSavedVoidCreateInput!): UserSavedVoid!
  updateUserSavedVoid(data: UserSavedVoidUpdateInput!, where: UserSavedVoidWhereUniqueInput!): UserSavedVoid
  updateManyUserSavedVoids(data: UserSavedVoidUpdateManyMutationInput!, where: UserSavedVoidWhereInput): BatchPayload!
  upsertUserSavedVoid(where: UserSavedVoidWhereUniqueInput!, create: UserSavedVoidCreateInput!, update: UserSavedVoidUpdateInput!): UserSavedVoid!
  deleteUserSavedVoid(where: UserSavedVoidWhereUniqueInput!): UserSavedVoid
  deleteManyUserSavedVoids(where: UserSavedVoidWhereInput): BatchPayload!
  createVote(data: VoteCreateInput!): Vote!
  updateVote(data: VoteUpdateInput!, where: VoteWhereUniqueInput!): Vote
  updateManyVotes(data: VoteUpdateManyMutationInput!, where: VoteWhereInput): BatchPayload!
  upsertVote(where: VoteWhereUniqueInput!, create: VoteCreateInput!, update: VoteUpdateInput!): Vote!
  deleteVote(where: VoteWhereUniqueInput!): Vote
  deleteManyVotes(where: VoteWhereInput): BatchPayload!
  createVoteBucket(data: VoteBucketCreateInput!): VoteBucket!
  updateVoteBucket(data: VoteBucketUpdateInput!, where: VoteBucketWhereUniqueInput!): VoteBucket
  updateManyVoteBuckets(data: VoteBucketUpdateManyMutationInput!, where: VoteBucketWhereInput): BatchPayload!
  upsertVoteBucket(where: VoteBucketWhereUniqueInput!, create: VoteBucketCreateInput!, update: VoteBucketUpdateInput!): VoteBucket!
  deleteVoteBucket(where: VoteBucketWhereUniqueInput!): VoteBucket
  deleteManyVoteBuckets(where: VoteBucketWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type NVoid {
  voidId: ID!
  createdAt: DateTime!
  createdBy: User!
  voidGeohash: String!
  shouts(where: ShoutInVoidWhereInput, orderBy: ShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ShoutInVoid!]
  echos(where: EchoOfShoutInVoidWhereInput, orderBy: EchoOfShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [EchoOfShoutInVoid!]
}

type NVoidConnection {
  pageInfo: PageInfo!
  edges: [NVoidEdge]!
  aggregate: AggregateNVoid!
}

input NVoidCreateInput {
  voidId: ID
  createdBy: UserCreateOneWithoutCreatedVoidsInput!
  voidGeohash: String!
  shouts: ShoutInVoidCreateManyWithoutNVoidInput
  echos: EchoOfShoutInVoidCreateManyWithoutNVoidInput
}

input NVoidCreateManyWithoutCreatedByInput {
  create: [NVoidCreateWithoutCreatedByInput!]
  connect: [NVoidWhereUniqueInput!]
}

input NVoidCreateOneWithoutEchosInput {
  create: NVoidCreateWithoutEchosInput
  connect: NVoidWhereUniqueInput
}

input NVoidCreateOneWithoutShoutsInput {
  create: NVoidCreateWithoutShoutsInput
  connect: NVoidWhereUniqueInput
}

input NVoidCreateWithoutCreatedByInput {
  voidId: ID
  voidGeohash: String!
  shouts: ShoutInVoidCreateManyWithoutNVoidInput
  echos: EchoOfShoutInVoidCreateManyWithoutNVoidInput
}

input NVoidCreateWithoutEchosInput {
  voidId: ID
  createdBy: UserCreateOneWithoutCreatedVoidsInput!
  voidGeohash: String!
  shouts: ShoutInVoidCreateManyWithoutNVoidInput
}

input NVoidCreateWithoutShoutsInput {
  voidId: ID
  createdBy: UserCreateOneWithoutCreatedVoidsInput!
  voidGeohash: String!
  echos: EchoOfShoutInVoidCreateManyWithoutNVoidInput
}

type NVoidEdge {
  node: NVoid!
  cursor: String!
}

enum NVoidOrderByInput {
  voidId_ASC
  voidId_DESC
  createdAt_ASC
  createdAt_DESC
  voidGeohash_ASC
  voidGeohash_DESC
}

type NVoidPreviousValues {
  voidId: ID!
  createdAt: DateTime!
  voidGeohash: String!
}

input NVoidScalarWhereInput {
  voidId: ID
  voidId_not: ID
  voidId_in: [ID!]
  voidId_not_in: [ID!]
  voidId_lt: ID
  voidId_lte: ID
  voidId_gt: ID
  voidId_gte: ID
  voidId_contains: ID
  voidId_not_contains: ID
  voidId_starts_with: ID
  voidId_not_starts_with: ID
  voidId_ends_with: ID
  voidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  voidGeohash: String
  voidGeohash_not: String
  voidGeohash_in: [String!]
  voidGeohash_not_in: [String!]
  voidGeohash_lt: String
  voidGeohash_lte: String
  voidGeohash_gt: String
  voidGeohash_gte: String
  voidGeohash_contains: String
  voidGeohash_not_contains: String
  voidGeohash_starts_with: String
  voidGeohash_not_starts_with: String
  voidGeohash_ends_with: String
  voidGeohash_not_ends_with: String
  AND: [NVoidScalarWhereInput!]
  OR: [NVoidScalarWhereInput!]
  NOT: [NVoidScalarWhereInput!]
}

type NVoidSubscriptionPayload {
  mutation: MutationType!
  node: NVoid
  updatedFields: [String!]
  previousValues: NVoidPreviousValues
}

input NVoidSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: NVoidWhereInput
  AND: [NVoidSubscriptionWhereInput!]
  OR: [NVoidSubscriptionWhereInput!]
  NOT: [NVoidSubscriptionWhereInput!]
}

input NVoidUpdateInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedVoidsInput
  voidGeohash: String
  shouts: ShoutInVoidUpdateManyWithoutNVoidInput
  echos: EchoOfShoutInVoidUpdateManyWithoutNVoidInput
}

input NVoidUpdateManyDataInput {
  voidGeohash: String
}

input NVoidUpdateManyMutationInput {
  voidGeohash: String
}

input NVoidUpdateManyWithoutCreatedByInput {
  create: [NVoidCreateWithoutCreatedByInput!]
  delete: [NVoidWhereUniqueInput!]
  connect: [NVoidWhereUniqueInput!]
  set: [NVoidWhereUniqueInput!]
  disconnect: [NVoidWhereUniqueInput!]
  update: [NVoidUpdateWithWhereUniqueWithoutCreatedByInput!]
  upsert: [NVoidUpsertWithWhereUniqueWithoutCreatedByInput!]
  deleteMany: [NVoidScalarWhereInput!]
  updateMany: [NVoidUpdateManyWithWhereNestedInput!]
}

input NVoidUpdateManyWithWhereNestedInput {
  where: NVoidScalarWhereInput!
  data: NVoidUpdateManyDataInput!
}

input NVoidUpdateOneRequiredWithoutEchosInput {
  create: NVoidCreateWithoutEchosInput
  update: NVoidUpdateWithoutEchosDataInput
  upsert: NVoidUpsertWithoutEchosInput
  connect: NVoidWhereUniqueInput
}

input NVoidUpdateOneRequiredWithoutShoutsInput {
  create: NVoidCreateWithoutShoutsInput
  update: NVoidUpdateWithoutShoutsDataInput
  upsert: NVoidUpsertWithoutShoutsInput
  connect: NVoidWhereUniqueInput
}

input NVoidUpdateWithoutCreatedByDataInput {
  voidGeohash: String
  shouts: ShoutInVoidUpdateManyWithoutNVoidInput
  echos: EchoOfShoutInVoidUpdateManyWithoutNVoidInput
}

input NVoidUpdateWithoutEchosDataInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedVoidsInput
  voidGeohash: String
  shouts: ShoutInVoidUpdateManyWithoutNVoidInput
}

input NVoidUpdateWithoutShoutsDataInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedVoidsInput
  voidGeohash: String
  echos: EchoOfShoutInVoidUpdateManyWithoutNVoidInput
}

input NVoidUpdateWithWhereUniqueWithoutCreatedByInput {
  where: NVoidWhereUniqueInput!
  data: NVoidUpdateWithoutCreatedByDataInput!
}

input NVoidUpsertWithoutEchosInput {
  update: NVoidUpdateWithoutEchosDataInput!
  create: NVoidCreateWithoutEchosInput!
}

input NVoidUpsertWithoutShoutsInput {
  update: NVoidUpdateWithoutShoutsDataInput!
  create: NVoidCreateWithoutShoutsInput!
}

input NVoidUpsertWithWhereUniqueWithoutCreatedByInput {
  where: NVoidWhereUniqueInput!
  update: NVoidUpdateWithoutCreatedByDataInput!
  create: NVoidCreateWithoutCreatedByInput!
}

input NVoidWhereInput {
  voidId: ID
  voidId_not: ID
  voidId_in: [ID!]
  voidId_not_in: [ID!]
  voidId_lt: ID
  voidId_lte: ID
  voidId_gt: ID
  voidId_gte: ID
  voidId_contains: ID
  voidId_not_contains: ID
  voidId_starts_with: ID
  voidId_not_starts_with: ID
  voidId_ends_with: ID
  voidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdBy: UserWhereInput
  voidGeohash: String
  voidGeohash_not: String
  voidGeohash_in: [String!]
  voidGeohash_not_in: [String!]
  voidGeohash_lt: String
  voidGeohash_lte: String
  voidGeohash_gt: String
  voidGeohash_gte: String
  voidGeohash_contains: String
  voidGeohash_not_contains: String
  voidGeohash_starts_with: String
  voidGeohash_not_starts_with: String
  voidGeohash_ends_with: String
  voidGeohash_not_ends_with: String
  shouts_every: ShoutInVoidWhereInput
  shouts_some: ShoutInVoidWhereInput
  shouts_none: ShoutInVoidWhereInput
  echos_every: EchoOfShoutInVoidWhereInput
  echos_some: EchoOfShoutInVoidWhereInput
  echos_none: EchoOfShoutInVoidWhereInput
  AND: [NVoidWhereInput!]
  OR: [NVoidWhereInput!]
  NOT: [NVoidWhereInput!]
}

input NVoidWhereUniqueInput {
  voidId: ID
  voidGeohash: String
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  content(where: ContentWhereUniqueInput!): Content
  contents(where: ContentWhereInput, orderBy: ContentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Content]!
  contentsConnection(where: ContentWhereInput, orderBy: ContentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ContentConnection!
  echoOfShoutInVoid(where: EchoOfShoutInVoidWhereUniqueInput!): EchoOfShoutInVoid
  echoOfShoutInVoids(where: EchoOfShoutInVoidWhereInput, orderBy: EchoOfShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [EchoOfShoutInVoid]!
  echoOfShoutInVoidsConnection(where: EchoOfShoutInVoidWhereInput, orderBy: EchoOfShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): EchoOfShoutInVoidConnection!
  nVoid(where: NVoidWhereUniqueInput!): NVoid
  nVoids(where: NVoidWhereInput, orderBy: NVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [NVoid]!
  nVoidsConnection(where: NVoidWhereInput, orderBy: NVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): NVoidConnection!
  replyToEchoOfShoutInVoid(where: ReplyToEchoOfShoutInVoidWhereUniqueInput!): ReplyToEchoOfShoutInVoid
  replyToEchoOfShoutInVoids(where: ReplyToEchoOfShoutInVoidWhereInput, orderBy: ReplyToEchoOfShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ReplyToEchoOfShoutInVoid]!
  replyToEchoOfShoutInVoidsConnection(where: ReplyToEchoOfShoutInVoidWhereInput, orderBy: ReplyToEchoOfShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ReplyToEchoOfShoutInVoidConnection!
  replyToShoutInVoid(where: ReplyToShoutInVoidWhereUniqueInput!): ReplyToShoutInVoid
  replyToShoutInVoids(where: ReplyToShoutInVoidWhereInput, orderBy: ReplyToShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ReplyToShoutInVoid]!
  replyToShoutInVoidsConnection(where: ReplyToShoutInVoidWhereInput, orderBy: ReplyToShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ReplyToShoutInVoidConnection!
  shoutInVoid(where: ShoutInVoidWhereUniqueInput!): ShoutInVoid
  shoutInVoids(where: ShoutInVoidWhereInput, orderBy: ShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ShoutInVoid]!
  shoutInVoidsConnection(where: ShoutInVoidWhereInput, orderBy: ShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ShoutInVoidConnection!
  user(where: UserWhereUniqueInput!): User
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  userActivatedEchoOfShout(where: UserActivatedEchoOfShoutWhereUniqueInput!): UserActivatedEchoOfShout
  userActivatedEchoOfShouts(where: UserActivatedEchoOfShoutWhereInput, orderBy: UserActivatedEchoOfShoutOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [UserActivatedEchoOfShout]!
  userActivatedEchoOfShoutsConnection(where: UserActivatedEchoOfShoutWhereInput, orderBy: UserActivatedEchoOfShoutOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserActivatedEchoOfShoutConnection!
  userLocation(where: UserLocationWhereUniqueInput!): UserLocation
  userLocations(where: UserLocationWhereInput, orderBy: UserLocationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [UserLocation]!
  userLocationsConnection(where: UserLocationWhereInput, orderBy: UserLocationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserLocationConnection!
  userSavedVoid(where: UserSavedVoidWhereUniqueInput!): UserSavedVoid
  userSavedVoids(where: UserSavedVoidWhereInput, orderBy: UserSavedVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [UserSavedVoid]!
  userSavedVoidsConnection(where: UserSavedVoidWhereInput, orderBy: UserSavedVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserSavedVoidConnection!
  vote(where: VoteWhereUniqueInput!): Vote
  votes(where: VoteWhereInput, orderBy: VoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Vote]!
  votesConnection(where: VoteWhereInput, orderBy: VoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): VoteConnection!
  voteBucket(where: VoteBucketWhereUniqueInput!): VoteBucket
  voteBuckets(where: VoteBucketWhereInput, orderBy: VoteBucketOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [VoteBucket]!
  voteBucketsConnection(where: VoteBucketWhereInput, orderBy: VoteBucketOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): VoteBucketConnection!
  node(id: ID!): Node
}

type ReplyToEchoOfShoutInVoid {
  replyToEchoOfShoutInVoidId: ID!
  createdAt: DateTime!
  createdBy: User!
  content: Content!
  voteBucket: VoteBucket!
  originalEchoOfShoutInVoid: EchoOfShoutInVoid!
}

type ReplyToEchoOfShoutInVoidConnection {
  pageInfo: PageInfo!
  edges: [ReplyToEchoOfShoutInVoidEdge]!
  aggregate: AggregateReplyToEchoOfShoutInVoid!
}

input ReplyToEchoOfShoutInVoidCreateInput {
  replyToEchoOfShoutInVoidId: ID
  createdBy: UserCreateOneWithoutRepliesToEchosOfShoutsInVoidInput!
  content: ContentCreateOneInput!
  voteBucket: VoteBucketCreateOneInput!
  originalEchoOfShoutInVoid: EchoOfShoutInVoidCreateOneWithoutRepliesInput!
}

input ReplyToEchoOfShoutInVoidCreateManyWithoutCreatedByInput {
  create: [ReplyToEchoOfShoutInVoidCreateWithoutCreatedByInput!]
  connect: [ReplyToEchoOfShoutInVoidWhereUniqueInput!]
}

input ReplyToEchoOfShoutInVoidCreateManyWithoutOriginalEchoOfShoutInVoidInput {
  create: [ReplyToEchoOfShoutInVoidCreateWithoutOriginalEchoOfShoutInVoidInput!]
  connect: [ReplyToEchoOfShoutInVoidWhereUniqueInput!]
}

input ReplyToEchoOfShoutInVoidCreateWithoutCreatedByInput {
  replyToEchoOfShoutInVoidId: ID
  content: ContentCreateOneInput!
  voteBucket: VoteBucketCreateOneInput!
  originalEchoOfShoutInVoid: EchoOfShoutInVoidCreateOneWithoutRepliesInput!
}

input ReplyToEchoOfShoutInVoidCreateWithoutOriginalEchoOfShoutInVoidInput {
  replyToEchoOfShoutInVoidId: ID
  createdBy: UserCreateOneWithoutRepliesToEchosOfShoutsInVoidInput!
  content: ContentCreateOneInput!
  voteBucket: VoteBucketCreateOneInput!
}

type ReplyToEchoOfShoutInVoidEdge {
  node: ReplyToEchoOfShoutInVoid!
  cursor: String!
}

enum ReplyToEchoOfShoutInVoidOrderByInput {
  replyToEchoOfShoutInVoidId_ASC
  replyToEchoOfShoutInVoidId_DESC
  createdAt_ASC
  createdAt_DESC
}

type ReplyToEchoOfShoutInVoidPreviousValues {
  replyToEchoOfShoutInVoidId: ID!
  createdAt: DateTime!
}

input ReplyToEchoOfShoutInVoidScalarWhereInput {
  replyToEchoOfShoutInVoidId: ID
  replyToEchoOfShoutInVoidId_not: ID
  replyToEchoOfShoutInVoidId_in: [ID!]
  replyToEchoOfShoutInVoidId_not_in: [ID!]
  replyToEchoOfShoutInVoidId_lt: ID
  replyToEchoOfShoutInVoidId_lte: ID
  replyToEchoOfShoutInVoidId_gt: ID
  replyToEchoOfShoutInVoidId_gte: ID
  replyToEchoOfShoutInVoidId_contains: ID
  replyToEchoOfShoutInVoidId_not_contains: ID
  replyToEchoOfShoutInVoidId_starts_with: ID
  replyToEchoOfShoutInVoidId_not_starts_with: ID
  replyToEchoOfShoutInVoidId_ends_with: ID
  replyToEchoOfShoutInVoidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  AND: [ReplyToEchoOfShoutInVoidScalarWhereInput!]
  OR: [ReplyToEchoOfShoutInVoidScalarWhereInput!]
  NOT: [ReplyToEchoOfShoutInVoidScalarWhereInput!]
}

type ReplyToEchoOfShoutInVoidSubscriptionPayload {
  mutation: MutationType!
  node: ReplyToEchoOfShoutInVoid
  updatedFields: [String!]
  previousValues: ReplyToEchoOfShoutInVoidPreviousValues
}

input ReplyToEchoOfShoutInVoidSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ReplyToEchoOfShoutInVoidWhereInput
  AND: [ReplyToEchoOfShoutInVoidSubscriptionWhereInput!]
  OR: [ReplyToEchoOfShoutInVoidSubscriptionWhereInput!]
  NOT: [ReplyToEchoOfShoutInVoidSubscriptionWhereInput!]
}

input ReplyToEchoOfShoutInVoidUpdateInput {
  createdBy: UserUpdateOneRequiredWithoutRepliesToEchosOfShoutsInVoidInput
  content: ContentUpdateOneRequiredInput
  voteBucket: VoteBucketUpdateOneRequiredInput
  originalEchoOfShoutInVoid: EchoOfShoutInVoidUpdateOneRequiredWithoutRepliesInput
}

input ReplyToEchoOfShoutInVoidUpdateManyWithoutCreatedByInput {
  create: [ReplyToEchoOfShoutInVoidCreateWithoutCreatedByInput!]
  delete: [ReplyToEchoOfShoutInVoidWhereUniqueInput!]
  connect: [ReplyToEchoOfShoutInVoidWhereUniqueInput!]
  set: [ReplyToEchoOfShoutInVoidWhereUniqueInput!]
  disconnect: [ReplyToEchoOfShoutInVoidWhereUniqueInput!]
  update: [ReplyToEchoOfShoutInVoidUpdateWithWhereUniqueWithoutCreatedByInput!]
  upsert: [ReplyToEchoOfShoutInVoidUpsertWithWhereUniqueWithoutCreatedByInput!]
  deleteMany: [ReplyToEchoOfShoutInVoidScalarWhereInput!]
}

input ReplyToEchoOfShoutInVoidUpdateManyWithoutOriginalEchoOfShoutInVoidInput {
  create: [ReplyToEchoOfShoutInVoidCreateWithoutOriginalEchoOfShoutInVoidInput!]
  delete: [ReplyToEchoOfShoutInVoidWhereUniqueInput!]
  connect: [ReplyToEchoOfShoutInVoidWhereUniqueInput!]
  set: [ReplyToEchoOfShoutInVoidWhereUniqueInput!]
  disconnect: [ReplyToEchoOfShoutInVoidWhereUniqueInput!]
  update: [ReplyToEchoOfShoutInVoidUpdateWithWhereUniqueWithoutOriginalEchoOfShoutInVoidInput!]
  upsert: [ReplyToEchoOfShoutInVoidUpsertWithWhereUniqueWithoutOriginalEchoOfShoutInVoidInput!]
  deleteMany: [ReplyToEchoOfShoutInVoidScalarWhereInput!]
}

input ReplyToEchoOfShoutInVoidUpdateWithoutCreatedByDataInput {
  content: ContentUpdateOneRequiredInput
  voteBucket: VoteBucketUpdateOneRequiredInput
  originalEchoOfShoutInVoid: EchoOfShoutInVoidUpdateOneRequiredWithoutRepliesInput
}

input ReplyToEchoOfShoutInVoidUpdateWithoutOriginalEchoOfShoutInVoidDataInput {
  createdBy: UserUpdateOneRequiredWithoutRepliesToEchosOfShoutsInVoidInput
  content: ContentUpdateOneRequiredInput
  voteBucket: VoteBucketUpdateOneRequiredInput
}

input ReplyToEchoOfShoutInVoidUpdateWithWhereUniqueWithoutCreatedByInput {
  where: ReplyToEchoOfShoutInVoidWhereUniqueInput!
  data: ReplyToEchoOfShoutInVoidUpdateWithoutCreatedByDataInput!
}

input ReplyToEchoOfShoutInVoidUpdateWithWhereUniqueWithoutOriginalEchoOfShoutInVoidInput {
  where: ReplyToEchoOfShoutInVoidWhereUniqueInput!
  data: ReplyToEchoOfShoutInVoidUpdateWithoutOriginalEchoOfShoutInVoidDataInput!
}

input ReplyToEchoOfShoutInVoidUpsertWithWhereUniqueWithoutCreatedByInput {
  where: ReplyToEchoOfShoutInVoidWhereUniqueInput!
  update: ReplyToEchoOfShoutInVoidUpdateWithoutCreatedByDataInput!
  create: ReplyToEchoOfShoutInVoidCreateWithoutCreatedByInput!
}

input ReplyToEchoOfShoutInVoidUpsertWithWhereUniqueWithoutOriginalEchoOfShoutInVoidInput {
  where: ReplyToEchoOfShoutInVoidWhereUniqueInput!
  update: ReplyToEchoOfShoutInVoidUpdateWithoutOriginalEchoOfShoutInVoidDataInput!
  create: ReplyToEchoOfShoutInVoidCreateWithoutOriginalEchoOfShoutInVoidInput!
}

input ReplyToEchoOfShoutInVoidWhereInput {
  replyToEchoOfShoutInVoidId: ID
  replyToEchoOfShoutInVoidId_not: ID
  replyToEchoOfShoutInVoidId_in: [ID!]
  replyToEchoOfShoutInVoidId_not_in: [ID!]
  replyToEchoOfShoutInVoidId_lt: ID
  replyToEchoOfShoutInVoidId_lte: ID
  replyToEchoOfShoutInVoidId_gt: ID
  replyToEchoOfShoutInVoidId_gte: ID
  replyToEchoOfShoutInVoidId_contains: ID
  replyToEchoOfShoutInVoidId_not_contains: ID
  replyToEchoOfShoutInVoidId_starts_with: ID
  replyToEchoOfShoutInVoidId_not_starts_with: ID
  replyToEchoOfShoutInVoidId_ends_with: ID
  replyToEchoOfShoutInVoidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdBy: UserWhereInput
  content: ContentWhereInput
  voteBucket: VoteBucketWhereInput
  originalEchoOfShoutInVoid: EchoOfShoutInVoidWhereInput
  AND: [ReplyToEchoOfShoutInVoidWhereInput!]
  OR: [ReplyToEchoOfShoutInVoidWhereInput!]
  NOT: [ReplyToEchoOfShoutInVoidWhereInput!]
}

input ReplyToEchoOfShoutInVoidWhereUniqueInput {
  replyToEchoOfShoutInVoidId: ID
}

type ReplyToShoutInVoid {
  replyToShoutInVoidId: ID!
  createdAt: DateTime!
  createdBy: User!
  content: Content!
  voteBucket: VoteBucket!
  originalShoutInVoid: ShoutInVoid!
}

type ReplyToShoutInVoidConnection {
  pageInfo: PageInfo!
  edges: [ReplyToShoutInVoidEdge]!
  aggregate: AggregateReplyToShoutInVoid!
}

input ReplyToShoutInVoidCreateInput {
  replyToShoutInVoidId: ID
  createdBy: UserCreateOneWithoutRepliesToShoutsInVoidInput!
  content: ContentCreateOneInput!
  voteBucket: VoteBucketCreateOneInput!
  originalShoutInVoid: ShoutInVoidCreateOneWithoutRepliesInput!
}

input ReplyToShoutInVoidCreateManyWithoutCreatedByInput {
  create: [ReplyToShoutInVoidCreateWithoutCreatedByInput!]
  connect: [ReplyToShoutInVoidWhereUniqueInput!]
}

input ReplyToShoutInVoidCreateManyWithoutOriginalShoutInVoidInput {
  create: [ReplyToShoutInVoidCreateWithoutOriginalShoutInVoidInput!]
  connect: [ReplyToShoutInVoidWhereUniqueInput!]
}

input ReplyToShoutInVoidCreateWithoutCreatedByInput {
  replyToShoutInVoidId: ID
  content: ContentCreateOneInput!
  voteBucket: VoteBucketCreateOneInput!
  originalShoutInVoid: ShoutInVoidCreateOneWithoutRepliesInput!
}

input ReplyToShoutInVoidCreateWithoutOriginalShoutInVoidInput {
  replyToShoutInVoidId: ID
  createdBy: UserCreateOneWithoutRepliesToShoutsInVoidInput!
  content: ContentCreateOneInput!
  voteBucket: VoteBucketCreateOneInput!
}

type ReplyToShoutInVoidEdge {
  node: ReplyToShoutInVoid!
  cursor: String!
}

enum ReplyToShoutInVoidOrderByInput {
  replyToShoutInVoidId_ASC
  replyToShoutInVoidId_DESC
  createdAt_ASC
  createdAt_DESC
}

type ReplyToShoutInVoidPreviousValues {
  replyToShoutInVoidId: ID!
  createdAt: DateTime!
}

input ReplyToShoutInVoidScalarWhereInput {
  replyToShoutInVoidId: ID
  replyToShoutInVoidId_not: ID
  replyToShoutInVoidId_in: [ID!]
  replyToShoutInVoidId_not_in: [ID!]
  replyToShoutInVoidId_lt: ID
  replyToShoutInVoidId_lte: ID
  replyToShoutInVoidId_gt: ID
  replyToShoutInVoidId_gte: ID
  replyToShoutInVoidId_contains: ID
  replyToShoutInVoidId_not_contains: ID
  replyToShoutInVoidId_starts_with: ID
  replyToShoutInVoidId_not_starts_with: ID
  replyToShoutInVoidId_ends_with: ID
  replyToShoutInVoidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  AND: [ReplyToShoutInVoidScalarWhereInput!]
  OR: [ReplyToShoutInVoidScalarWhereInput!]
  NOT: [ReplyToShoutInVoidScalarWhereInput!]
}

type ReplyToShoutInVoidSubscriptionPayload {
  mutation: MutationType!
  node: ReplyToShoutInVoid
  updatedFields: [String!]
  previousValues: ReplyToShoutInVoidPreviousValues
}

input ReplyToShoutInVoidSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ReplyToShoutInVoidWhereInput
  AND: [ReplyToShoutInVoidSubscriptionWhereInput!]
  OR: [ReplyToShoutInVoidSubscriptionWhereInput!]
  NOT: [ReplyToShoutInVoidSubscriptionWhereInput!]
}

input ReplyToShoutInVoidUpdateInput {
  createdBy: UserUpdateOneRequiredWithoutRepliesToShoutsInVoidInput
  content: ContentUpdateOneRequiredInput
  voteBucket: VoteBucketUpdateOneRequiredInput
  originalShoutInVoid: ShoutInVoidUpdateOneRequiredWithoutRepliesInput
}

input ReplyToShoutInVoidUpdateManyWithoutCreatedByInput {
  create: [ReplyToShoutInVoidCreateWithoutCreatedByInput!]
  delete: [ReplyToShoutInVoidWhereUniqueInput!]
  connect: [ReplyToShoutInVoidWhereUniqueInput!]
  set: [ReplyToShoutInVoidWhereUniqueInput!]
  disconnect: [ReplyToShoutInVoidWhereUniqueInput!]
  update: [ReplyToShoutInVoidUpdateWithWhereUniqueWithoutCreatedByInput!]
  upsert: [ReplyToShoutInVoidUpsertWithWhereUniqueWithoutCreatedByInput!]
  deleteMany: [ReplyToShoutInVoidScalarWhereInput!]
}

input ReplyToShoutInVoidUpdateManyWithoutOriginalShoutInVoidInput {
  create: [ReplyToShoutInVoidCreateWithoutOriginalShoutInVoidInput!]
  delete: [ReplyToShoutInVoidWhereUniqueInput!]
  connect: [ReplyToShoutInVoidWhereUniqueInput!]
  set: [ReplyToShoutInVoidWhereUniqueInput!]
  disconnect: [ReplyToShoutInVoidWhereUniqueInput!]
  update: [ReplyToShoutInVoidUpdateWithWhereUniqueWithoutOriginalShoutInVoidInput!]
  upsert: [ReplyToShoutInVoidUpsertWithWhereUniqueWithoutOriginalShoutInVoidInput!]
  deleteMany: [ReplyToShoutInVoidScalarWhereInput!]
}

input ReplyToShoutInVoidUpdateWithoutCreatedByDataInput {
  content: ContentUpdateOneRequiredInput
  voteBucket: VoteBucketUpdateOneRequiredInput
  originalShoutInVoid: ShoutInVoidUpdateOneRequiredWithoutRepliesInput
}

input ReplyToShoutInVoidUpdateWithoutOriginalShoutInVoidDataInput {
  createdBy: UserUpdateOneRequiredWithoutRepliesToShoutsInVoidInput
  content: ContentUpdateOneRequiredInput
  voteBucket: VoteBucketUpdateOneRequiredInput
}

input ReplyToShoutInVoidUpdateWithWhereUniqueWithoutCreatedByInput {
  where: ReplyToShoutInVoidWhereUniqueInput!
  data: ReplyToShoutInVoidUpdateWithoutCreatedByDataInput!
}

input ReplyToShoutInVoidUpdateWithWhereUniqueWithoutOriginalShoutInVoidInput {
  where: ReplyToShoutInVoidWhereUniqueInput!
  data: ReplyToShoutInVoidUpdateWithoutOriginalShoutInVoidDataInput!
}

input ReplyToShoutInVoidUpsertWithWhereUniqueWithoutCreatedByInput {
  where: ReplyToShoutInVoidWhereUniqueInput!
  update: ReplyToShoutInVoidUpdateWithoutCreatedByDataInput!
  create: ReplyToShoutInVoidCreateWithoutCreatedByInput!
}

input ReplyToShoutInVoidUpsertWithWhereUniqueWithoutOriginalShoutInVoidInput {
  where: ReplyToShoutInVoidWhereUniqueInput!
  update: ReplyToShoutInVoidUpdateWithoutOriginalShoutInVoidDataInput!
  create: ReplyToShoutInVoidCreateWithoutOriginalShoutInVoidInput!
}

input ReplyToShoutInVoidWhereInput {
  replyToShoutInVoidId: ID
  replyToShoutInVoidId_not: ID
  replyToShoutInVoidId_in: [ID!]
  replyToShoutInVoidId_not_in: [ID!]
  replyToShoutInVoidId_lt: ID
  replyToShoutInVoidId_lte: ID
  replyToShoutInVoidId_gt: ID
  replyToShoutInVoidId_gte: ID
  replyToShoutInVoidId_contains: ID
  replyToShoutInVoidId_not_contains: ID
  replyToShoutInVoidId_starts_with: ID
  replyToShoutInVoidId_not_starts_with: ID
  replyToShoutInVoidId_ends_with: ID
  replyToShoutInVoidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdBy: UserWhereInput
  content: ContentWhereInput
  voteBucket: VoteBucketWhereInput
  originalShoutInVoid: ShoutInVoidWhereInput
  AND: [ReplyToShoutInVoidWhereInput!]
  OR: [ReplyToShoutInVoidWhereInput!]
  NOT: [ReplyToShoutInVoidWhereInput!]
}

input ReplyToShoutInVoidWhereUniqueInput {
  replyToShoutInVoidId: ID
}

type ShoutInVoid {
  shoutInVoidId: ID!
  createdAt: DateTime!
  createdBy: User!
  content: Content!
  contentMessageHash: String
  nVoid: NVoid!
  voteBucket: VoteBucket!
  echos(where: EchoOfShoutInVoidWhereInput, orderBy: EchoOfShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [EchoOfShoutInVoid!]
  replies(where: ReplyToShoutInVoidWhereInput, orderBy: ReplyToShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ReplyToShoutInVoid!]
}

type ShoutInVoidConnection {
  pageInfo: PageInfo!
  edges: [ShoutInVoidEdge]!
  aggregate: AggregateShoutInVoid!
}

input ShoutInVoidCreateInput {
  shoutInVoidId: ID
  createdBy: UserCreateOneWithoutCreatedShoutsInVoidsInput!
  content: ContentCreateOneInput!
  contentMessageHash: String
  nVoid: NVoidCreateOneWithoutShoutsInput!
  voteBucket: VoteBucketCreateOneInput!
  echos: EchoOfShoutInVoidCreateManyWithoutOriginalShoutInVoidInput
  replies: ReplyToShoutInVoidCreateManyWithoutOriginalShoutInVoidInput
}

input ShoutInVoidCreateManyWithoutCreatedByInput {
  create: [ShoutInVoidCreateWithoutCreatedByInput!]
  connect: [ShoutInVoidWhereUniqueInput!]
}

input ShoutInVoidCreateManyWithoutNVoidInput {
  create: [ShoutInVoidCreateWithoutNVoidInput!]
  connect: [ShoutInVoidWhereUniqueInput!]
}

input ShoutInVoidCreateOneWithoutEchosInput {
  create: ShoutInVoidCreateWithoutEchosInput
  connect: ShoutInVoidWhereUniqueInput
}

input ShoutInVoidCreateOneWithoutRepliesInput {
  create: ShoutInVoidCreateWithoutRepliesInput
  connect: ShoutInVoidWhereUniqueInput
}

input ShoutInVoidCreateWithoutCreatedByInput {
  shoutInVoidId: ID
  content: ContentCreateOneInput!
  contentMessageHash: String
  nVoid: NVoidCreateOneWithoutShoutsInput!
  voteBucket: VoteBucketCreateOneInput!
  echos: EchoOfShoutInVoidCreateManyWithoutOriginalShoutInVoidInput
  replies: ReplyToShoutInVoidCreateManyWithoutOriginalShoutInVoidInput
}

input ShoutInVoidCreateWithoutEchosInput {
  shoutInVoidId: ID
  createdBy: UserCreateOneWithoutCreatedShoutsInVoidsInput!
  content: ContentCreateOneInput!
  contentMessageHash: String
  nVoid: NVoidCreateOneWithoutShoutsInput!
  voteBucket: VoteBucketCreateOneInput!
  replies: ReplyToShoutInVoidCreateManyWithoutOriginalShoutInVoidInput
}

input ShoutInVoidCreateWithoutNVoidInput {
  shoutInVoidId: ID
  createdBy: UserCreateOneWithoutCreatedShoutsInVoidsInput!
  content: ContentCreateOneInput!
  contentMessageHash: String
  voteBucket: VoteBucketCreateOneInput!
  echos: EchoOfShoutInVoidCreateManyWithoutOriginalShoutInVoidInput
  replies: ReplyToShoutInVoidCreateManyWithoutOriginalShoutInVoidInput
}

input ShoutInVoidCreateWithoutRepliesInput {
  shoutInVoidId: ID
  createdBy: UserCreateOneWithoutCreatedShoutsInVoidsInput!
  content: ContentCreateOneInput!
  contentMessageHash: String
  nVoid: NVoidCreateOneWithoutShoutsInput!
  voteBucket: VoteBucketCreateOneInput!
  echos: EchoOfShoutInVoidCreateManyWithoutOriginalShoutInVoidInput
}

type ShoutInVoidEdge {
  node: ShoutInVoid!
  cursor: String!
}

enum ShoutInVoidOrderByInput {
  shoutInVoidId_ASC
  shoutInVoidId_DESC
  createdAt_ASC
  createdAt_DESC
  contentMessageHash_ASC
  contentMessageHash_DESC
}

type ShoutInVoidPreviousValues {
  shoutInVoidId: ID!
  createdAt: DateTime!
  contentMessageHash: String
}

input ShoutInVoidScalarWhereInput {
  shoutInVoidId: ID
  shoutInVoidId_not: ID
  shoutInVoidId_in: [ID!]
  shoutInVoidId_not_in: [ID!]
  shoutInVoidId_lt: ID
  shoutInVoidId_lte: ID
  shoutInVoidId_gt: ID
  shoutInVoidId_gte: ID
  shoutInVoidId_contains: ID
  shoutInVoidId_not_contains: ID
  shoutInVoidId_starts_with: ID
  shoutInVoidId_not_starts_with: ID
  shoutInVoidId_ends_with: ID
  shoutInVoidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  contentMessageHash: String
  contentMessageHash_not: String
  contentMessageHash_in: [String!]
  contentMessageHash_not_in: [String!]
  contentMessageHash_lt: String
  contentMessageHash_lte: String
  contentMessageHash_gt: String
  contentMessageHash_gte: String
  contentMessageHash_contains: String
  contentMessageHash_not_contains: String
  contentMessageHash_starts_with: String
  contentMessageHash_not_starts_with: String
  contentMessageHash_ends_with: String
  contentMessageHash_not_ends_with: String
  AND: [ShoutInVoidScalarWhereInput!]
  OR: [ShoutInVoidScalarWhereInput!]
  NOT: [ShoutInVoidScalarWhereInput!]
}

type ShoutInVoidSubscriptionPayload {
  mutation: MutationType!
  node: ShoutInVoid
  updatedFields: [String!]
  previousValues: ShoutInVoidPreviousValues
}

input ShoutInVoidSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ShoutInVoidWhereInput
  AND: [ShoutInVoidSubscriptionWhereInput!]
  OR: [ShoutInVoidSubscriptionWhereInput!]
  NOT: [ShoutInVoidSubscriptionWhereInput!]
}

input ShoutInVoidUpdateInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedShoutsInVoidsInput
  content: ContentUpdateOneRequiredInput
  contentMessageHash: String
  nVoid: NVoidUpdateOneRequiredWithoutShoutsInput
  voteBucket: VoteBucketUpdateOneRequiredInput
  echos: EchoOfShoutInVoidUpdateManyWithoutOriginalShoutInVoidInput
  replies: ReplyToShoutInVoidUpdateManyWithoutOriginalShoutInVoidInput
}

input ShoutInVoidUpdateManyDataInput {
  contentMessageHash: String
}

input ShoutInVoidUpdateManyMutationInput {
  contentMessageHash: String
}

input ShoutInVoidUpdateManyWithoutCreatedByInput {
  create: [ShoutInVoidCreateWithoutCreatedByInput!]
  delete: [ShoutInVoidWhereUniqueInput!]
  connect: [ShoutInVoidWhereUniqueInput!]
  set: [ShoutInVoidWhereUniqueInput!]
  disconnect: [ShoutInVoidWhereUniqueInput!]
  update: [ShoutInVoidUpdateWithWhereUniqueWithoutCreatedByInput!]
  upsert: [ShoutInVoidUpsertWithWhereUniqueWithoutCreatedByInput!]
  deleteMany: [ShoutInVoidScalarWhereInput!]
  updateMany: [ShoutInVoidUpdateManyWithWhereNestedInput!]
}

input ShoutInVoidUpdateManyWithoutNVoidInput {
  create: [ShoutInVoidCreateWithoutNVoidInput!]
  delete: [ShoutInVoidWhereUniqueInput!]
  connect: [ShoutInVoidWhereUniqueInput!]
  set: [ShoutInVoidWhereUniqueInput!]
  disconnect: [ShoutInVoidWhereUniqueInput!]
  update: [ShoutInVoidUpdateWithWhereUniqueWithoutNVoidInput!]
  upsert: [ShoutInVoidUpsertWithWhereUniqueWithoutNVoidInput!]
  deleteMany: [ShoutInVoidScalarWhereInput!]
  updateMany: [ShoutInVoidUpdateManyWithWhereNestedInput!]
}

input ShoutInVoidUpdateManyWithWhereNestedInput {
  where: ShoutInVoidScalarWhereInput!
  data: ShoutInVoidUpdateManyDataInput!
}

input ShoutInVoidUpdateOneRequiredWithoutEchosInput {
  create: ShoutInVoidCreateWithoutEchosInput
  update: ShoutInVoidUpdateWithoutEchosDataInput
  upsert: ShoutInVoidUpsertWithoutEchosInput
  connect: ShoutInVoidWhereUniqueInput
}

input ShoutInVoidUpdateOneRequiredWithoutRepliesInput {
  create: ShoutInVoidCreateWithoutRepliesInput
  update: ShoutInVoidUpdateWithoutRepliesDataInput
  upsert: ShoutInVoidUpsertWithoutRepliesInput
  connect: ShoutInVoidWhereUniqueInput
}

input ShoutInVoidUpdateWithoutCreatedByDataInput {
  content: ContentUpdateOneRequiredInput
  contentMessageHash: String
  nVoid: NVoidUpdateOneRequiredWithoutShoutsInput
  voteBucket: VoteBucketUpdateOneRequiredInput
  echos: EchoOfShoutInVoidUpdateManyWithoutOriginalShoutInVoidInput
  replies: ReplyToShoutInVoidUpdateManyWithoutOriginalShoutInVoidInput
}

input ShoutInVoidUpdateWithoutEchosDataInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedShoutsInVoidsInput
  content: ContentUpdateOneRequiredInput
  contentMessageHash: String
  nVoid: NVoidUpdateOneRequiredWithoutShoutsInput
  voteBucket: VoteBucketUpdateOneRequiredInput
  replies: ReplyToShoutInVoidUpdateManyWithoutOriginalShoutInVoidInput
}

input ShoutInVoidUpdateWithoutNVoidDataInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedShoutsInVoidsInput
  content: ContentUpdateOneRequiredInput
  contentMessageHash: String
  voteBucket: VoteBucketUpdateOneRequiredInput
  echos: EchoOfShoutInVoidUpdateManyWithoutOriginalShoutInVoidInput
  replies: ReplyToShoutInVoidUpdateManyWithoutOriginalShoutInVoidInput
}

input ShoutInVoidUpdateWithoutRepliesDataInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedShoutsInVoidsInput
  content: ContentUpdateOneRequiredInput
  contentMessageHash: String
  nVoid: NVoidUpdateOneRequiredWithoutShoutsInput
  voteBucket: VoteBucketUpdateOneRequiredInput
  echos: EchoOfShoutInVoidUpdateManyWithoutOriginalShoutInVoidInput
}

input ShoutInVoidUpdateWithWhereUniqueWithoutCreatedByInput {
  where: ShoutInVoidWhereUniqueInput!
  data: ShoutInVoidUpdateWithoutCreatedByDataInput!
}

input ShoutInVoidUpdateWithWhereUniqueWithoutNVoidInput {
  where: ShoutInVoidWhereUniqueInput!
  data: ShoutInVoidUpdateWithoutNVoidDataInput!
}

input ShoutInVoidUpsertWithoutEchosInput {
  update: ShoutInVoidUpdateWithoutEchosDataInput!
  create: ShoutInVoidCreateWithoutEchosInput!
}

input ShoutInVoidUpsertWithoutRepliesInput {
  update: ShoutInVoidUpdateWithoutRepliesDataInput!
  create: ShoutInVoidCreateWithoutRepliesInput!
}

input ShoutInVoidUpsertWithWhereUniqueWithoutCreatedByInput {
  where: ShoutInVoidWhereUniqueInput!
  update: ShoutInVoidUpdateWithoutCreatedByDataInput!
  create: ShoutInVoidCreateWithoutCreatedByInput!
}

input ShoutInVoidUpsertWithWhereUniqueWithoutNVoidInput {
  where: ShoutInVoidWhereUniqueInput!
  update: ShoutInVoidUpdateWithoutNVoidDataInput!
  create: ShoutInVoidCreateWithoutNVoidInput!
}

input ShoutInVoidWhereInput {
  shoutInVoidId: ID
  shoutInVoidId_not: ID
  shoutInVoidId_in: [ID!]
  shoutInVoidId_not_in: [ID!]
  shoutInVoidId_lt: ID
  shoutInVoidId_lte: ID
  shoutInVoidId_gt: ID
  shoutInVoidId_gte: ID
  shoutInVoidId_contains: ID
  shoutInVoidId_not_contains: ID
  shoutInVoidId_starts_with: ID
  shoutInVoidId_not_starts_with: ID
  shoutInVoidId_ends_with: ID
  shoutInVoidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdBy: UserWhereInput
  content: ContentWhereInput
  contentMessageHash: String
  contentMessageHash_not: String
  contentMessageHash_in: [String!]
  contentMessageHash_not_in: [String!]
  contentMessageHash_lt: String
  contentMessageHash_lte: String
  contentMessageHash_gt: String
  contentMessageHash_gte: String
  contentMessageHash_contains: String
  contentMessageHash_not_contains: String
  contentMessageHash_starts_with: String
  contentMessageHash_not_starts_with: String
  contentMessageHash_ends_with: String
  contentMessageHash_not_ends_with: String
  nVoid: NVoidWhereInput
  voteBucket: VoteBucketWhereInput
  echos_every: EchoOfShoutInVoidWhereInput
  echos_some: EchoOfShoutInVoidWhereInput
  echos_none: EchoOfShoutInVoidWhereInput
  replies_every: ReplyToShoutInVoidWhereInput
  replies_some: ReplyToShoutInVoidWhereInput
  replies_none: ReplyToShoutInVoidWhereInput
  AND: [ShoutInVoidWhereInput!]
  OR: [ShoutInVoidWhereInput!]
  NOT: [ShoutInVoidWhereInput!]
}

input ShoutInVoidWhereUniqueInput {
  shoutInVoidId: ID
  contentMessageHash: String
}

type Subscription {
  content(where: ContentSubscriptionWhereInput): ContentSubscriptionPayload
  echoOfShoutInVoid(where: EchoOfShoutInVoidSubscriptionWhereInput): EchoOfShoutInVoidSubscriptionPayload
  nVoid(where: NVoidSubscriptionWhereInput): NVoidSubscriptionPayload
  replyToEchoOfShoutInVoid(where: ReplyToEchoOfShoutInVoidSubscriptionWhereInput): ReplyToEchoOfShoutInVoidSubscriptionPayload
  replyToShoutInVoid(where: ReplyToShoutInVoidSubscriptionWhereInput): ReplyToShoutInVoidSubscriptionPayload
  shoutInVoid(where: ShoutInVoidSubscriptionWhereInput): ShoutInVoidSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  userActivatedEchoOfShout(where: UserActivatedEchoOfShoutSubscriptionWhereInput): UserActivatedEchoOfShoutSubscriptionPayload
  userLocation(where: UserLocationSubscriptionWhereInput): UserLocationSubscriptionPayload
  userSavedVoid(where: UserSavedVoidSubscriptionWhereInput): UserSavedVoidSubscriptionPayload
  vote(where: VoteSubscriptionWhereInput): VoteSubscriptionPayload
  voteBucket(where: VoteBucketSubscriptionWhereInput): VoteBucketSubscriptionPayload
}

type User {
  userId: ID!
  createdAt: DateTime!
  username: String!
  password: String!
  lastLocation: UserLocation
  locationHistory(where: UserLocationWhereInput, orderBy: UserLocationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [UserLocation!]
  createdContent(where: ContentWhereInput, orderBy: ContentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Content!]
  createdVotes(where: VoteWhereInput, orderBy: VoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Vote!]
  createdVoids(where: NVoidWhereInput, orderBy: NVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [NVoid!]
  savedVoids(where: UserSavedVoidWhereInput, orderBy: UserSavedVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [UserSavedVoid!]
  createdShoutsInVoids(where: ShoutInVoidWhereInput, orderBy: ShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ShoutInVoid!]
  activatedEchosOfShouts(where: UserActivatedEchoOfShoutWhereInput, orderBy: UserActivatedEchoOfShoutOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [UserActivatedEchoOfShout!]
  createdEchosOfShoutsInVoid(where: EchoOfShoutInVoidWhereInput, orderBy: EchoOfShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [EchoOfShoutInVoid!]
  repliesToShoutsInVoid(where: ReplyToShoutInVoidWhereInput, orderBy: ReplyToShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ReplyToShoutInVoid!]
  repliesToEchosOfShoutsInVoid(where: ReplyToEchoOfShoutInVoidWhereInput, orderBy: ReplyToEchoOfShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ReplyToEchoOfShoutInVoid!]
}

type UserActivatedEchoOfShout {
  userActivatedEchoOfShoutId: ID!
  createdAt: DateTime!
  createdBy: User!
  originalShoutContent: Content!
  originalShoutVoidGeohash: String!
  originalEchoOfShoutInVoid: EchoOfShoutInVoid
}

type UserActivatedEchoOfShoutConnection {
  pageInfo: PageInfo!
  edges: [UserActivatedEchoOfShoutEdge]!
  aggregate: AggregateUserActivatedEchoOfShout!
}

input UserActivatedEchoOfShoutCreateInput {
  userActivatedEchoOfShoutId: ID
  createdBy: UserCreateOneWithoutActivatedEchosOfShoutsInput!
  originalShoutContent: ContentCreateOneInput!
  originalShoutVoidGeohash: String!
  originalEchoOfShoutInVoid: EchoOfShoutInVoidCreateOneInput
}

input UserActivatedEchoOfShoutCreateManyWithoutCreatedByInput {
  create: [UserActivatedEchoOfShoutCreateWithoutCreatedByInput!]
  connect: [UserActivatedEchoOfShoutWhereUniqueInput!]
}

input UserActivatedEchoOfShoutCreateWithoutCreatedByInput {
  userActivatedEchoOfShoutId: ID
  originalShoutContent: ContentCreateOneInput!
  originalShoutVoidGeohash: String!
  originalEchoOfShoutInVoid: EchoOfShoutInVoidCreateOneInput
}

type UserActivatedEchoOfShoutEdge {
  node: UserActivatedEchoOfShout!
  cursor: String!
}

enum UserActivatedEchoOfShoutOrderByInput {
  userActivatedEchoOfShoutId_ASC
  userActivatedEchoOfShoutId_DESC
  createdAt_ASC
  createdAt_DESC
  originalShoutVoidGeohash_ASC
  originalShoutVoidGeohash_DESC
}

type UserActivatedEchoOfShoutPreviousValues {
  userActivatedEchoOfShoutId: ID!
  createdAt: DateTime!
  originalShoutVoidGeohash: String!
}

input UserActivatedEchoOfShoutScalarWhereInput {
  userActivatedEchoOfShoutId: ID
  userActivatedEchoOfShoutId_not: ID
  userActivatedEchoOfShoutId_in: [ID!]
  userActivatedEchoOfShoutId_not_in: [ID!]
  userActivatedEchoOfShoutId_lt: ID
  userActivatedEchoOfShoutId_lte: ID
  userActivatedEchoOfShoutId_gt: ID
  userActivatedEchoOfShoutId_gte: ID
  userActivatedEchoOfShoutId_contains: ID
  userActivatedEchoOfShoutId_not_contains: ID
  userActivatedEchoOfShoutId_starts_with: ID
  userActivatedEchoOfShoutId_not_starts_with: ID
  userActivatedEchoOfShoutId_ends_with: ID
  userActivatedEchoOfShoutId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  originalShoutVoidGeohash: String
  originalShoutVoidGeohash_not: String
  originalShoutVoidGeohash_in: [String!]
  originalShoutVoidGeohash_not_in: [String!]
  originalShoutVoidGeohash_lt: String
  originalShoutVoidGeohash_lte: String
  originalShoutVoidGeohash_gt: String
  originalShoutVoidGeohash_gte: String
  originalShoutVoidGeohash_contains: String
  originalShoutVoidGeohash_not_contains: String
  originalShoutVoidGeohash_starts_with: String
  originalShoutVoidGeohash_not_starts_with: String
  originalShoutVoidGeohash_ends_with: String
  originalShoutVoidGeohash_not_ends_with: String
  AND: [UserActivatedEchoOfShoutScalarWhereInput!]
  OR: [UserActivatedEchoOfShoutScalarWhereInput!]
  NOT: [UserActivatedEchoOfShoutScalarWhereInput!]
}

type UserActivatedEchoOfShoutSubscriptionPayload {
  mutation: MutationType!
  node: UserActivatedEchoOfShout
  updatedFields: [String!]
  previousValues: UserActivatedEchoOfShoutPreviousValues
}

input UserActivatedEchoOfShoutSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UserActivatedEchoOfShoutWhereInput
  AND: [UserActivatedEchoOfShoutSubscriptionWhereInput!]
  OR: [UserActivatedEchoOfShoutSubscriptionWhereInput!]
  NOT: [UserActivatedEchoOfShoutSubscriptionWhereInput!]
}

input UserActivatedEchoOfShoutUpdateInput {
  createdBy: UserUpdateOneRequiredWithoutActivatedEchosOfShoutsInput
  originalShoutContent: ContentUpdateOneRequiredInput
  originalShoutVoidGeohash: String
  originalEchoOfShoutInVoid: EchoOfShoutInVoidUpdateOneInput
}

input UserActivatedEchoOfShoutUpdateManyDataInput {
  originalShoutVoidGeohash: String
}

input UserActivatedEchoOfShoutUpdateManyMutationInput {
  originalShoutVoidGeohash: String
}

input UserActivatedEchoOfShoutUpdateManyWithoutCreatedByInput {
  create: [UserActivatedEchoOfShoutCreateWithoutCreatedByInput!]
  delete: [UserActivatedEchoOfShoutWhereUniqueInput!]
  connect: [UserActivatedEchoOfShoutWhereUniqueInput!]
  set: [UserActivatedEchoOfShoutWhereUniqueInput!]
  disconnect: [UserActivatedEchoOfShoutWhereUniqueInput!]
  update: [UserActivatedEchoOfShoutUpdateWithWhereUniqueWithoutCreatedByInput!]
  upsert: [UserActivatedEchoOfShoutUpsertWithWhereUniqueWithoutCreatedByInput!]
  deleteMany: [UserActivatedEchoOfShoutScalarWhereInput!]
  updateMany: [UserActivatedEchoOfShoutUpdateManyWithWhereNestedInput!]
}

input UserActivatedEchoOfShoutUpdateManyWithWhereNestedInput {
  where: UserActivatedEchoOfShoutScalarWhereInput!
  data: UserActivatedEchoOfShoutUpdateManyDataInput!
}

input UserActivatedEchoOfShoutUpdateWithoutCreatedByDataInput {
  originalShoutContent: ContentUpdateOneRequiredInput
  originalShoutVoidGeohash: String
  originalEchoOfShoutInVoid: EchoOfShoutInVoidUpdateOneInput
}

input UserActivatedEchoOfShoutUpdateWithWhereUniqueWithoutCreatedByInput {
  where: UserActivatedEchoOfShoutWhereUniqueInput!
  data: UserActivatedEchoOfShoutUpdateWithoutCreatedByDataInput!
}

input UserActivatedEchoOfShoutUpsertWithWhereUniqueWithoutCreatedByInput {
  where: UserActivatedEchoOfShoutWhereUniqueInput!
  update: UserActivatedEchoOfShoutUpdateWithoutCreatedByDataInput!
  create: UserActivatedEchoOfShoutCreateWithoutCreatedByInput!
}

input UserActivatedEchoOfShoutWhereInput {
  userActivatedEchoOfShoutId: ID
  userActivatedEchoOfShoutId_not: ID
  userActivatedEchoOfShoutId_in: [ID!]
  userActivatedEchoOfShoutId_not_in: [ID!]
  userActivatedEchoOfShoutId_lt: ID
  userActivatedEchoOfShoutId_lte: ID
  userActivatedEchoOfShoutId_gt: ID
  userActivatedEchoOfShoutId_gte: ID
  userActivatedEchoOfShoutId_contains: ID
  userActivatedEchoOfShoutId_not_contains: ID
  userActivatedEchoOfShoutId_starts_with: ID
  userActivatedEchoOfShoutId_not_starts_with: ID
  userActivatedEchoOfShoutId_ends_with: ID
  userActivatedEchoOfShoutId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdBy: UserWhereInput
  originalShoutContent: ContentWhereInput
  originalShoutVoidGeohash: String
  originalShoutVoidGeohash_not: String
  originalShoutVoidGeohash_in: [String!]
  originalShoutVoidGeohash_not_in: [String!]
  originalShoutVoidGeohash_lt: String
  originalShoutVoidGeohash_lte: String
  originalShoutVoidGeohash_gt: String
  originalShoutVoidGeohash_gte: String
  originalShoutVoidGeohash_contains: String
  originalShoutVoidGeohash_not_contains: String
  originalShoutVoidGeohash_starts_with: String
  originalShoutVoidGeohash_not_starts_with: String
  originalShoutVoidGeohash_ends_with: String
  originalShoutVoidGeohash_not_ends_with: String
  originalEchoOfShoutInVoid: EchoOfShoutInVoidWhereInput
  AND: [UserActivatedEchoOfShoutWhereInput!]
  OR: [UserActivatedEchoOfShoutWhereInput!]
  NOT: [UserActivatedEchoOfShoutWhereInput!]
}

input UserActivatedEchoOfShoutWhereUniqueInput {
  userActivatedEchoOfShoutId: ID
}

type UserConnection {
  pageInfo: PageInfo!
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  userId: ID
  username: String!
  password: String!
  lastLocation: UserLocationCreateOneInput
  locationHistory: UserLocationCreateManyWithoutCreatedByInput
  createdContent: ContentCreateManyWithoutCreatedByInput
  createdVotes: VoteCreateManyWithoutCreatedByInput
  createdVoids: NVoidCreateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidCreateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidCreateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutCreateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidCreateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidCreateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidCreateManyWithoutCreatedByInput
}

input UserCreateOneWithoutActivatedEchosOfShoutsInput {
  create: UserCreateWithoutActivatedEchosOfShoutsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutCreatedContentInput {
  create: UserCreateWithoutCreatedContentInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutCreatedEchosOfShoutsInVoidInput {
  create: UserCreateWithoutCreatedEchosOfShoutsInVoidInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutCreatedShoutsInVoidsInput {
  create: UserCreateWithoutCreatedShoutsInVoidsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutCreatedVoidsInput {
  create: UserCreateWithoutCreatedVoidsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutCreatedVotesInput {
  create: UserCreateWithoutCreatedVotesInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutLocationHistoryInput {
  create: UserCreateWithoutLocationHistoryInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutRepliesToEchosOfShoutsInVoidInput {
  create: UserCreateWithoutRepliesToEchosOfShoutsInVoidInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutRepliesToShoutsInVoidInput {
  create: UserCreateWithoutRepliesToShoutsInVoidInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutSavedVoidsInput {
  create: UserCreateWithoutSavedVoidsInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutActivatedEchosOfShoutsInput {
  userId: ID
  username: String!
  password: String!
  lastLocation: UserLocationCreateOneInput
  locationHistory: UserLocationCreateManyWithoutCreatedByInput
  createdContent: ContentCreateManyWithoutCreatedByInput
  createdVotes: VoteCreateManyWithoutCreatedByInput
  createdVoids: NVoidCreateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidCreateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidCreateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidCreateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidCreateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidCreateManyWithoutCreatedByInput
}

input UserCreateWithoutCreatedContentInput {
  userId: ID
  username: String!
  password: String!
  lastLocation: UserLocationCreateOneInput
  locationHistory: UserLocationCreateManyWithoutCreatedByInput
  createdVotes: VoteCreateManyWithoutCreatedByInput
  createdVoids: NVoidCreateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidCreateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidCreateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutCreateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidCreateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidCreateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidCreateManyWithoutCreatedByInput
}

input UserCreateWithoutCreatedEchosOfShoutsInVoidInput {
  userId: ID
  username: String!
  password: String!
  lastLocation: UserLocationCreateOneInput
  locationHistory: UserLocationCreateManyWithoutCreatedByInput
  createdContent: ContentCreateManyWithoutCreatedByInput
  createdVotes: VoteCreateManyWithoutCreatedByInput
  createdVoids: NVoidCreateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidCreateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidCreateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutCreateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidCreateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidCreateManyWithoutCreatedByInput
}

input UserCreateWithoutCreatedShoutsInVoidsInput {
  userId: ID
  username: String!
  password: String!
  lastLocation: UserLocationCreateOneInput
  locationHistory: UserLocationCreateManyWithoutCreatedByInput
  createdContent: ContentCreateManyWithoutCreatedByInput
  createdVotes: VoteCreateManyWithoutCreatedByInput
  createdVoids: NVoidCreateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidCreateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutCreateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidCreateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidCreateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidCreateManyWithoutCreatedByInput
}

input UserCreateWithoutCreatedVoidsInput {
  userId: ID
  username: String!
  password: String!
  lastLocation: UserLocationCreateOneInput
  locationHistory: UserLocationCreateManyWithoutCreatedByInput
  createdContent: ContentCreateManyWithoutCreatedByInput
  createdVotes: VoteCreateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidCreateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidCreateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutCreateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidCreateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidCreateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidCreateManyWithoutCreatedByInput
}

input UserCreateWithoutCreatedVotesInput {
  userId: ID
  username: String!
  password: String!
  lastLocation: UserLocationCreateOneInput
  locationHistory: UserLocationCreateManyWithoutCreatedByInput
  createdContent: ContentCreateManyWithoutCreatedByInput
  createdVoids: NVoidCreateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidCreateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidCreateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutCreateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidCreateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidCreateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidCreateManyWithoutCreatedByInput
}

input UserCreateWithoutLocationHistoryInput {
  userId: ID
  username: String!
  password: String!
  lastLocation: UserLocationCreateOneInput
  createdContent: ContentCreateManyWithoutCreatedByInput
  createdVotes: VoteCreateManyWithoutCreatedByInput
  createdVoids: NVoidCreateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidCreateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidCreateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutCreateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidCreateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidCreateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidCreateManyWithoutCreatedByInput
}

input UserCreateWithoutRepliesToEchosOfShoutsInVoidInput {
  userId: ID
  username: String!
  password: String!
  lastLocation: UserLocationCreateOneInput
  locationHistory: UserLocationCreateManyWithoutCreatedByInput
  createdContent: ContentCreateManyWithoutCreatedByInput
  createdVotes: VoteCreateManyWithoutCreatedByInput
  createdVoids: NVoidCreateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidCreateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidCreateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutCreateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidCreateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidCreateManyWithoutCreatedByInput
}

input UserCreateWithoutRepliesToShoutsInVoidInput {
  userId: ID
  username: String!
  password: String!
  lastLocation: UserLocationCreateOneInput
  locationHistory: UserLocationCreateManyWithoutCreatedByInput
  createdContent: ContentCreateManyWithoutCreatedByInput
  createdVotes: VoteCreateManyWithoutCreatedByInput
  createdVoids: NVoidCreateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidCreateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidCreateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutCreateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidCreateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidCreateManyWithoutCreatedByInput
}

input UserCreateWithoutSavedVoidsInput {
  userId: ID
  username: String!
  password: String!
  lastLocation: UserLocationCreateOneInput
  locationHistory: UserLocationCreateManyWithoutCreatedByInput
  createdContent: ContentCreateManyWithoutCreatedByInput
  createdVotes: VoteCreateManyWithoutCreatedByInput
  createdVoids: NVoidCreateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidCreateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutCreateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidCreateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidCreateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidCreateManyWithoutCreatedByInput
}

type UserEdge {
  node: User!
  cursor: String!
}

type UserLocation {
  userLocationId: ID!
  userGeohash: String!
  createdAt: DateTime!
  createdBy: User!
}

type UserLocationConnection {
  pageInfo: PageInfo!
  edges: [UserLocationEdge]!
  aggregate: AggregateUserLocation!
}

input UserLocationCreateInput {
  userLocationId: ID
  userGeohash: String!
  createdBy: UserCreateOneWithoutLocationHistoryInput!
}

input UserLocationCreateManyWithoutCreatedByInput {
  create: [UserLocationCreateWithoutCreatedByInput!]
  connect: [UserLocationWhereUniqueInput!]
}

input UserLocationCreateOneInput {
  create: UserLocationCreateInput
  connect: UserLocationWhereUniqueInput
}

input UserLocationCreateWithoutCreatedByInput {
  userLocationId: ID
  userGeohash: String!
}

type UserLocationEdge {
  node: UserLocation!
  cursor: String!
}

enum UserLocationOrderByInput {
  userLocationId_ASC
  userLocationId_DESC
  userGeohash_ASC
  userGeohash_DESC
  createdAt_ASC
  createdAt_DESC
}

type UserLocationPreviousValues {
  userLocationId: ID!
  userGeohash: String!
  createdAt: DateTime!
}

input UserLocationScalarWhereInput {
  userLocationId: ID
  userLocationId_not: ID
  userLocationId_in: [ID!]
  userLocationId_not_in: [ID!]
  userLocationId_lt: ID
  userLocationId_lte: ID
  userLocationId_gt: ID
  userLocationId_gte: ID
  userLocationId_contains: ID
  userLocationId_not_contains: ID
  userLocationId_starts_with: ID
  userLocationId_not_starts_with: ID
  userLocationId_ends_with: ID
  userLocationId_not_ends_with: ID
  userGeohash: String
  userGeohash_not: String
  userGeohash_in: [String!]
  userGeohash_not_in: [String!]
  userGeohash_lt: String
  userGeohash_lte: String
  userGeohash_gt: String
  userGeohash_gte: String
  userGeohash_contains: String
  userGeohash_not_contains: String
  userGeohash_starts_with: String
  userGeohash_not_starts_with: String
  userGeohash_ends_with: String
  userGeohash_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  AND: [UserLocationScalarWhereInput!]
  OR: [UserLocationScalarWhereInput!]
  NOT: [UserLocationScalarWhereInput!]
}

type UserLocationSubscriptionPayload {
  mutation: MutationType!
  node: UserLocation
  updatedFields: [String!]
  previousValues: UserLocationPreviousValues
}

input UserLocationSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UserLocationWhereInput
  AND: [UserLocationSubscriptionWhereInput!]
  OR: [UserLocationSubscriptionWhereInput!]
  NOT: [UserLocationSubscriptionWhereInput!]
}

input UserLocationUpdateDataInput {
  userGeohash: String
  createdBy: UserUpdateOneRequiredWithoutLocationHistoryInput
}

input UserLocationUpdateInput {
  userGeohash: String
  createdBy: UserUpdateOneRequiredWithoutLocationHistoryInput
}

input UserLocationUpdateManyDataInput {
  userGeohash: String
}

input UserLocationUpdateManyMutationInput {
  userGeohash: String
}

input UserLocationUpdateManyWithoutCreatedByInput {
  create: [UserLocationCreateWithoutCreatedByInput!]
  delete: [UserLocationWhereUniqueInput!]
  connect: [UserLocationWhereUniqueInput!]
  set: [UserLocationWhereUniqueInput!]
  disconnect: [UserLocationWhereUniqueInput!]
  update: [UserLocationUpdateWithWhereUniqueWithoutCreatedByInput!]
  upsert: [UserLocationUpsertWithWhereUniqueWithoutCreatedByInput!]
  deleteMany: [UserLocationScalarWhereInput!]
  updateMany: [UserLocationUpdateManyWithWhereNestedInput!]
}

input UserLocationUpdateManyWithWhereNestedInput {
  where: UserLocationScalarWhereInput!
  data: UserLocationUpdateManyDataInput!
}

input UserLocationUpdateOneInput {
  create: UserLocationCreateInput
  update: UserLocationUpdateDataInput
  upsert: UserLocationUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: UserLocationWhereUniqueInput
}

input UserLocationUpdateWithoutCreatedByDataInput {
  userGeohash: String
}

input UserLocationUpdateWithWhereUniqueWithoutCreatedByInput {
  where: UserLocationWhereUniqueInput!
  data: UserLocationUpdateWithoutCreatedByDataInput!
}

input UserLocationUpsertNestedInput {
  update: UserLocationUpdateDataInput!
  create: UserLocationCreateInput!
}

input UserLocationUpsertWithWhereUniqueWithoutCreatedByInput {
  where: UserLocationWhereUniqueInput!
  update: UserLocationUpdateWithoutCreatedByDataInput!
  create: UserLocationCreateWithoutCreatedByInput!
}

input UserLocationWhereInput {
  userLocationId: ID
  userLocationId_not: ID
  userLocationId_in: [ID!]
  userLocationId_not_in: [ID!]
  userLocationId_lt: ID
  userLocationId_lte: ID
  userLocationId_gt: ID
  userLocationId_gte: ID
  userLocationId_contains: ID
  userLocationId_not_contains: ID
  userLocationId_starts_with: ID
  userLocationId_not_starts_with: ID
  userLocationId_ends_with: ID
  userLocationId_not_ends_with: ID
  userGeohash: String
  userGeohash_not: String
  userGeohash_in: [String!]
  userGeohash_not_in: [String!]
  userGeohash_lt: String
  userGeohash_lte: String
  userGeohash_gt: String
  userGeohash_gte: String
  userGeohash_contains: String
  userGeohash_not_contains: String
  userGeohash_starts_with: String
  userGeohash_not_starts_with: String
  userGeohash_ends_with: String
  userGeohash_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdBy: UserWhereInput
  AND: [UserLocationWhereInput!]
  OR: [UserLocationWhereInput!]
  NOT: [UserLocationWhereInput!]
}

input UserLocationWhereUniqueInput {
  userLocationId: ID
}

enum UserOrderByInput {
  userId_ASC
  userId_DESC
  createdAt_ASC
  createdAt_DESC
  username_ASC
  username_DESC
  password_ASC
  password_DESC
}

type UserPreviousValues {
  userId: ID!
  createdAt: DateTime!
  username: String!
  password: String!
}

type UserSavedVoid {
  userSavedVoidId: ID!
  createdAt: DateTime!
  createdBy: User!
  originalVoidGeohash: String!
}

type UserSavedVoidConnection {
  pageInfo: PageInfo!
  edges: [UserSavedVoidEdge]!
  aggregate: AggregateUserSavedVoid!
}

input UserSavedVoidCreateInput {
  userSavedVoidId: ID
  createdBy: UserCreateOneWithoutSavedVoidsInput!
  originalVoidGeohash: String!
}

input UserSavedVoidCreateManyWithoutCreatedByInput {
  create: [UserSavedVoidCreateWithoutCreatedByInput!]
  connect: [UserSavedVoidWhereUniqueInput!]
}

input UserSavedVoidCreateWithoutCreatedByInput {
  userSavedVoidId: ID
  originalVoidGeohash: String!
}

type UserSavedVoidEdge {
  node: UserSavedVoid!
  cursor: String!
}

enum UserSavedVoidOrderByInput {
  userSavedVoidId_ASC
  userSavedVoidId_DESC
  createdAt_ASC
  createdAt_DESC
  originalVoidGeohash_ASC
  originalVoidGeohash_DESC
}

type UserSavedVoidPreviousValues {
  userSavedVoidId: ID!
  createdAt: DateTime!
  originalVoidGeohash: String!
}

input UserSavedVoidScalarWhereInput {
  userSavedVoidId: ID
  userSavedVoidId_not: ID
  userSavedVoidId_in: [ID!]
  userSavedVoidId_not_in: [ID!]
  userSavedVoidId_lt: ID
  userSavedVoidId_lte: ID
  userSavedVoidId_gt: ID
  userSavedVoidId_gte: ID
  userSavedVoidId_contains: ID
  userSavedVoidId_not_contains: ID
  userSavedVoidId_starts_with: ID
  userSavedVoidId_not_starts_with: ID
  userSavedVoidId_ends_with: ID
  userSavedVoidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  originalVoidGeohash: String
  originalVoidGeohash_not: String
  originalVoidGeohash_in: [String!]
  originalVoidGeohash_not_in: [String!]
  originalVoidGeohash_lt: String
  originalVoidGeohash_lte: String
  originalVoidGeohash_gt: String
  originalVoidGeohash_gte: String
  originalVoidGeohash_contains: String
  originalVoidGeohash_not_contains: String
  originalVoidGeohash_starts_with: String
  originalVoidGeohash_not_starts_with: String
  originalVoidGeohash_ends_with: String
  originalVoidGeohash_not_ends_with: String
  AND: [UserSavedVoidScalarWhereInput!]
  OR: [UserSavedVoidScalarWhereInput!]
  NOT: [UserSavedVoidScalarWhereInput!]
}

type UserSavedVoidSubscriptionPayload {
  mutation: MutationType!
  node: UserSavedVoid
  updatedFields: [String!]
  previousValues: UserSavedVoidPreviousValues
}

input UserSavedVoidSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UserSavedVoidWhereInput
  AND: [UserSavedVoidSubscriptionWhereInput!]
  OR: [UserSavedVoidSubscriptionWhereInput!]
  NOT: [UserSavedVoidSubscriptionWhereInput!]
}

input UserSavedVoidUpdateInput {
  createdBy: UserUpdateOneRequiredWithoutSavedVoidsInput
  originalVoidGeohash: String
}

input UserSavedVoidUpdateManyDataInput {
  originalVoidGeohash: String
}

input UserSavedVoidUpdateManyMutationInput {
  originalVoidGeohash: String
}

input UserSavedVoidUpdateManyWithoutCreatedByInput {
  create: [UserSavedVoidCreateWithoutCreatedByInput!]
  delete: [UserSavedVoidWhereUniqueInput!]
  connect: [UserSavedVoidWhereUniqueInput!]
  set: [UserSavedVoidWhereUniqueInput!]
  disconnect: [UserSavedVoidWhereUniqueInput!]
  update: [UserSavedVoidUpdateWithWhereUniqueWithoutCreatedByInput!]
  upsert: [UserSavedVoidUpsertWithWhereUniqueWithoutCreatedByInput!]
  deleteMany: [UserSavedVoidScalarWhereInput!]
  updateMany: [UserSavedVoidUpdateManyWithWhereNestedInput!]
}

input UserSavedVoidUpdateManyWithWhereNestedInput {
  where: UserSavedVoidScalarWhereInput!
  data: UserSavedVoidUpdateManyDataInput!
}

input UserSavedVoidUpdateWithoutCreatedByDataInput {
  originalVoidGeohash: String
}

input UserSavedVoidUpdateWithWhereUniqueWithoutCreatedByInput {
  where: UserSavedVoidWhereUniqueInput!
  data: UserSavedVoidUpdateWithoutCreatedByDataInput!
}

input UserSavedVoidUpsertWithWhereUniqueWithoutCreatedByInput {
  where: UserSavedVoidWhereUniqueInput!
  update: UserSavedVoidUpdateWithoutCreatedByDataInput!
  create: UserSavedVoidCreateWithoutCreatedByInput!
}

input UserSavedVoidWhereInput {
  userSavedVoidId: ID
  userSavedVoidId_not: ID
  userSavedVoidId_in: [ID!]
  userSavedVoidId_not_in: [ID!]
  userSavedVoidId_lt: ID
  userSavedVoidId_lte: ID
  userSavedVoidId_gt: ID
  userSavedVoidId_gte: ID
  userSavedVoidId_contains: ID
  userSavedVoidId_not_contains: ID
  userSavedVoidId_starts_with: ID
  userSavedVoidId_not_starts_with: ID
  userSavedVoidId_ends_with: ID
  userSavedVoidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdBy: UserWhereInput
  originalVoidGeohash: String
  originalVoidGeohash_not: String
  originalVoidGeohash_in: [String!]
  originalVoidGeohash_not_in: [String!]
  originalVoidGeohash_lt: String
  originalVoidGeohash_lte: String
  originalVoidGeohash_gt: String
  originalVoidGeohash_gte: String
  originalVoidGeohash_contains: String
  originalVoidGeohash_not_contains: String
  originalVoidGeohash_starts_with: String
  originalVoidGeohash_not_starts_with: String
  originalVoidGeohash_ends_with: String
  originalVoidGeohash_not_ends_with: String
  AND: [UserSavedVoidWhereInput!]
  OR: [UserSavedVoidWhereInput!]
  NOT: [UserSavedVoidWhereInput!]
}

input UserSavedVoidWhereUniqueInput {
  userSavedVoidId: ID
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UserWhereInput
  AND: [UserSubscriptionWhereInput!]
  OR: [UserSubscriptionWhereInput!]
  NOT: [UserSubscriptionWhereInput!]
}

input UserUpdateInput {
  username: String
  password: String
  lastLocation: UserLocationUpdateOneInput
  locationHistory: UserLocationUpdateManyWithoutCreatedByInput
  createdContent: ContentUpdateManyWithoutCreatedByInput
  createdVotes: VoteUpdateManyWithoutCreatedByInput
  createdVoids: NVoidUpdateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidUpdateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidUpdateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutUpdateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidUpdateManyWithoutCreatedByInput
}

input UserUpdateManyMutationInput {
  username: String
  password: String
}

input UserUpdateOneRequiredWithoutActivatedEchosOfShoutsInput {
  create: UserCreateWithoutActivatedEchosOfShoutsInput
  update: UserUpdateWithoutActivatedEchosOfShoutsDataInput
  upsert: UserUpsertWithoutActivatedEchosOfShoutsInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutCreatedContentInput {
  create: UserCreateWithoutCreatedContentInput
  update: UserUpdateWithoutCreatedContentDataInput
  upsert: UserUpsertWithoutCreatedContentInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutCreatedEchosOfShoutsInVoidInput {
  create: UserCreateWithoutCreatedEchosOfShoutsInVoidInput
  update: UserUpdateWithoutCreatedEchosOfShoutsInVoidDataInput
  upsert: UserUpsertWithoutCreatedEchosOfShoutsInVoidInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutCreatedShoutsInVoidsInput {
  create: UserCreateWithoutCreatedShoutsInVoidsInput
  update: UserUpdateWithoutCreatedShoutsInVoidsDataInput
  upsert: UserUpsertWithoutCreatedShoutsInVoidsInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutCreatedVoidsInput {
  create: UserCreateWithoutCreatedVoidsInput
  update: UserUpdateWithoutCreatedVoidsDataInput
  upsert: UserUpsertWithoutCreatedVoidsInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutCreatedVotesInput {
  create: UserCreateWithoutCreatedVotesInput
  update: UserUpdateWithoutCreatedVotesDataInput
  upsert: UserUpsertWithoutCreatedVotesInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutLocationHistoryInput {
  create: UserCreateWithoutLocationHistoryInput
  update: UserUpdateWithoutLocationHistoryDataInput
  upsert: UserUpsertWithoutLocationHistoryInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutRepliesToEchosOfShoutsInVoidInput {
  create: UserCreateWithoutRepliesToEchosOfShoutsInVoidInput
  update: UserUpdateWithoutRepliesToEchosOfShoutsInVoidDataInput
  upsert: UserUpsertWithoutRepliesToEchosOfShoutsInVoidInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutRepliesToShoutsInVoidInput {
  create: UserCreateWithoutRepliesToShoutsInVoidInput
  update: UserUpdateWithoutRepliesToShoutsInVoidDataInput
  upsert: UserUpsertWithoutRepliesToShoutsInVoidInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutSavedVoidsInput {
  create: UserCreateWithoutSavedVoidsInput
  update: UserUpdateWithoutSavedVoidsDataInput
  upsert: UserUpsertWithoutSavedVoidsInput
  connect: UserWhereUniqueInput
}

input UserUpdateWithoutActivatedEchosOfShoutsDataInput {
  username: String
  password: String
  lastLocation: UserLocationUpdateOneInput
  locationHistory: UserLocationUpdateManyWithoutCreatedByInput
  createdContent: ContentUpdateManyWithoutCreatedByInput
  createdVotes: VoteUpdateManyWithoutCreatedByInput
  createdVoids: NVoidUpdateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidUpdateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidUpdateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidUpdateManyWithoutCreatedByInput
}

input UserUpdateWithoutCreatedContentDataInput {
  username: String
  password: String
  lastLocation: UserLocationUpdateOneInput
  locationHistory: UserLocationUpdateManyWithoutCreatedByInput
  createdVotes: VoteUpdateManyWithoutCreatedByInput
  createdVoids: NVoidUpdateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidUpdateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidUpdateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutUpdateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidUpdateManyWithoutCreatedByInput
}

input UserUpdateWithoutCreatedEchosOfShoutsInVoidDataInput {
  username: String
  password: String
  lastLocation: UserLocationUpdateOneInput
  locationHistory: UserLocationUpdateManyWithoutCreatedByInput
  createdContent: ContentUpdateManyWithoutCreatedByInput
  createdVotes: VoteUpdateManyWithoutCreatedByInput
  createdVoids: NVoidUpdateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidUpdateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidUpdateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutUpdateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidUpdateManyWithoutCreatedByInput
}

input UserUpdateWithoutCreatedShoutsInVoidsDataInput {
  username: String
  password: String
  lastLocation: UserLocationUpdateOneInput
  locationHistory: UserLocationUpdateManyWithoutCreatedByInput
  createdContent: ContentUpdateManyWithoutCreatedByInput
  createdVotes: VoteUpdateManyWithoutCreatedByInput
  createdVoids: NVoidUpdateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidUpdateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutUpdateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidUpdateManyWithoutCreatedByInput
}

input UserUpdateWithoutCreatedVoidsDataInput {
  username: String
  password: String
  lastLocation: UserLocationUpdateOneInput
  locationHistory: UserLocationUpdateManyWithoutCreatedByInput
  createdContent: ContentUpdateManyWithoutCreatedByInput
  createdVotes: VoteUpdateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidUpdateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidUpdateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutUpdateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidUpdateManyWithoutCreatedByInput
}

input UserUpdateWithoutCreatedVotesDataInput {
  username: String
  password: String
  lastLocation: UserLocationUpdateOneInput
  locationHistory: UserLocationUpdateManyWithoutCreatedByInput
  createdContent: ContentUpdateManyWithoutCreatedByInput
  createdVoids: NVoidUpdateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidUpdateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidUpdateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutUpdateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidUpdateManyWithoutCreatedByInput
}

input UserUpdateWithoutLocationHistoryDataInput {
  username: String
  password: String
  lastLocation: UserLocationUpdateOneInput
  createdContent: ContentUpdateManyWithoutCreatedByInput
  createdVotes: VoteUpdateManyWithoutCreatedByInput
  createdVoids: NVoidUpdateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidUpdateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidUpdateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutUpdateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidUpdateManyWithoutCreatedByInput
}

input UserUpdateWithoutRepliesToEchosOfShoutsInVoidDataInput {
  username: String
  password: String
  lastLocation: UserLocationUpdateOneInput
  locationHistory: UserLocationUpdateManyWithoutCreatedByInput
  createdContent: ContentUpdateManyWithoutCreatedByInput
  createdVotes: VoteUpdateManyWithoutCreatedByInput
  createdVoids: NVoidUpdateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidUpdateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidUpdateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutUpdateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidUpdateManyWithoutCreatedByInput
}

input UserUpdateWithoutRepliesToShoutsInVoidDataInput {
  username: String
  password: String
  lastLocation: UserLocationUpdateOneInput
  locationHistory: UserLocationUpdateManyWithoutCreatedByInput
  createdContent: ContentUpdateManyWithoutCreatedByInput
  createdVotes: VoteUpdateManyWithoutCreatedByInput
  createdVoids: NVoidUpdateManyWithoutCreatedByInput
  savedVoids: UserSavedVoidUpdateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidUpdateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutUpdateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidUpdateManyWithoutCreatedByInput
}

input UserUpdateWithoutSavedVoidsDataInput {
  username: String
  password: String
  lastLocation: UserLocationUpdateOneInput
  locationHistory: UserLocationUpdateManyWithoutCreatedByInput
  createdContent: ContentUpdateManyWithoutCreatedByInput
  createdVotes: VoteUpdateManyWithoutCreatedByInput
  createdVoids: NVoidUpdateManyWithoutCreatedByInput
  createdShoutsInVoids: ShoutInVoidUpdateManyWithoutCreatedByInput
  activatedEchosOfShouts: UserActivatedEchoOfShoutUpdateManyWithoutCreatedByInput
  createdEchosOfShoutsInVoid: EchoOfShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToShoutsInVoid: ReplyToShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToEchosOfShoutsInVoid: ReplyToEchoOfShoutInVoidUpdateManyWithoutCreatedByInput
}

input UserUpsertWithoutActivatedEchosOfShoutsInput {
  update: UserUpdateWithoutActivatedEchosOfShoutsDataInput!
  create: UserCreateWithoutActivatedEchosOfShoutsInput!
}

input UserUpsertWithoutCreatedContentInput {
  update: UserUpdateWithoutCreatedContentDataInput!
  create: UserCreateWithoutCreatedContentInput!
}

input UserUpsertWithoutCreatedEchosOfShoutsInVoidInput {
  update: UserUpdateWithoutCreatedEchosOfShoutsInVoidDataInput!
  create: UserCreateWithoutCreatedEchosOfShoutsInVoidInput!
}

input UserUpsertWithoutCreatedShoutsInVoidsInput {
  update: UserUpdateWithoutCreatedShoutsInVoidsDataInput!
  create: UserCreateWithoutCreatedShoutsInVoidsInput!
}

input UserUpsertWithoutCreatedVoidsInput {
  update: UserUpdateWithoutCreatedVoidsDataInput!
  create: UserCreateWithoutCreatedVoidsInput!
}

input UserUpsertWithoutCreatedVotesInput {
  update: UserUpdateWithoutCreatedVotesDataInput!
  create: UserCreateWithoutCreatedVotesInput!
}

input UserUpsertWithoutLocationHistoryInput {
  update: UserUpdateWithoutLocationHistoryDataInput!
  create: UserCreateWithoutLocationHistoryInput!
}

input UserUpsertWithoutRepliesToEchosOfShoutsInVoidInput {
  update: UserUpdateWithoutRepliesToEchosOfShoutsInVoidDataInput!
  create: UserCreateWithoutRepliesToEchosOfShoutsInVoidInput!
}

input UserUpsertWithoutRepliesToShoutsInVoidInput {
  update: UserUpdateWithoutRepliesToShoutsInVoidDataInput!
  create: UserCreateWithoutRepliesToShoutsInVoidInput!
}

input UserUpsertWithoutSavedVoidsInput {
  update: UserUpdateWithoutSavedVoidsDataInput!
  create: UserCreateWithoutSavedVoidsInput!
}

input UserWhereInput {
  userId: ID
  userId_not: ID
  userId_in: [ID!]
  userId_not_in: [ID!]
  userId_lt: ID
  userId_lte: ID
  userId_gt: ID
  userId_gte: ID
  userId_contains: ID
  userId_not_contains: ID
  userId_starts_with: ID
  userId_not_starts_with: ID
  userId_ends_with: ID
  userId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  username: String
  username_not: String
  username_in: [String!]
  username_not_in: [String!]
  username_lt: String
  username_lte: String
  username_gt: String
  username_gte: String
  username_contains: String
  username_not_contains: String
  username_starts_with: String
  username_not_starts_with: String
  username_ends_with: String
  username_not_ends_with: String
  password: String
  password_not: String
  password_in: [String!]
  password_not_in: [String!]
  password_lt: String
  password_lte: String
  password_gt: String
  password_gte: String
  password_contains: String
  password_not_contains: String
  password_starts_with: String
  password_not_starts_with: String
  password_ends_with: String
  password_not_ends_with: String
  lastLocation: UserLocationWhereInput
  locationHistory_every: UserLocationWhereInput
  locationHistory_some: UserLocationWhereInput
  locationHistory_none: UserLocationWhereInput
  createdContent_every: ContentWhereInput
  createdContent_some: ContentWhereInput
  createdContent_none: ContentWhereInput
  createdVotes_every: VoteWhereInput
  createdVotes_some: VoteWhereInput
  createdVotes_none: VoteWhereInput
  createdVoids_every: NVoidWhereInput
  createdVoids_some: NVoidWhereInput
  createdVoids_none: NVoidWhereInput
  savedVoids_every: UserSavedVoidWhereInput
  savedVoids_some: UserSavedVoidWhereInput
  savedVoids_none: UserSavedVoidWhereInput
  createdShoutsInVoids_every: ShoutInVoidWhereInput
  createdShoutsInVoids_some: ShoutInVoidWhereInput
  createdShoutsInVoids_none: ShoutInVoidWhereInput
  activatedEchosOfShouts_every: UserActivatedEchoOfShoutWhereInput
  activatedEchosOfShouts_some: UserActivatedEchoOfShoutWhereInput
  activatedEchosOfShouts_none: UserActivatedEchoOfShoutWhereInput
  createdEchosOfShoutsInVoid_every: EchoOfShoutInVoidWhereInput
  createdEchosOfShoutsInVoid_some: EchoOfShoutInVoidWhereInput
  createdEchosOfShoutsInVoid_none: EchoOfShoutInVoidWhereInput
  repliesToShoutsInVoid_every: ReplyToShoutInVoidWhereInput
  repliesToShoutsInVoid_some: ReplyToShoutInVoidWhereInput
  repliesToShoutsInVoid_none: ReplyToShoutInVoidWhereInput
  repliesToEchosOfShoutsInVoid_every: ReplyToEchoOfShoutInVoidWhereInput
  repliesToEchosOfShoutsInVoid_some: ReplyToEchoOfShoutInVoidWhereInput
  repliesToEchosOfShoutsInVoid_none: ReplyToEchoOfShoutInVoidWhereInput
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
}

input UserWhereUniqueInput {
  userId: ID
  username: String
}

type Vote {
  voteId: ID!
  updatedAt: DateTime!
  createdBy: User!
  voteBucket: VoteBucket!
  isUpvote: Boolean!
  uniqueHash: String!
}

type VoteBucket {
  voteBucketId: ID!
  createdAt: DateTime!
  voteCount: Int!
  votes(where: VoteWhereInput, orderBy: VoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Vote!]
}

type VoteBucketConnection {
  pageInfo: PageInfo!
  edges: [VoteBucketEdge]!
  aggregate: AggregateVoteBucket!
}

input VoteBucketCreateInput {
  voteBucketId: ID
  voteCount: Int!
  votes: VoteCreateManyWithoutVoteBucketInput
}

input VoteBucketCreateOneInput {
  create: VoteBucketCreateInput
  connect: VoteBucketWhereUniqueInput
}

input VoteBucketCreateOneWithoutVotesInput {
  create: VoteBucketCreateWithoutVotesInput
  connect: VoteBucketWhereUniqueInput
}

input VoteBucketCreateWithoutVotesInput {
  voteBucketId: ID
  voteCount: Int!
}

type VoteBucketEdge {
  node: VoteBucket!
  cursor: String!
}

enum VoteBucketOrderByInput {
  voteBucketId_ASC
  voteBucketId_DESC
  createdAt_ASC
  createdAt_DESC
  voteCount_ASC
  voteCount_DESC
}

type VoteBucketPreviousValues {
  voteBucketId: ID!
  createdAt: DateTime!
  voteCount: Int!
}

type VoteBucketSubscriptionPayload {
  mutation: MutationType!
  node: VoteBucket
  updatedFields: [String!]
  previousValues: VoteBucketPreviousValues
}

input VoteBucketSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: VoteBucketWhereInput
  AND: [VoteBucketSubscriptionWhereInput!]
  OR: [VoteBucketSubscriptionWhereInput!]
  NOT: [VoteBucketSubscriptionWhereInput!]
}

input VoteBucketUpdateDataInput {
  voteCount: Int
  votes: VoteUpdateManyWithoutVoteBucketInput
}

input VoteBucketUpdateInput {
  voteCount: Int
  votes: VoteUpdateManyWithoutVoteBucketInput
}

input VoteBucketUpdateManyMutationInput {
  voteCount: Int
}

input VoteBucketUpdateOneRequiredInput {
  create: VoteBucketCreateInput
  update: VoteBucketUpdateDataInput
  upsert: VoteBucketUpsertNestedInput
  connect: VoteBucketWhereUniqueInput
}

input VoteBucketUpdateOneRequiredWithoutVotesInput {
  create: VoteBucketCreateWithoutVotesInput
  update: VoteBucketUpdateWithoutVotesDataInput
  upsert: VoteBucketUpsertWithoutVotesInput
  connect: VoteBucketWhereUniqueInput
}

input VoteBucketUpdateWithoutVotesDataInput {
  voteCount: Int
}

input VoteBucketUpsertNestedInput {
  update: VoteBucketUpdateDataInput!
  create: VoteBucketCreateInput!
}

input VoteBucketUpsertWithoutVotesInput {
  update: VoteBucketUpdateWithoutVotesDataInput!
  create: VoteBucketCreateWithoutVotesInput!
}

input VoteBucketWhereInput {
  voteBucketId: ID
  voteBucketId_not: ID
  voteBucketId_in: [ID!]
  voteBucketId_not_in: [ID!]
  voteBucketId_lt: ID
  voteBucketId_lte: ID
  voteBucketId_gt: ID
  voteBucketId_gte: ID
  voteBucketId_contains: ID
  voteBucketId_not_contains: ID
  voteBucketId_starts_with: ID
  voteBucketId_not_starts_with: ID
  voteBucketId_ends_with: ID
  voteBucketId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  voteCount: Int
  voteCount_not: Int
  voteCount_in: [Int!]
  voteCount_not_in: [Int!]
  voteCount_lt: Int
  voteCount_lte: Int
  voteCount_gt: Int
  voteCount_gte: Int
  votes_every: VoteWhereInput
  votes_some: VoteWhereInput
  votes_none: VoteWhereInput
  AND: [VoteBucketWhereInput!]
  OR: [VoteBucketWhereInput!]
  NOT: [VoteBucketWhereInput!]
}

input VoteBucketWhereUniqueInput {
  voteBucketId: ID
}

type VoteConnection {
  pageInfo: PageInfo!
  edges: [VoteEdge]!
  aggregate: AggregateVote!
}

input VoteCreateInput {
  voteId: ID
  createdBy: UserCreateOneWithoutCreatedVotesInput!
  voteBucket: VoteBucketCreateOneWithoutVotesInput!
  isUpvote: Boolean!
  uniqueHash: String!
}

input VoteCreateManyWithoutCreatedByInput {
  create: [VoteCreateWithoutCreatedByInput!]
  connect: [VoteWhereUniqueInput!]
}

input VoteCreateManyWithoutVoteBucketInput {
  create: [VoteCreateWithoutVoteBucketInput!]
  connect: [VoteWhereUniqueInput!]
}

input VoteCreateWithoutCreatedByInput {
  voteId: ID
  voteBucket: VoteBucketCreateOneWithoutVotesInput!
  isUpvote: Boolean!
  uniqueHash: String!
}

input VoteCreateWithoutVoteBucketInput {
  voteId: ID
  createdBy: UserCreateOneWithoutCreatedVotesInput!
  isUpvote: Boolean!
  uniqueHash: String!
}

type VoteEdge {
  node: Vote!
  cursor: String!
}

enum VoteOrderByInput {
  voteId_ASC
  voteId_DESC
  updatedAt_ASC
  updatedAt_DESC
  isUpvote_ASC
  isUpvote_DESC
  uniqueHash_ASC
  uniqueHash_DESC
}

type VotePreviousValues {
  voteId: ID!
  updatedAt: DateTime!
  isUpvote: Boolean!
  uniqueHash: String!
}

input VoteScalarWhereInput {
  voteId: ID
  voteId_not: ID
  voteId_in: [ID!]
  voteId_not_in: [ID!]
  voteId_lt: ID
  voteId_lte: ID
  voteId_gt: ID
  voteId_gte: ID
  voteId_contains: ID
  voteId_not_contains: ID
  voteId_starts_with: ID
  voteId_not_starts_with: ID
  voteId_ends_with: ID
  voteId_not_ends_with: ID
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  isUpvote: Boolean
  isUpvote_not: Boolean
  uniqueHash: String
  uniqueHash_not: String
  uniqueHash_in: [String!]
  uniqueHash_not_in: [String!]
  uniqueHash_lt: String
  uniqueHash_lte: String
  uniqueHash_gt: String
  uniqueHash_gte: String
  uniqueHash_contains: String
  uniqueHash_not_contains: String
  uniqueHash_starts_with: String
  uniqueHash_not_starts_with: String
  uniqueHash_ends_with: String
  uniqueHash_not_ends_with: String
  AND: [VoteScalarWhereInput!]
  OR: [VoteScalarWhereInput!]
  NOT: [VoteScalarWhereInput!]
}

type VoteSubscriptionPayload {
  mutation: MutationType!
  node: Vote
  updatedFields: [String!]
  previousValues: VotePreviousValues
}

input VoteSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: VoteWhereInput
  AND: [VoteSubscriptionWhereInput!]
  OR: [VoteSubscriptionWhereInput!]
  NOT: [VoteSubscriptionWhereInput!]
}

input VoteUpdateInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedVotesInput
  voteBucket: VoteBucketUpdateOneRequiredWithoutVotesInput
  isUpvote: Boolean
  uniqueHash: String
}

input VoteUpdateManyDataInput {
  isUpvote: Boolean
  uniqueHash: String
}

input VoteUpdateManyMutationInput {
  isUpvote: Boolean
  uniqueHash: String
}

input VoteUpdateManyWithoutCreatedByInput {
  create: [VoteCreateWithoutCreatedByInput!]
  delete: [VoteWhereUniqueInput!]
  connect: [VoteWhereUniqueInput!]
  set: [VoteWhereUniqueInput!]
  disconnect: [VoteWhereUniqueInput!]
  update: [VoteUpdateWithWhereUniqueWithoutCreatedByInput!]
  upsert: [VoteUpsertWithWhereUniqueWithoutCreatedByInput!]
  deleteMany: [VoteScalarWhereInput!]
  updateMany: [VoteUpdateManyWithWhereNestedInput!]
}

input VoteUpdateManyWithoutVoteBucketInput {
  create: [VoteCreateWithoutVoteBucketInput!]
  delete: [VoteWhereUniqueInput!]
  connect: [VoteWhereUniqueInput!]
  set: [VoteWhereUniqueInput!]
  disconnect: [VoteWhereUniqueInput!]
  update: [VoteUpdateWithWhereUniqueWithoutVoteBucketInput!]
  upsert: [VoteUpsertWithWhereUniqueWithoutVoteBucketInput!]
  deleteMany: [VoteScalarWhereInput!]
  updateMany: [VoteUpdateManyWithWhereNestedInput!]
}

input VoteUpdateManyWithWhereNestedInput {
  where: VoteScalarWhereInput!
  data: VoteUpdateManyDataInput!
}

input VoteUpdateWithoutCreatedByDataInput {
  voteBucket: VoteBucketUpdateOneRequiredWithoutVotesInput
  isUpvote: Boolean
  uniqueHash: String
}

input VoteUpdateWithoutVoteBucketDataInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedVotesInput
  isUpvote: Boolean
  uniqueHash: String
}

input VoteUpdateWithWhereUniqueWithoutCreatedByInput {
  where: VoteWhereUniqueInput!
  data: VoteUpdateWithoutCreatedByDataInput!
}

input VoteUpdateWithWhereUniqueWithoutVoteBucketInput {
  where: VoteWhereUniqueInput!
  data: VoteUpdateWithoutVoteBucketDataInput!
}

input VoteUpsertWithWhereUniqueWithoutCreatedByInput {
  where: VoteWhereUniqueInput!
  update: VoteUpdateWithoutCreatedByDataInput!
  create: VoteCreateWithoutCreatedByInput!
}

input VoteUpsertWithWhereUniqueWithoutVoteBucketInput {
  where: VoteWhereUniqueInput!
  update: VoteUpdateWithoutVoteBucketDataInput!
  create: VoteCreateWithoutVoteBucketInput!
}

input VoteWhereInput {
  voteId: ID
  voteId_not: ID
  voteId_in: [ID!]
  voteId_not_in: [ID!]
  voteId_lt: ID
  voteId_lte: ID
  voteId_gt: ID
  voteId_gte: ID
  voteId_contains: ID
  voteId_not_contains: ID
  voteId_starts_with: ID
  voteId_not_starts_with: ID
  voteId_ends_with: ID
  voteId_not_ends_with: ID
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdBy: UserWhereInput
  voteBucket: VoteBucketWhereInput
  isUpvote: Boolean
  isUpvote_not: Boolean
  uniqueHash: String
  uniqueHash_not: String
  uniqueHash_in: [String!]
  uniqueHash_not_in: [String!]
  uniqueHash_lt: String
  uniqueHash_lte: String
  uniqueHash_gt: String
  uniqueHash_gte: String
  uniqueHash_contains: String
  uniqueHash_not_contains: String
  uniqueHash_starts_with: String
  uniqueHash_not_starts_with: String
  uniqueHash_ends_with: String
  uniqueHash_not_ends_with: String
  AND: [VoteWhereInput!]
  OR: [VoteWhereInput!]
  NOT: [VoteWhereInput!]
}

input VoteWhereUniqueInput {
  voteId: ID
  uniqueHash: String
}
`
      }
    