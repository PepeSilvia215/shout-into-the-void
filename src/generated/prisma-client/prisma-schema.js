module.exports = {
        typeDefs: // Code generated by Prisma (prisma@1.34.10). DO NOT EDIT.
  // Please don't change this file manually but run `prisma generate` to update it.
  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

/* GraphQL */ `type AggregateContent {
  count: Int!
}

type AggregateEchoEdge {
  count: Int!
}

type AggregateEchoInVoid {
  count: Int!
}

type AggregateNVoid {
  count: Int!
}

type AggregateReplyToEchoInVoid {
  count: Int!
}

type AggregateReplyToShoutInVoid {
  count: Int!
}

type AggregateSavedEcho {
  count: Int!
}

type AggregateSavedReplyToEchoInVoid {
  count: Int!
}

type AggregateSavedReplyToShoutInVoid {
  count: Int!
}

type AggregateSavedShout {
  count: Int!
}

type AggregateSavedVoid {
  count: Int!
}

type AggregateShoutInVoid {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  count: Long!
}

type Content {
  contentId: ID!
  createdAt: DateTime!
  createdBy: User!
  message: String!
  includeUsername: Boolean!
}

type ContentConnection {
  pageInfo: PageInfo!
  edges: [ContentEdge]!
  aggregate: AggregateContent!
}

input ContentCreateInput {
  contentId: ID
  createdBy: UserCreateOneInput!
  message: String!
  includeUsername: Boolean!
}

input ContentCreateOneInput {
  create: ContentCreateInput
  connect: ContentWhereUniqueInput
}

type ContentEdge {
  node: Content!
  cursor: String!
}

enum ContentOrderByInput {
  contentId_ASC
  contentId_DESC
  createdAt_ASC
  createdAt_DESC
  message_ASC
  message_DESC
  includeUsername_ASC
  includeUsername_DESC
}

type ContentPreviousValues {
  contentId: ID!
  createdAt: DateTime!
  message: String!
  includeUsername: Boolean!
}

type ContentSubscriptionPayload {
  mutation: MutationType!
  node: Content
  updatedFields: [String!]
  previousValues: ContentPreviousValues
}

input ContentSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ContentWhereInput
  AND: [ContentSubscriptionWhereInput!]
  OR: [ContentSubscriptionWhereInput!]
  NOT: [ContentSubscriptionWhereInput!]
}

input ContentUpdateDataInput {
  createdBy: UserUpdateOneRequiredInput
  message: String
  includeUsername: Boolean
}

input ContentUpdateInput {
  createdBy: UserUpdateOneRequiredInput
  message: String
  includeUsername: Boolean
}

input ContentUpdateManyMutationInput {
  message: String
  includeUsername: Boolean
}

input ContentUpdateOneRequiredInput {
  create: ContentCreateInput
  update: ContentUpdateDataInput
  upsert: ContentUpsertNestedInput
  connect: ContentWhereUniqueInput
}

input ContentUpsertNestedInput {
  update: ContentUpdateDataInput!
  create: ContentCreateInput!
}

input ContentWhereInput {
  contentId: ID
  contentId_not: ID
  contentId_in: [ID!]
  contentId_not_in: [ID!]
  contentId_lt: ID
  contentId_lte: ID
  contentId_gt: ID
  contentId_gte: ID
  contentId_contains: ID
  contentId_not_contains: ID
  contentId_starts_with: ID
  contentId_not_starts_with: ID
  contentId_ends_with: ID
  contentId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdBy: UserWhereInput
  message: String
  message_not: String
  message_in: [String!]
  message_not_in: [String!]
  message_lt: String
  message_lte: String
  message_gt: String
  message_gte: String
  message_contains: String
  message_not_contains: String
  message_starts_with: String
  message_not_starts_with: String
  message_ends_with: String
  message_not_ends_with: String
  includeUsername: Boolean
  includeUsername_not: Boolean
  AND: [ContentWhereInput!]
  OR: [ContentWhereInput!]
  NOT: [ContentWhereInput!]
}

input ContentWhereUniqueInput {
  contentId: ID
}

scalar DateTime

type EchoEdge {
  echoEdegId: ID!
  shoutInVoid: ShoutInVoid
  savedShout: SavedShout
  echoInVoid: EchoInVoid
}

type EchoEdgeConnection {
  pageInfo: PageInfo!
  edges: [EchoEdgeEdge]!
  aggregate: AggregateEchoEdge!
}

input EchoEdgeCreateInput {
  echoEdegId: ID
  shoutInVoid: ShoutInVoidCreateOneWithoutEchoEdgesInput
  savedShout: SavedShoutCreateOneWithoutEchoEdgesInput
  echoInVoid: EchoInVoidCreateOneWithoutEchoEdgeInput
}

input EchoEdgeCreateManyWithoutSavedShoutInput {
  create: [EchoEdgeCreateWithoutSavedShoutInput!]
  connect: [EchoEdgeWhereUniqueInput!]
}

input EchoEdgeCreateManyWithoutShoutInVoidInput {
  create: [EchoEdgeCreateWithoutShoutInVoidInput!]
  connect: [EchoEdgeWhereUniqueInput!]
}

input EchoEdgeCreateOneWithoutEchoInVoidInput {
  create: EchoEdgeCreateWithoutEchoInVoidInput
  connect: EchoEdgeWhereUniqueInput
}

input EchoEdgeCreateWithoutEchoInVoidInput {
  echoEdegId: ID
  shoutInVoid: ShoutInVoidCreateOneWithoutEchoEdgesInput
  savedShout: SavedShoutCreateOneWithoutEchoEdgesInput
}

input EchoEdgeCreateWithoutSavedShoutInput {
  echoEdegId: ID
  shoutInVoid: ShoutInVoidCreateOneWithoutEchoEdgesInput
  echoInVoid: EchoInVoidCreateOneWithoutEchoEdgeInput
}

input EchoEdgeCreateWithoutShoutInVoidInput {
  echoEdegId: ID
  savedShout: SavedShoutCreateOneWithoutEchoEdgesInput
  echoInVoid: EchoInVoidCreateOneWithoutEchoEdgeInput
}

type EchoEdgeEdge {
  node: EchoEdge!
  cursor: String!
}

enum EchoEdgeOrderByInput {
  echoEdegId_ASC
  echoEdegId_DESC
}

type EchoEdgePreviousValues {
  echoEdegId: ID!
}

input EchoEdgeScalarWhereInput {
  echoEdegId: ID
  echoEdegId_not: ID
  echoEdegId_in: [ID!]
  echoEdegId_not_in: [ID!]
  echoEdegId_lt: ID
  echoEdegId_lte: ID
  echoEdegId_gt: ID
  echoEdegId_gte: ID
  echoEdegId_contains: ID
  echoEdegId_not_contains: ID
  echoEdegId_starts_with: ID
  echoEdegId_not_starts_with: ID
  echoEdegId_ends_with: ID
  echoEdegId_not_ends_with: ID
  AND: [EchoEdgeScalarWhereInput!]
  OR: [EchoEdgeScalarWhereInput!]
  NOT: [EchoEdgeScalarWhereInput!]
}

type EchoEdgeSubscriptionPayload {
  mutation: MutationType!
  node: EchoEdge
  updatedFields: [String!]
  previousValues: EchoEdgePreviousValues
}

input EchoEdgeSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: EchoEdgeWhereInput
  AND: [EchoEdgeSubscriptionWhereInput!]
  OR: [EchoEdgeSubscriptionWhereInput!]
  NOT: [EchoEdgeSubscriptionWhereInput!]
}

input EchoEdgeUpdateInput {
  shoutInVoid: ShoutInVoidUpdateOneWithoutEchoEdgesInput
  savedShout: SavedShoutUpdateOneWithoutEchoEdgesInput
  echoInVoid: EchoInVoidUpdateOneWithoutEchoEdgeInput
}

input EchoEdgeUpdateManyWithoutSavedShoutInput {
  create: [EchoEdgeCreateWithoutSavedShoutInput!]
  delete: [EchoEdgeWhereUniqueInput!]
  connect: [EchoEdgeWhereUniqueInput!]
  set: [EchoEdgeWhereUniqueInput!]
  disconnect: [EchoEdgeWhereUniqueInput!]
  update: [EchoEdgeUpdateWithWhereUniqueWithoutSavedShoutInput!]
  upsert: [EchoEdgeUpsertWithWhereUniqueWithoutSavedShoutInput!]
  deleteMany: [EchoEdgeScalarWhereInput!]
}

input EchoEdgeUpdateManyWithoutShoutInVoidInput {
  create: [EchoEdgeCreateWithoutShoutInVoidInput!]
  delete: [EchoEdgeWhereUniqueInput!]
  connect: [EchoEdgeWhereUniqueInput!]
  set: [EchoEdgeWhereUniqueInput!]
  disconnect: [EchoEdgeWhereUniqueInput!]
  update: [EchoEdgeUpdateWithWhereUniqueWithoutShoutInVoidInput!]
  upsert: [EchoEdgeUpsertWithWhereUniqueWithoutShoutInVoidInput!]
  deleteMany: [EchoEdgeScalarWhereInput!]
}

input EchoEdgeUpdateOneWithoutEchoInVoidInput {
  create: EchoEdgeCreateWithoutEchoInVoidInput
  update: EchoEdgeUpdateWithoutEchoInVoidDataInput
  upsert: EchoEdgeUpsertWithoutEchoInVoidInput
  delete: Boolean
  disconnect: Boolean
  connect: EchoEdgeWhereUniqueInput
}

input EchoEdgeUpdateWithoutEchoInVoidDataInput {
  shoutInVoid: ShoutInVoidUpdateOneWithoutEchoEdgesInput
  savedShout: SavedShoutUpdateOneWithoutEchoEdgesInput
}

input EchoEdgeUpdateWithoutSavedShoutDataInput {
  shoutInVoid: ShoutInVoidUpdateOneWithoutEchoEdgesInput
  echoInVoid: EchoInVoidUpdateOneWithoutEchoEdgeInput
}

input EchoEdgeUpdateWithoutShoutInVoidDataInput {
  savedShout: SavedShoutUpdateOneWithoutEchoEdgesInput
  echoInVoid: EchoInVoidUpdateOneWithoutEchoEdgeInput
}

input EchoEdgeUpdateWithWhereUniqueWithoutSavedShoutInput {
  where: EchoEdgeWhereUniqueInput!
  data: EchoEdgeUpdateWithoutSavedShoutDataInput!
}

input EchoEdgeUpdateWithWhereUniqueWithoutShoutInVoidInput {
  where: EchoEdgeWhereUniqueInput!
  data: EchoEdgeUpdateWithoutShoutInVoidDataInput!
}

input EchoEdgeUpsertWithoutEchoInVoidInput {
  update: EchoEdgeUpdateWithoutEchoInVoidDataInput!
  create: EchoEdgeCreateWithoutEchoInVoidInput!
}

input EchoEdgeUpsertWithWhereUniqueWithoutSavedShoutInput {
  where: EchoEdgeWhereUniqueInput!
  update: EchoEdgeUpdateWithoutSavedShoutDataInput!
  create: EchoEdgeCreateWithoutSavedShoutInput!
}

input EchoEdgeUpsertWithWhereUniqueWithoutShoutInVoidInput {
  where: EchoEdgeWhereUniqueInput!
  update: EchoEdgeUpdateWithoutShoutInVoidDataInput!
  create: EchoEdgeCreateWithoutShoutInVoidInput!
}

input EchoEdgeWhereInput {
  echoEdegId: ID
  echoEdegId_not: ID
  echoEdegId_in: [ID!]
  echoEdegId_not_in: [ID!]
  echoEdegId_lt: ID
  echoEdegId_lte: ID
  echoEdegId_gt: ID
  echoEdegId_gte: ID
  echoEdegId_contains: ID
  echoEdegId_not_contains: ID
  echoEdegId_starts_with: ID
  echoEdegId_not_starts_with: ID
  echoEdegId_ends_with: ID
  echoEdegId_not_ends_with: ID
  shoutInVoid: ShoutInVoidWhereInput
  savedShout: SavedShoutWhereInput
  echoInVoid: EchoInVoidWhereInput
  AND: [EchoEdgeWhereInput!]
  OR: [EchoEdgeWhereInput!]
  NOT: [EchoEdgeWhereInput!]
}

input EchoEdgeWhereUniqueInput {
  echoEdegId: ID
}

type EchoInVoid {
  echoInVoidId: ID!
  createdAt: DateTime!
  echoedBy: User!
  originalContent: Content!
  voteCount: Int!
  originalShoutVoidGeohash: String!
  nvoid: NVoid!
  savedEchos(where: SavedEchoWhereInput, orderBy: SavedEchoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SavedEcho!]
  replies(where: ReplyToEchoInVoidWhereInput, orderBy: ReplyToEchoInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ReplyToEchoInVoid!]
  echoEdge: EchoEdge
}

type EchoInVoidConnection {
  pageInfo: PageInfo!
  edges: [EchoInVoidEdge]!
  aggregate: AggregateEchoInVoid!
}

input EchoInVoidCreateInput {
  echoInVoidId: ID
  echoedBy: UserCreateOneWithoutEchosInVoidsInput!
  originalContent: ContentCreateOneInput!
  voteCount: Int!
  originalShoutVoidGeohash: String!
  nvoid: NVoidCreateOneWithoutEchosInput!
  savedEchos: SavedEchoCreateManyWithoutEchoInVoidInput
  replies: ReplyToEchoInVoidCreateManyWithoutEchoInVoidInput
  echoEdge: EchoEdgeCreateOneWithoutEchoInVoidInput
}

input EchoInVoidCreateManyWithoutEchoedByInput {
  create: [EchoInVoidCreateWithoutEchoedByInput!]
  connect: [EchoInVoidWhereUniqueInput!]
}

input EchoInVoidCreateManyWithoutNvoidInput {
  create: [EchoInVoidCreateWithoutNvoidInput!]
  connect: [EchoInVoidWhereUniqueInput!]
}

input EchoInVoidCreateOneWithoutEchoEdgeInput {
  create: EchoInVoidCreateWithoutEchoEdgeInput
  connect: EchoInVoidWhereUniqueInput
}

input EchoInVoidCreateOneWithoutRepliesInput {
  create: EchoInVoidCreateWithoutRepliesInput
  connect: EchoInVoidWhereUniqueInput
}

input EchoInVoidCreateOneWithoutSavedEchosInput {
  create: EchoInVoidCreateWithoutSavedEchosInput
  connect: EchoInVoidWhereUniqueInput
}

input EchoInVoidCreateWithoutEchoedByInput {
  echoInVoidId: ID
  originalContent: ContentCreateOneInput!
  voteCount: Int!
  originalShoutVoidGeohash: String!
  nvoid: NVoidCreateOneWithoutEchosInput!
  savedEchos: SavedEchoCreateManyWithoutEchoInVoidInput
  replies: ReplyToEchoInVoidCreateManyWithoutEchoInVoidInput
  echoEdge: EchoEdgeCreateOneWithoutEchoInVoidInput
}

input EchoInVoidCreateWithoutEchoEdgeInput {
  echoInVoidId: ID
  echoedBy: UserCreateOneWithoutEchosInVoidsInput!
  originalContent: ContentCreateOneInput!
  voteCount: Int!
  originalShoutVoidGeohash: String!
  nvoid: NVoidCreateOneWithoutEchosInput!
  savedEchos: SavedEchoCreateManyWithoutEchoInVoidInput
  replies: ReplyToEchoInVoidCreateManyWithoutEchoInVoidInput
}

input EchoInVoidCreateWithoutNvoidInput {
  echoInVoidId: ID
  echoedBy: UserCreateOneWithoutEchosInVoidsInput!
  originalContent: ContentCreateOneInput!
  voteCount: Int!
  originalShoutVoidGeohash: String!
  savedEchos: SavedEchoCreateManyWithoutEchoInVoidInput
  replies: ReplyToEchoInVoidCreateManyWithoutEchoInVoidInput
  echoEdge: EchoEdgeCreateOneWithoutEchoInVoidInput
}

input EchoInVoidCreateWithoutRepliesInput {
  echoInVoidId: ID
  echoedBy: UserCreateOneWithoutEchosInVoidsInput!
  originalContent: ContentCreateOneInput!
  voteCount: Int!
  originalShoutVoidGeohash: String!
  nvoid: NVoidCreateOneWithoutEchosInput!
  savedEchos: SavedEchoCreateManyWithoutEchoInVoidInput
  echoEdge: EchoEdgeCreateOneWithoutEchoInVoidInput
}

input EchoInVoidCreateWithoutSavedEchosInput {
  echoInVoidId: ID
  echoedBy: UserCreateOneWithoutEchosInVoidsInput!
  originalContent: ContentCreateOneInput!
  voteCount: Int!
  originalShoutVoidGeohash: String!
  nvoid: NVoidCreateOneWithoutEchosInput!
  replies: ReplyToEchoInVoidCreateManyWithoutEchoInVoidInput
  echoEdge: EchoEdgeCreateOneWithoutEchoInVoidInput
}

type EchoInVoidEdge {
  node: EchoInVoid!
  cursor: String!
}

enum EchoInVoidOrderByInput {
  echoInVoidId_ASC
  echoInVoidId_DESC
  createdAt_ASC
  createdAt_DESC
  voteCount_ASC
  voteCount_DESC
  originalShoutVoidGeohash_ASC
  originalShoutVoidGeohash_DESC
}

type EchoInVoidPreviousValues {
  echoInVoidId: ID!
  createdAt: DateTime!
  voteCount: Int!
  originalShoutVoidGeohash: String!
}

input EchoInVoidScalarWhereInput {
  echoInVoidId: ID
  echoInVoidId_not: ID
  echoInVoidId_in: [ID!]
  echoInVoidId_not_in: [ID!]
  echoInVoidId_lt: ID
  echoInVoidId_lte: ID
  echoInVoidId_gt: ID
  echoInVoidId_gte: ID
  echoInVoidId_contains: ID
  echoInVoidId_not_contains: ID
  echoInVoidId_starts_with: ID
  echoInVoidId_not_starts_with: ID
  echoInVoidId_ends_with: ID
  echoInVoidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  voteCount: Int
  voteCount_not: Int
  voteCount_in: [Int!]
  voteCount_not_in: [Int!]
  voteCount_lt: Int
  voteCount_lte: Int
  voteCount_gt: Int
  voteCount_gte: Int
  originalShoutVoidGeohash: String
  originalShoutVoidGeohash_not: String
  originalShoutVoidGeohash_in: [String!]
  originalShoutVoidGeohash_not_in: [String!]
  originalShoutVoidGeohash_lt: String
  originalShoutVoidGeohash_lte: String
  originalShoutVoidGeohash_gt: String
  originalShoutVoidGeohash_gte: String
  originalShoutVoidGeohash_contains: String
  originalShoutVoidGeohash_not_contains: String
  originalShoutVoidGeohash_starts_with: String
  originalShoutVoidGeohash_not_starts_with: String
  originalShoutVoidGeohash_ends_with: String
  originalShoutVoidGeohash_not_ends_with: String
  AND: [EchoInVoidScalarWhereInput!]
  OR: [EchoInVoidScalarWhereInput!]
  NOT: [EchoInVoidScalarWhereInput!]
}

type EchoInVoidSubscriptionPayload {
  mutation: MutationType!
  node: EchoInVoid
  updatedFields: [String!]
  previousValues: EchoInVoidPreviousValues
}

input EchoInVoidSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: EchoInVoidWhereInput
  AND: [EchoInVoidSubscriptionWhereInput!]
  OR: [EchoInVoidSubscriptionWhereInput!]
  NOT: [EchoInVoidSubscriptionWhereInput!]
}

input EchoInVoidUpdateInput {
  echoedBy: UserUpdateOneRequiredWithoutEchosInVoidsInput
  originalContent: ContentUpdateOneRequiredInput
  voteCount: Int
  originalShoutVoidGeohash: String
  nvoid: NVoidUpdateOneRequiredWithoutEchosInput
  savedEchos: SavedEchoUpdateManyWithoutEchoInVoidInput
  replies: ReplyToEchoInVoidUpdateManyWithoutEchoInVoidInput
  echoEdge: EchoEdgeUpdateOneWithoutEchoInVoidInput
}

input EchoInVoidUpdateManyDataInput {
  voteCount: Int
  originalShoutVoidGeohash: String
}

input EchoInVoidUpdateManyMutationInput {
  voteCount: Int
  originalShoutVoidGeohash: String
}

input EchoInVoidUpdateManyWithoutEchoedByInput {
  create: [EchoInVoidCreateWithoutEchoedByInput!]
  delete: [EchoInVoidWhereUniqueInput!]
  connect: [EchoInVoidWhereUniqueInput!]
  set: [EchoInVoidWhereUniqueInput!]
  disconnect: [EchoInVoidWhereUniqueInput!]
  update: [EchoInVoidUpdateWithWhereUniqueWithoutEchoedByInput!]
  upsert: [EchoInVoidUpsertWithWhereUniqueWithoutEchoedByInput!]
  deleteMany: [EchoInVoidScalarWhereInput!]
  updateMany: [EchoInVoidUpdateManyWithWhereNestedInput!]
}

input EchoInVoidUpdateManyWithoutNvoidInput {
  create: [EchoInVoidCreateWithoutNvoidInput!]
  delete: [EchoInVoidWhereUniqueInput!]
  connect: [EchoInVoidWhereUniqueInput!]
  set: [EchoInVoidWhereUniqueInput!]
  disconnect: [EchoInVoidWhereUniqueInput!]
  update: [EchoInVoidUpdateWithWhereUniqueWithoutNvoidInput!]
  upsert: [EchoInVoidUpsertWithWhereUniqueWithoutNvoidInput!]
  deleteMany: [EchoInVoidScalarWhereInput!]
  updateMany: [EchoInVoidUpdateManyWithWhereNestedInput!]
}

input EchoInVoidUpdateManyWithWhereNestedInput {
  where: EchoInVoidScalarWhereInput!
  data: EchoInVoidUpdateManyDataInput!
}

input EchoInVoidUpdateOneRequiredWithoutRepliesInput {
  create: EchoInVoidCreateWithoutRepliesInput
  update: EchoInVoidUpdateWithoutRepliesDataInput
  upsert: EchoInVoidUpsertWithoutRepliesInput
  connect: EchoInVoidWhereUniqueInput
}

input EchoInVoidUpdateOneRequiredWithoutSavedEchosInput {
  create: EchoInVoidCreateWithoutSavedEchosInput
  update: EchoInVoidUpdateWithoutSavedEchosDataInput
  upsert: EchoInVoidUpsertWithoutSavedEchosInput
  connect: EchoInVoidWhereUniqueInput
}

input EchoInVoidUpdateOneWithoutEchoEdgeInput {
  create: EchoInVoidCreateWithoutEchoEdgeInput
  update: EchoInVoidUpdateWithoutEchoEdgeDataInput
  upsert: EchoInVoidUpsertWithoutEchoEdgeInput
  delete: Boolean
  disconnect: Boolean
  connect: EchoInVoidWhereUniqueInput
}

input EchoInVoidUpdateWithoutEchoedByDataInput {
  originalContent: ContentUpdateOneRequiredInput
  voteCount: Int
  originalShoutVoidGeohash: String
  nvoid: NVoidUpdateOneRequiredWithoutEchosInput
  savedEchos: SavedEchoUpdateManyWithoutEchoInVoidInput
  replies: ReplyToEchoInVoidUpdateManyWithoutEchoInVoidInput
  echoEdge: EchoEdgeUpdateOneWithoutEchoInVoidInput
}

input EchoInVoidUpdateWithoutEchoEdgeDataInput {
  echoedBy: UserUpdateOneRequiredWithoutEchosInVoidsInput
  originalContent: ContentUpdateOneRequiredInput
  voteCount: Int
  originalShoutVoidGeohash: String
  nvoid: NVoidUpdateOneRequiredWithoutEchosInput
  savedEchos: SavedEchoUpdateManyWithoutEchoInVoidInput
  replies: ReplyToEchoInVoidUpdateManyWithoutEchoInVoidInput
}

input EchoInVoidUpdateWithoutNvoidDataInput {
  echoedBy: UserUpdateOneRequiredWithoutEchosInVoidsInput
  originalContent: ContentUpdateOneRequiredInput
  voteCount: Int
  originalShoutVoidGeohash: String
  savedEchos: SavedEchoUpdateManyWithoutEchoInVoidInput
  replies: ReplyToEchoInVoidUpdateManyWithoutEchoInVoidInput
  echoEdge: EchoEdgeUpdateOneWithoutEchoInVoidInput
}

input EchoInVoidUpdateWithoutRepliesDataInput {
  echoedBy: UserUpdateOneRequiredWithoutEchosInVoidsInput
  originalContent: ContentUpdateOneRequiredInput
  voteCount: Int
  originalShoutVoidGeohash: String
  nvoid: NVoidUpdateOneRequiredWithoutEchosInput
  savedEchos: SavedEchoUpdateManyWithoutEchoInVoidInput
  echoEdge: EchoEdgeUpdateOneWithoutEchoInVoidInput
}

input EchoInVoidUpdateWithoutSavedEchosDataInput {
  echoedBy: UserUpdateOneRequiredWithoutEchosInVoidsInput
  originalContent: ContentUpdateOneRequiredInput
  voteCount: Int
  originalShoutVoidGeohash: String
  nvoid: NVoidUpdateOneRequiredWithoutEchosInput
  replies: ReplyToEchoInVoidUpdateManyWithoutEchoInVoidInput
  echoEdge: EchoEdgeUpdateOneWithoutEchoInVoidInput
}

input EchoInVoidUpdateWithWhereUniqueWithoutEchoedByInput {
  where: EchoInVoidWhereUniqueInput!
  data: EchoInVoidUpdateWithoutEchoedByDataInput!
}

input EchoInVoidUpdateWithWhereUniqueWithoutNvoidInput {
  where: EchoInVoidWhereUniqueInput!
  data: EchoInVoidUpdateWithoutNvoidDataInput!
}

input EchoInVoidUpsertWithoutEchoEdgeInput {
  update: EchoInVoidUpdateWithoutEchoEdgeDataInput!
  create: EchoInVoidCreateWithoutEchoEdgeInput!
}

input EchoInVoidUpsertWithoutRepliesInput {
  update: EchoInVoidUpdateWithoutRepliesDataInput!
  create: EchoInVoidCreateWithoutRepliesInput!
}

input EchoInVoidUpsertWithoutSavedEchosInput {
  update: EchoInVoidUpdateWithoutSavedEchosDataInput!
  create: EchoInVoidCreateWithoutSavedEchosInput!
}

input EchoInVoidUpsertWithWhereUniqueWithoutEchoedByInput {
  where: EchoInVoidWhereUniqueInput!
  update: EchoInVoidUpdateWithoutEchoedByDataInput!
  create: EchoInVoidCreateWithoutEchoedByInput!
}

input EchoInVoidUpsertWithWhereUniqueWithoutNvoidInput {
  where: EchoInVoidWhereUniqueInput!
  update: EchoInVoidUpdateWithoutNvoidDataInput!
  create: EchoInVoidCreateWithoutNvoidInput!
}

input EchoInVoidWhereInput {
  echoInVoidId: ID
  echoInVoidId_not: ID
  echoInVoidId_in: [ID!]
  echoInVoidId_not_in: [ID!]
  echoInVoidId_lt: ID
  echoInVoidId_lte: ID
  echoInVoidId_gt: ID
  echoInVoidId_gte: ID
  echoInVoidId_contains: ID
  echoInVoidId_not_contains: ID
  echoInVoidId_starts_with: ID
  echoInVoidId_not_starts_with: ID
  echoInVoidId_ends_with: ID
  echoInVoidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  echoedBy: UserWhereInput
  originalContent: ContentWhereInput
  voteCount: Int
  voteCount_not: Int
  voteCount_in: [Int!]
  voteCount_not_in: [Int!]
  voteCount_lt: Int
  voteCount_lte: Int
  voteCount_gt: Int
  voteCount_gte: Int
  originalShoutVoidGeohash: String
  originalShoutVoidGeohash_not: String
  originalShoutVoidGeohash_in: [String!]
  originalShoutVoidGeohash_not_in: [String!]
  originalShoutVoidGeohash_lt: String
  originalShoutVoidGeohash_lte: String
  originalShoutVoidGeohash_gt: String
  originalShoutVoidGeohash_gte: String
  originalShoutVoidGeohash_contains: String
  originalShoutVoidGeohash_not_contains: String
  originalShoutVoidGeohash_starts_with: String
  originalShoutVoidGeohash_not_starts_with: String
  originalShoutVoidGeohash_ends_with: String
  originalShoutVoidGeohash_not_ends_with: String
  nvoid: NVoidWhereInput
  savedEchos_every: SavedEchoWhereInput
  savedEchos_some: SavedEchoWhereInput
  savedEchos_none: SavedEchoWhereInput
  replies_every: ReplyToEchoInVoidWhereInput
  replies_some: ReplyToEchoInVoidWhereInput
  replies_none: ReplyToEchoInVoidWhereInput
  echoEdge: EchoEdgeWhereInput
  AND: [EchoInVoidWhereInput!]
  OR: [EchoInVoidWhereInput!]
  NOT: [EchoInVoidWhereInput!]
}

input EchoInVoidWhereUniqueInput {
  echoInVoidId: ID
}

scalar Long

type Mutation {
  createContent(data: ContentCreateInput!): Content!
  updateContent(data: ContentUpdateInput!, where: ContentWhereUniqueInput!): Content
  updateManyContents(data: ContentUpdateManyMutationInput!, where: ContentWhereInput): BatchPayload!
  upsertContent(where: ContentWhereUniqueInput!, create: ContentCreateInput!, update: ContentUpdateInput!): Content!
  deleteContent(where: ContentWhereUniqueInput!): Content
  deleteManyContents(where: ContentWhereInput): BatchPayload!
  createEchoEdge(data: EchoEdgeCreateInput!): EchoEdge!
  updateEchoEdge(data: EchoEdgeUpdateInput!, where: EchoEdgeWhereUniqueInput!): EchoEdge
  upsertEchoEdge(where: EchoEdgeWhereUniqueInput!, create: EchoEdgeCreateInput!, update: EchoEdgeUpdateInput!): EchoEdge!
  deleteEchoEdge(where: EchoEdgeWhereUniqueInput!): EchoEdge
  deleteManyEchoEdges(where: EchoEdgeWhereInput): BatchPayload!
  createEchoInVoid(data: EchoInVoidCreateInput!): EchoInVoid!
  updateEchoInVoid(data: EchoInVoidUpdateInput!, where: EchoInVoidWhereUniqueInput!): EchoInVoid
  updateManyEchoInVoids(data: EchoInVoidUpdateManyMutationInput!, where: EchoInVoidWhereInput): BatchPayload!
  upsertEchoInVoid(where: EchoInVoidWhereUniqueInput!, create: EchoInVoidCreateInput!, update: EchoInVoidUpdateInput!): EchoInVoid!
  deleteEchoInVoid(where: EchoInVoidWhereUniqueInput!): EchoInVoid
  deleteManyEchoInVoids(where: EchoInVoidWhereInput): BatchPayload!
  createNVoid(data: NVoidCreateInput!): NVoid!
  updateNVoid(data: NVoidUpdateInput!, where: NVoidWhereUniqueInput!): NVoid
  updateManyNVoids(data: NVoidUpdateManyMutationInput!, where: NVoidWhereInput): BatchPayload!
  upsertNVoid(where: NVoidWhereUniqueInput!, create: NVoidCreateInput!, update: NVoidUpdateInput!): NVoid!
  deleteNVoid(where: NVoidWhereUniqueInput!): NVoid
  deleteManyNVoids(where: NVoidWhereInput): BatchPayload!
  createReplyToEchoInVoid(data: ReplyToEchoInVoidCreateInput!): ReplyToEchoInVoid!
  updateReplyToEchoInVoid(data: ReplyToEchoInVoidUpdateInput!, where: ReplyToEchoInVoidWhereUniqueInput!): ReplyToEchoInVoid
  updateManyReplyToEchoInVoids(data: ReplyToEchoInVoidUpdateManyMutationInput!, where: ReplyToEchoInVoidWhereInput): BatchPayload!
  upsertReplyToEchoInVoid(where: ReplyToEchoInVoidWhereUniqueInput!, create: ReplyToEchoInVoidCreateInput!, update: ReplyToEchoInVoidUpdateInput!): ReplyToEchoInVoid!
  deleteReplyToEchoInVoid(where: ReplyToEchoInVoidWhereUniqueInput!): ReplyToEchoInVoid
  deleteManyReplyToEchoInVoids(where: ReplyToEchoInVoidWhereInput): BatchPayload!
  createReplyToShoutInVoid(data: ReplyToShoutInVoidCreateInput!): ReplyToShoutInVoid!
  updateReplyToShoutInVoid(data: ReplyToShoutInVoidUpdateInput!, where: ReplyToShoutInVoidWhereUniqueInput!): ReplyToShoutInVoid
  updateManyReplyToShoutInVoids(data: ReplyToShoutInVoidUpdateManyMutationInput!, where: ReplyToShoutInVoidWhereInput): BatchPayload!
  upsertReplyToShoutInVoid(where: ReplyToShoutInVoidWhereUniqueInput!, create: ReplyToShoutInVoidCreateInput!, update: ReplyToShoutInVoidUpdateInput!): ReplyToShoutInVoid!
  deleteReplyToShoutInVoid(where: ReplyToShoutInVoidWhereUniqueInput!): ReplyToShoutInVoid
  deleteManyReplyToShoutInVoids(where: ReplyToShoutInVoidWhereInput): BatchPayload!
  createSavedEcho(data: SavedEchoCreateInput!): SavedEcho!
  updateSavedEcho(data: SavedEchoUpdateInput!, where: SavedEchoWhereUniqueInput!): SavedEcho
  updateManySavedEchoes(data: SavedEchoUpdateManyMutationInput!, where: SavedEchoWhereInput): BatchPayload!
  upsertSavedEcho(where: SavedEchoWhereUniqueInput!, create: SavedEchoCreateInput!, update: SavedEchoUpdateInput!): SavedEcho!
  deleteSavedEcho(where: SavedEchoWhereUniqueInput!): SavedEcho
  deleteManySavedEchoes(where: SavedEchoWhereInput): BatchPayload!
  createSavedReplyToEchoInVoid(data: SavedReplyToEchoInVoidCreateInput!): SavedReplyToEchoInVoid!
  updateSavedReplyToEchoInVoid(data: SavedReplyToEchoInVoidUpdateInput!, where: SavedReplyToEchoInVoidWhereUniqueInput!): SavedReplyToEchoInVoid
  updateManySavedReplyToEchoInVoids(data: SavedReplyToEchoInVoidUpdateManyMutationInput!, where: SavedReplyToEchoInVoidWhereInput): BatchPayload!
  upsertSavedReplyToEchoInVoid(where: SavedReplyToEchoInVoidWhereUniqueInput!, create: SavedReplyToEchoInVoidCreateInput!, update: SavedReplyToEchoInVoidUpdateInput!): SavedReplyToEchoInVoid!
  deleteSavedReplyToEchoInVoid(where: SavedReplyToEchoInVoidWhereUniqueInput!): SavedReplyToEchoInVoid
  deleteManySavedReplyToEchoInVoids(where: SavedReplyToEchoInVoidWhereInput): BatchPayload!
  createSavedReplyToShoutInVoid(data: SavedReplyToShoutInVoidCreateInput!): SavedReplyToShoutInVoid!
  updateSavedReplyToShoutInVoid(data: SavedReplyToShoutInVoidUpdateInput!, where: SavedReplyToShoutInVoidWhereUniqueInput!): SavedReplyToShoutInVoid
  updateManySavedReplyToShoutInVoids(data: SavedReplyToShoutInVoidUpdateManyMutationInput!, where: SavedReplyToShoutInVoidWhereInput): BatchPayload!
  upsertSavedReplyToShoutInVoid(where: SavedReplyToShoutInVoidWhereUniqueInput!, create: SavedReplyToShoutInVoidCreateInput!, update: SavedReplyToShoutInVoidUpdateInput!): SavedReplyToShoutInVoid!
  deleteSavedReplyToShoutInVoid(where: SavedReplyToShoutInVoidWhereUniqueInput!): SavedReplyToShoutInVoid
  deleteManySavedReplyToShoutInVoids(where: SavedReplyToShoutInVoidWhereInput): BatchPayload!
  createSavedShout(data: SavedShoutCreateInput!): SavedShout!
  updateSavedShout(data: SavedShoutUpdateInput!, where: SavedShoutWhereUniqueInput!): SavedShout
  updateManySavedShouts(data: SavedShoutUpdateManyMutationInput!, where: SavedShoutWhereInput): BatchPayload!
  upsertSavedShout(where: SavedShoutWhereUniqueInput!, create: SavedShoutCreateInput!, update: SavedShoutUpdateInput!): SavedShout!
  deleteSavedShout(where: SavedShoutWhereUniqueInput!): SavedShout
  deleteManySavedShouts(where: SavedShoutWhereInput): BatchPayload!
  createSavedVoid(data: SavedVoidCreateInput!): SavedVoid!
  updateSavedVoid(data: SavedVoidUpdateInput!, where: SavedVoidWhereUniqueInput!): SavedVoid
  updateManySavedVoids(data: SavedVoidUpdateManyMutationInput!, where: SavedVoidWhereInput): BatchPayload!
  upsertSavedVoid(where: SavedVoidWhereUniqueInput!, create: SavedVoidCreateInput!, update: SavedVoidUpdateInput!): SavedVoid!
  deleteSavedVoid(where: SavedVoidWhereUniqueInput!): SavedVoid
  deleteManySavedVoids(where: SavedVoidWhereInput): BatchPayload!
  createShoutInVoid(data: ShoutInVoidCreateInput!): ShoutInVoid!
  updateShoutInVoid(data: ShoutInVoidUpdateInput!, where: ShoutInVoidWhereUniqueInput!): ShoutInVoid
  updateManyShoutInVoids(data: ShoutInVoidUpdateManyMutationInput!, where: ShoutInVoidWhereInput): BatchPayload!
  upsertShoutInVoid(where: ShoutInVoidWhereUniqueInput!, create: ShoutInVoidCreateInput!, update: ShoutInVoidUpdateInput!): ShoutInVoid!
  deleteShoutInVoid(where: ShoutInVoidWhereUniqueInput!): ShoutInVoid
  deleteManyShoutInVoids(where: ShoutInVoidWhereInput): BatchPayload!
  createUser(data: UserCreateInput!): User!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  deleteUser(where: UserWhereUniqueInput!): User
  deleteManyUsers(where: UserWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type NVoid {
  voidId: ID!
  createdAt: DateTime!
  createdBy: User!
  voidGeohash: String!
  shouts(where: ShoutInVoidWhereInput, orderBy: ShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ShoutInVoid!]
  echos(where: EchoInVoidWhereInput, orderBy: EchoInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [EchoInVoid!]
}

type NVoidConnection {
  pageInfo: PageInfo!
  edges: [NVoidEdge]!
  aggregate: AggregateNVoid!
}

input NVoidCreateInput {
  voidId: ID
  createdBy: UserCreateOneWithoutCreatedVoidsInput!
  voidGeohash: String!
  shouts: ShoutInVoidCreateManyWithoutNvoidInput
  echos: EchoInVoidCreateManyWithoutNvoidInput
}

input NVoidCreateManyWithoutCreatedByInput {
  create: [NVoidCreateWithoutCreatedByInput!]
  connect: [NVoidWhereUniqueInput!]
}

input NVoidCreateOneWithoutEchosInput {
  create: NVoidCreateWithoutEchosInput
  connect: NVoidWhereUniqueInput
}

input NVoidCreateOneWithoutShoutsInput {
  create: NVoidCreateWithoutShoutsInput
  connect: NVoidWhereUniqueInput
}

input NVoidCreateWithoutCreatedByInput {
  voidId: ID
  voidGeohash: String!
  shouts: ShoutInVoidCreateManyWithoutNvoidInput
  echos: EchoInVoidCreateManyWithoutNvoidInput
}

input NVoidCreateWithoutEchosInput {
  voidId: ID
  createdBy: UserCreateOneWithoutCreatedVoidsInput!
  voidGeohash: String!
  shouts: ShoutInVoidCreateManyWithoutNvoidInput
}

input NVoidCreateWithoutShoutsInput {
  voidId: ID
  createdBy: UserCreateOneWithoutCreatedVoidsInput!
  voidGeohash: String!
  echos: EchoInVoidCreateManyWithoutNvoidInput
}

type NVoidEdge {
  node: NVoid!
  cursor: String!
}

enum NVoidOrderByInput {
  voidId_ASC
  voidId_DESC
  createdAt_ASC
  createdAt_DESC
  voidGeohash_ASC
  voidGeohash_DESC
}

type NVoidPreviousValues {
  voidId: ID!
  createdAt: DateTime!
  voidGeohash: String!
}

input NVoidScalarWhereInput {
  voidId: ID
  voidId_not: ID
  voidId_in: [ID!]
  voidId_not_in: [ID!]
  voidId_lt: ID
  voidId_lte: ID
  voidId_gt: ID
  voidId_gte: ID
  voidId_contains: ID
  voidId_not_contains: ID
  voidId_starts_with: ID
  voidId_not_starts_with: ID
  voidId_ends_with: ID
  voidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  voidGeohash: String
  voidGeohash_not: String
  voidGeohash_in: [String!]
  voidGeohash_not_in: [String!]
  voidGeohash_lt: String
  voidGeohash_lte: String
  voidGeohash_gt: String
  voidGeohash_gte: String
  voidGeohash_contains: String
  voidGeohash_not_contains: String
  voidGeohash_starts_with: String
  voidGeohash_not_starts_with: String
  voidGeohash_ends_with: String
  voidGeohash_not_ends_with: String
  AND: [NVoidScalarWhereInput!]
  OR: [NVoidScalarWhereInput!]
  NOT: [NVoidScalarWhereInput!]
}

type NVoidSubscriptionPayload {
  mutation: MutationType!
  node: NVoid
  updatedFields: [String!]
  previousValues: NVoidPreviousValues
}

input NVoidSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: NVoidWhereInput
  AND: [NVoidSubscriptionWhereInput!]
  OR: [NVoidSubscriptionWhereInput!]
  NOT: [NVoidSubscriptionWhereInput!]
}

input NVoidUpdateInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedVoidsInput
  voidGeohash: String
  shouts: ShoutInVoidUpdateManyWithoutNvoidInput
  echos: EchoInVoidUpdateManyWithoutNvoidInput
}

input NVoidUpdateManyDataInput {
  voidGeohash: String
}

input NVoidUpdateManyMutationInput {
  voidGeohash: String
}

input NVoidUpdateManyWithoutCreatedByInput {
  create: [NVoidCreateWithoutCreatedByInput!]
  delete: [NVoidWhereUniqueInput!]
  connect: [NVoidWhereUniqueInput!]
  set: [NVoidWhereUniqueInput!]
  disconnect: [NVoidWhereUniqueInput!]
  update: [NVoidUpdateWithWhereUniqueWithoutCreatedByInput!]
  upsert: [NVoidUpsertWithWhereUniqueWithoutCreatedByInput!]
  deleteMany: [NVoidScalarWhereInput!]
  updateMany: [NVoidUpdateManyWithWhereNestedInput!]
}

input NVoidUpdateManyWithWhereNestedInput {
  where: NVoidScalarWhereInput!
  data: NVoidUpdateManyDataInput!
}

input NVoidUpdateOneRequiredWithoutEchosInput {
  create: NVoidCreateWithoutEchosInput
  update: NVoidUpdateWithoutEchosDataInput
  upsert: NVoidUpsertWithoutEchosInput
  connect: NVoidWhereUniqueInput
}

input NVoidUpdateOneRequiredWithoutShoutsInput {
  create: NVoidCreateWithoutShoutsInput
  update: NVoidUpdateWithoutShoutsDataInput
  upsert: NVoidUpsertWithoutShoutsInput
  connect: NVoidWhereUniqueInput
}

input NVoidUpdateWithoutCreatedByDataInput {
  voidGeohash: String
  shouts: ShoutInVoidUpdateManyWithoutNvoidInput
  echos: EchoInVoidUpdateManyWithoutNvoidInput
}

input NVoidUpdateWithoutEchosDataInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedVoidsInput
  voidGeohash: String
  shouts: ShoutInVoidUpdateManyWithoutNvoidInput
}

input NVoidUpdateWithoutShoutsDataInput {
  createdBy: UserUpdateOneRequiredWithoutCreatedVoidsInput
  voidGeohash: String
  echos: EchoInVoidUpdateManyWithoutNvoidInput
}

input NVoidUpdateWithWhereUniqueWithoutCreatedByInput {
  where: NVoidWhereUniqueInput!
  data: NVoidUpdateWithoutCreatedByDataInput!
}

input NVoidUpsertWithoutEchosInput {
  update: NVoidUpdateWithoutEchosDataInput!
  create: NVoidCreateWithoutEchosInput!
}

input NVoidUpsertWithoutShoutsInput {
  update: NVoidUpdateWithoutShoutsDataInput!
  create: NVoidCreateWithoutShoutsInput!
}

input NVoidUpsertWithWhereUniqueWithoutCreatedByInput {
  where: NVoidWhereUniqueInput!
  update: NVoidUpdateWithoutCreatedByDataInput!
  create: NVoidCreateWithoutCreatedByInput!
}

input NVoidWhereInput {
  voidId: ID
  voidId_not: ID
  voidId_in: [ID!]
  voidId_not_in: [ID!]
  voidId_lt: ID
  voidId_lte: ID
  voidId_gt: ID
  voidId_gte: ID
  voidId_contains: ID
  voidId_not_contains: ID
  voidId_starts_with: ID
  voidId_not_starts_with: ID
  voidId_ends_with: ID
  voidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdBy: UserWhereInput
  voidGeohash: String
  voidGeohash_not: String
  voidGeohash_in: [String!]
  voidGeohash_not_in: [String!]
  voidGeohash_lt: String
  voidGeohash_lte: String
  voidGeohash_gt: String
  voidGeohash_gte: String
  voidGeohash_contains: String
  voidGeohash_not_contains: String
  voidGeohash_starts_with: String
  voidGeohash_not_starts_with: String
  voidGeohash_ends_with: String
  voidGeohash_not_ends_with: String
  shouts_every: ShoutInVoidWhereInput
  shouts_some: ShoutInVoidWhereInput
  shouts_none: ShoutInVoidWhereInput
  echos_every: EchoInVoidWhereInput
  echos_some: EchoInVoidWhereInput
  echos_none: EchoInVoidWhereInput
  AND: [NVoidWhereInput!]
  OR: [NVoidWhereInput!]
  NOT: [NVoidWhereInput!]
}

input NVoidWhereUniqueInput {
  voidId: ID
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  content(where: ContentWhereUniqueInput!): Content
  contents(where: ContentWhereInput, orderBy: ContentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Content]!
  contentsConnection(where: ContentWhereInput, orderBy: ContentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ContentConnection!
  echoEdge(where: EchoEdgeWhereUniqueInput!): EchoEdge
  echoEdges(where: EchoEdgeWhereInput, orderBy: EchoEdgeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [EchoEdge]!
  echoEdgesConnection(where: EchoEdgeWhereInput, orderBy: EchoEdgeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): EchoEdgeConnection!
  echoInVoid(where: EchoInVoidWhereUniqueInput!): EchoInVoid
  echoInVoids(where: EchoInVoidWhereInput, orderBy: EchoInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [EchoInVoid]!
  echoInVoidsConnection(where: EchoInVoidWhereInput, orderBy: EchoInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): EchoInVoidConnection!
  nVoid(where: NVoidWhereUniqueInput!): NVoid
  nVoids(where: NVoidWhereInput, orderBy: NVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [NVoid]!
  nVoidsConnection(where: NVoidWhereInput, orderBy: NVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): NVoidConnection!
  replyToEchoInVoid(where: ReplyToEchoInVoidWhereUniqueInput!): ReplyToEchoInVoid
  replyToEchoInVoids(where: ReplyToEchoInVoidWhereInput, orderBy: ReplyToEchoInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ReplyToEchoInVoid]!
  replyToEchoInVoidsConnection(where: ReplyToEchoInVoidWhereInput, orderBy: ReplyToEchoInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ReplyToEchoInVoidConnection!
  replyToShoutInVoid(where: ReplyToShoutInVoidWhereUniqueInput!): ReplyToShoutInVoid
  replyToShoutInVoids(where: ReplyToShoutInVoidWhereInput, orderBy: ReplyToShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ReplyToShoutInVoid]!
  replyToShoutInVoidsConnection(where: ReplyToShoutInVoidWhereInput, orderBy: ReplyToShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ReplyToShoutInVoidConnection!
  savedEcho(where: SavedEchoWhereUniqueInput!): SavedEcho
  savedEchoes(where: SavedEchoWhereInput, orderBy: SavedEchoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SavedEcho]!
  savedEchoesConnection(where: SavedEchoWhereInput, orderBy: SavedEchoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SavedEchoConnection!
  savedReplyToEchoInVoid(where: SavedReplyToEchoInVoidWhereUniqueInput!): SavedReplyToEchoInVoid
  savedReplyToEchoInVoids(where: SavedReplyToEchoInVoidWhereInput, orderBy: SavedReplyToEchoInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SavedReplyToEchoInVoid]!
  savedReplyToEchoInVoidsConnection(where: SavedReplyToEchoInVoidWhereInput, orderBy: SavedReplyToEchoInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SavedReplyToEchoInVoidConnection!
  savedReplyToShoutInVoid(where: SavedReplyToShoutInVoidWhereUniqueInput!): SavedReplyToShoutInVoid
  savedReplyToShoutInVoids(where: SavedReplyToShoutInVoidWhereInput, orderBy: SavedReplyToShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SavedReplyToShoutInVoid]!
  savedReplyToShoutInVoidsConnection(where: SavedReplyToShoutInVoidWhereInput, orderBy: SavedReplyToShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SavedReplyToShoutInVoidConnection!
  savedShout(where: SavedShoutWhereUniqueInput!): SavedShout
  savedShouts(where: SavedShoutWhereInput, orderBy: SavedShoutOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SavedShout]!
  savedShoutsConnection(where: SavedShoutWhereInput, orderBy: SavedShoutOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SavedShoutConnection!
  savedVoid(where: SavedVoidWhereUniqueInput!): SavedVoid
  savedVoids(where: SavedVoidWhereInput, orderBy: SavedVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SavedVoid]!
  savedVoidsConnection(where: SavedVoidWhereInput, orderBy: SavedVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SavedVoidConnection!
  shoutInVoid(where: ShoutInVoidWhereUniqueInput!): ShoutInVoid
  shoutInVoids(where: ShoutInVoidWhereInput, orderBy: ShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ShoutInVoid]!
  shoutInVoidsConnection(where: ShoutInVoidWhereInput, orderBy: ShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ShoutInVoidConnection!
  user(where: UserWhereUniqueInput!): User
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  node(id: ID!): Node
}

type ReplyToEchoInVoid {
  replyToEchoInVoidId: ID!
  createdAt: DateTime!
  createdBy: User!
  content: Content!
  voteCount: Int!
  echoInVoid: EchoInVoid!
  savedReplies(where: SavedReplyToEchoInVoidWhereInput, orderBy: SavedReplyToEchoInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SavedReplyToEchoInVoid!]
}

type ReplyToEchoInVoidConnection {
  pageInfo: PageInfo!
  edges: [ReplyToEchoInVoidEdge]!
  aggregate: AggregateReplyToEchoInVoid!
}

input ReplyToEchoInVoidCreateInput {
  replyToEchoInVoidId: ID
  createdBy: UserCreateOneWithoutRepliesToEchosInVoidsInput!
  content: ContentCreateOneInput!
  voteCount: Int!
  echoInVoid: EchoInVoidCreateOneWithoutRepliesInput!
  savedReplies: SavedReplyToEchoInVoidCreateManyWithoutReplyToEchoInVoidInput
}

input ReplyToEchoInVoidCreateManyWithoutCreatedByInput {
  create: [ReplyToEchoInVoidCreateWithoutCreatedByInput!]
  connect: [ReplyToEchoInVoidWhereUniqueInput!]
}

input ReplyToEchoInVoidCreateManyWithoutEchoInVoidInput {
  create: [ReplyToEchoInVoidCreateWithoutEchoInVoidInput!]
  connect: [ReplyToEchoInVoidWhereUniqueInput!]
}

input ReplyToEchoInVoidCreateOneWithoutSavedRepliesInput {
  create: ReplyToEchoInVoidCreateWithoutSavedRepliesInput
  connect: ReplyToEchoInVoidWhereUniqueInput
}

input ReplyToEchoInVoidCreateWithoutCreatedByInput {
  replyToEchoInVoidId: ID
  content: ContentCreateOneInput!
  voteCount: Int!
  echoInVoid: EchoInVoidCreateOneWithoutRepliesInput!
  savedReplies: SavedReplyToEchoInVoidCreateManyWithoutReplyToEchoInVoidInput
}

input ReplyToEchoInVoidCreateWithoutEchoInVoidInput {
  replyToEchoInVoidId: ID
  createdBy: UserCreateOneWithoutRepliesToEchosInVoidsInput!
  content: ContentCreateOneInput!
  voteCount: Int!
  savedReplies: SavedReplyToEchoInVoidCreateManyWithoutReplyToEchoInVoidInput
}

input ReplyToEchoInVoidCreateWithoutSavedRepliesInput {
  replyToEchoInVoidId: ID
  createdBy: UserCreateOneWithoutRepliesToEchosInVoidsInput!
  content: ContentCreateOneInput!
  voteCount: Int!
  echoInVoid: EchoInVoidCreateOneWithoutRepliesInput!
}

type ReplyToEchoInVoidEdge {
  node: ReplyToEchoInVoid!
  cursor: String!
}

enum ReplyToEchoInVoidOrderByInput {
  replyToEchoInVoidId_ASC
  replyToEchoInVoidId_DESC
  createdAt_ASC
  createdAt_DESC
  voteCount_ASC
  voteCount_DESC
}

type ReplyToEchoInVoidPreviousValues {
  replyToEchoInVoidId: ID!
  createdAt: DateTime!
  voteCount: Int!
}

input ReplyToEchoInVoidScalarWhereInput {
  replyToEchoInVoidId: ID
  replyToEchoInVoidId_not: ID
  replyToEchoInVoidId_in: [ID!]
  replyToEchoInVoidId_not_in: [ID!]
  replyToEchoInVoidId_lt: ID
  replyToEchoInVoidId_lte: ID
  replyToEchoInVoidId_gt: ID
  replyToEchoInVoidId_gte: ID
  replyToEchoInVoidId_contains: ID
  replyToEchoInVoidId_not_contains: ID
  replyToEchoInVoidId_starts_with: ID
  replyToEchoInVoidId_not_starts_with: ID
  replyToEchoInVoidId_ends_with: ID
  replyToEchoInVoidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  voteCount: Int
  voteCount_not: Int
  voteCount_in: [Int!]
  voteCount_not_in: [Int!]
  voteCount_lt: Int
  voteCount_lte: Int
  voteCount_gt: Int
  voteCount_gte: Int
  AND: [ReplyToEchoInVoidScalarWhereInput!]
  OR: [ReplyToEchoInVoidScalarWhereInput!]
  NOT: [ReplyToEchoInVoidScalarWhereInput!]
}

type ReplyToEchoInVoidSubscriptionPayload {
  mutation: MutationType!
  node: ReplyToEchoInVoid
  updatedFields: [String!]
  previousValues: ReplyToEchoInVoidPreviousValues
}

input ReplyToEchoInVoidSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ReplyToEchoInVoidWhereInput
  AND: [ReplyToEchoInVoidSubscriptionWhereInput!]
  OR: [ReplyToEchoInVoidSubscriptionWhereInput!]
  NOT: [ReplyToEchoInVoidSubscriptionWhereInput!]
}

input ReplyToEchoInVoidUpdateInput {
  createdBy: UserUpdateOneRequiredWithoutRepliesToEchosInVoidsInput
  content: ContentUpdateOneRequiredInput
  voteCount: Int
  echoInVoid: EchoInVoidUpdateOneRequiredWithoutRepliesInput
  savedReplies: SavedReplyToEchoInVoidUpdateManyWithoutReplyToEchoInVoidInput
}

input ReplyToEchoInVoidUpdateManyDataInput {
  voteCount: Int
}

input ReplyToEchoInVoidUpdateManyMutationInput {
  voteCount: Int
}

input ReplyToEchoInVoidUpdateManyWithoutCreatedByInput {
  create: [ReplyToEchoInVoidCreateWithoutCreatedByInput!]
  delete: [ReplyToEchoInVoidWhereUniqueInput!]
  connect: [ReplyToEchoInVoidWhereUniqueInput!]
  set: [ReplyToEchoInVoidWhereUniqueInput!]
  disconnect: [ReplyToEchoInVoidWhereUniqueInput!]
  update: [ReplyToEchoInVoidUpdateWithWhereUniqueWithoutCreatedByInput!]
  upsert: [ReplyToEchoInVoidUpsertWithWhereUniqueWithoutCreatedByInput!]
  deleteMany: [ReplyToEchoInVoidScalarWhereInput!]
  updateMany: [ReplyToEchoInVoidUpdateManyWithWhereNestedInput!]
}

input ReplyToEchoInVoidUpdateManyWithoutEchoInVoidInput {
  create: [ReplyToEchoInVoidCreateWithoutEchoInVoidInput!]
  delete: [ReplyToEchoInVoidWhereUniqueInput!]
  connect: [ReplyToEchoInVoidWhereUniqueInput!]
  set: [ReplyToEchoInVoidWhereUniqueInput!]
  disconnect: [ReplyToEchoInVoidWhereUniqueInput!]
  update: [ReplyToEchoInVoidUpdateWithWhereUniqueWithoutEchoInVoidInput!]
  upsert: [ReplyToEchoInVoidUpsertWithWhereUniqueWithoutEchoInVoidInput!]
  deleteMany: [ReplyToEchoInVoidScalarWhereInput!]
  updateMany: [ReplyToEchoInVoidUpdateManyWithWhereNestedInput!]
}

input ReplyToEchoInVoidUpdateManyWithWhereNestedInput {
  where: ReplyToEchoInVoidScalarWhereInput!
  data: ReplyToEchoInVoidUpdateManyDataInput!
}

input ReplyToEchoInVoidUpdateOneRequiredWithoutSavedRepliesInput {
  create: ReplyToEchoInVoidCreateWithoutSavedRepliesInput
  update: ReplyToEchoInVoidUpdateWithoutSavedRepliesDataInput
  upsert: ReplyToEchoInVoidUpsertWithoutSavedRepliesInput
  connect: ReplyToEchoInVoidWhereUniqueInput
}

input ReplyToEchoInVoidUpdateWithoutCreatedByDataInput {
  content: ContentUpdateOneRequiredInput
  voteCount: Int
  echoInVoid: EchoInVoidUpdateOneRequiredWithoutRepliesInput
  savedReplies: SavedReplyToEchoInVoidUpdateManyWithoutReplyToEchoInVoidInput
}

input ReplyToEchoInVoidUpdateWithoutEchoInVoidDataInput {
  createdBy: UserUpdateOneRequiredWithoutRepliesToEchosInVoidsInput
  content: ContentUpdateOneRequiredInput
  voteCount: Int
  savedReplies: SavedReplyToEchoInVoidUpdateManyWithoutReplyToEchoInVoidInput
}

input ReplyToEchoInVoidUpdateWithoutSavedRepliesDataInput {
  createdBy: UserUpdateOneRequiredWithoutRepliesToEchosInVoidsInput
  content: ContentUpdateOneRequiredInput
  voteCount: Int
  echoInVoid: EchoInVoidUpdateOneRequiredWithoutRepliesInput
}

input ReplyToEchoInVoidUpdateWithWhereUniqueWithoutCreatedByInput {
  where: ReplyToEchoInVoidWhereUniqueInput!
  data: ReplyToEchoInVoidUpdateWithoutCreatedByDataInput!
}

input ReplyToEchoInVoidUpdateWithWhereUniqueWithoutEchoInVoidInput {
  where: ReplyToEchoInVoidWhereUniqueInput!
  data: ReplyToEchoInVoidUpdateWithoutEchoInVoidDataInput!
}

input ReplyToEchoInVoidUpsertWithoutSavedRepliesInput {
  update: ReplyToEchoInVoidUpdateWithoutSavedRepliesDataInput!
  create: ReplyToEchoInVoidCreateWithoutSavedRepliesInput!
}

input ReplyToEchoInVoidUpsertWithWhereUniqueWithoutCreatedByInput {
  where: ReplyToEchoInVoidWhereUniqueInput!
  update: ReplyToEchoInVoidUpdateWithoutCreatedByDataInput!
  create: ReplyToEchoInVoidCreateWithoutCreatedByInput!
}

input ReplyToEchoInVoidUpsertWithWhereUniqueWithoutEchoInVoidInput {
  where: ReplyToEchoInVoidWhereUniqueInput!
  update: ReplyToEchoInVoidUpdateWithoutEchoInVoidDataInput!
  create: ReplyToEchoInVoidCreateWithoutEchoInVoidInput!
}

input ReplyToEchoInVoidWhereInput {
  replyToEchoInVoidId: ID
  replyToEchoInVoidId_not: ID
  replyToEchoInVoidId_in: [ID!]
  replyToEchoInVoidId_not_in: [ID!]
  replyToEchoInVoidId_lt: ID
  replyToEchoInVoidId_lte: ID
  replyToEchoInVoidId_gt: ID
  replyToEchoInVoidId_gte: ID
  replyToEchoInVoidId_contains: ID
  replyToEchoInVoidId_not_contains: ID
  replyToEchoInVoidId_starts_with: ID
  replyToEchoInVoidId_not_starts_with: ID
  replyToEchoInVoidId_ends_with: ID
  replyToEchoInVoidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdBy: UserWhereInput
  content: ContentWhereInput
  voteCount: Int
  voteCount_not: Int
  voteCount_in: [Int!]
  voteCount_not_in: [Int!]
  voteCount_lt: Int
  voteCount_lte: Int
  voteCount_gt: Int
  voteCount_gte: Int
  echoInVoid: EchoInVoidWhereInput
  savedReplies_every: SavedReplyToEchoInVoidWhereInput
  savedReplies_some: SavedReplyToEchoInVoidWhereInput
  savedReplies_none: SavedReplyToEchoInVoidWhereInput
  AND: [ReplyToEchoInVoidWhereInput!]
  OR: [ReplyToEchoInVoidWhereInput!]
  NOT: [ReplyToEchoInVoidWhereInput!]
}

input ReplyToEchoInVoidWhereUniqueInput {
  replyToEchoInVoidId: ID
}

type ReplyToShoutInVoid {
  replyToShoutInVoidId: ID!
  createdAt: DateTime!
  createdBy: User!
  content: Content!
  voteCount: Int!
  shoutInVoid: ShoutInVoid!
  savedReplies(where: SavedReplyToShoutInVoidWhereInput, orderBy: SavedReplyToShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SavedReplyToShoutInVoid!]
}

type ReplyToShoutInVoidConnection {
  pageInfo: PageInfo!
  edges: [ReplyToShoutInVoidEdge]!
  aggregate: AggregateReplyToShoutInVoid!
}

input ReplyToShoutInVoidCreateInput {
  replyToShoutInVoidId: ID
  createdBy: UserCreateOneWithoutRepliesToShoutsInVoidsInput!
  content: ContentCreateOneInput!
  voteCount: Int!
  shoutInVoid: ShoutInVoidCreateOneWithoutRepliesInput!
  savedReplies: SavedReplyToShoutInVoidCreateManyWithoutReplyToShoutInVoidInput
}

input ReplyToShoutInVoidCreateManyWithoutCreatedByInput {
  create: [ReplyToShoutInVoidCreateWithoutCreatedByInput!]
  connect: [ReplyToShoutInVoidWhereUniqueInput!]
}

input ReplyToShoutInVoidCreateManyWithoutShoutInVoidInput {
  create: [ReplyToShoutInVoidCreateWithoutShoutInVoidInput!]
  connect: [ReplyToShoutInVoidWhereUniqueInput!]
}

input ReplyToShoutInVoidCreateOneWithoutSavedRepliesInput {
  create: ReplyToShoutInVoidCreateWithoutSavedRepliesInput
  connect: ReplyToShoutInVoidWhereUniqueInput
}

input ReplyToShoutInVoidCreateWithoutCreatedByInput {
  replyToShoutInVoidId: ID
  content: ContentCreateOneInput!
  voteCount: Int!
  shoutInVoid: ShoutInVoidCreateOneWithoutRepliesInput!
  savedReplies: SavedReplyToShoutInVoidCreateManyWithoutReplyToShoutInVoidInput
}

input ReplyToShoutInVoidCreateWithoutSavedRepliesInput {
  replyToShoutInVoidId: ID
  createdBy: UserCreateOneWithoutRepliesToShoutsInVoidsInput!
  content: ContentCreateOneInput!
  voteCount: Int!
  shoutInVoid: ShoutInVoidCreateOneWithoutRepliesInput!
}

input ReplyToShoutInVoidCreateWithoutShoutInVoidInput {
  replyToShoutInVoidId: ID
  createdBy: UserCreateOneWithoutRepliesToShoutsInVoidsInput!
  content: ContentCreateOneInput!
  voteCount: Int!
  savedReplies: SavedReplyToShoutInVoidCreateManyWithoutReplyToShoutInVoidInput
}

type ReplyToShoutInVoidEdge {
  node: ReplyToShoutInVoid!
  cursor: String!
}

enum ReplyToShoutInVoidOrderByInput {
  replyToShoutInVoidId_ASC
  replyToShoutInVoidId_DESC
  createdAt_ASC
  createdAt_DESC
  voteCount_ASC
  voteCount_DESC
}

type ReplyToShoutInVoidPreviousValues {
  replyToShoutInVoidId: ID!
  createdAt: DateTime!
  voteCount: Int!
}

input ReplyToShoutInVoidScalarWhereInput {
  replyToShoutInVoidId: ID
  replyToShoutInVoidId_not: ID
  replyToShoutInVoidId_in: [ID!]
  replyToShoutInVoidId_not_in: [ID!]
  replyToShoutInVoidId_lt: ID
  replyToShoutInVoidId_lte: ID
  replyToShoutInVoidId_gt: ID
  replyToShoutInVoidId_gte: ID
  replyToShoutInVoidId_contains: ID
  replyToShoutInVoidId_not_contains: ID
  replyToShoutInVoidId_starts_with: ID
  replyToShoutInVoidId_not_starts_with: ID
  replyToShoutInVoidId_ends_with: ID
  replyToShoutInVoidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  voteCount: Int
  voteCount_not: Int
  voteCount_in: [Int!]
  voteCount_not_in: [Int!]
  voteCount_lt: Int
  voteCount_lte: Int
  voteCount_gt: Int
  voteCount_gte: Int
  AND: [ReplyToShoutInVoidScalarWhereInput!]
  OR: [ReplyToShoutInVoidScalarWhereInput!]
  NOT: [ReplyToShoutInVoidScalarWhereInput!]
}

type ReplyToShoutInVoidSubscriptionPayload {
  mutation: MutationType!
  node: ReplyToShoutInVoid
  updatedFields: [String!]
  previousValues: ReplyToShoutInVoidPreviousValues
}

input ReplyToShoutInVoidSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ReplyToShoutInVoidWhereInput
  AND: [ReplyToShoutInVoidSubscriptionWhereInput!]
  OR: [ReplyToShoutInVoidSubscriptionWhereInput!]
  NOT: [ReplyToShoutInVoidSubscriptionWhereInput!]
}

input ReplyToShoutInVoidUpdateInput {
  createdBy: UserUpdateOneRequiredWithoutRepliesToShoutsInVoidsInput
  content: ContentUpdateOneRequiredInput
  voteCount: Int
  shoutInVoid: ShoutInVoidUpdateOneRequiredWithoutRepliesInput
  savedReplies: SavedReplyToShoutInVoidUpdateManyWithoutReplyToShoutInVoidInput
}

input ReplyToShoutInVoidUpdateManyDataInput {
  voteCount: Int
}

input ReplyToShoutInVoidUpdateManyMutationInput {
  voteCount: Int
}

input ReplyToShoutInVoidUpdateManyWithoutCreatedByInput {
  create: [ReplyToShoutInVoidCreateWithoutCreatedByInput!]
  delete: [ReplyToShoutInVoidWhereUniqueInput!]
  connect: [ReplyToShoutInVoidWhereUniqueInput!]
  set: [ReplyToShoutInVoidWhereUniqueInput!]
  disconnect: [ReplyToShoutInVoidWhereUniqueInput!]
  update: [ReplyToShoutInVoidUpdateWithWhereUniqueWithoutCreatedByInput!]
  upsert: [ReplyToShoutInVoidUpsertWithWhereUniqueWithoutCreatedByInput!]
  deleteMany: [ReplyToShoutInVoidScalarWhereInput!]
  updateMany: [ReplyToShoutInVoidUpdateManyWithWhereNestedInput!]
}

input ReplyToShoutInVoidUpdateManyWithoutShoutInVoidInput {
  create: [ReplyToShoutInVoidCreateWithoutShoutInVoidInput!]
  delete: [ReplyToShoutInVoidWhereUniqueInput!]
  connect: [ReplyToShoutInVoidWhereUniqueInput!]
  set: [ReplyToShoutInVoidWhereUniqueInput!]
  disconnect: [ReplyToShoutInVoidWhereUniqueInput!]
  update: [ReplyToShoutInVoidUpdateWithWhereUniqueWithoutShoutInVoidInput!]
  upsert: [ReplyToShoutInVoidUpsertWithWhereUniqueWithoutShoutInVoidInput!]
  deleteMany: [ReplyToShoutInVoidScalarWhereInput!]
  updateMany: [ReplyToShoutInVoidUpdateManyWithWhereNestedInput!]
}

input ReplyToShoutInVoidUpdateManyWithWhereNestedInput {
  where: ReplyToShoutInVoidScalarWhereInput!
  data: ReplyToShoutInVoidUpdateManyDataInput!
}

input ReplyToShoutInVoidUpdateOneRequiredWithoutSavedRepliesInput {
  create: ReplyToShoutInVoidCreateWithoutSavedRepliesInput
  update: ReplyToShoutInVoidUpdateWithoutSavedRepliesDataInput
  upsert: ReplyToShoutInVoidUpsertWithoutSavedRepliesInput
  connect: ReplyToShoutInVoidWhereUniqueInput
}

input ReplyToShoutInVoidUpdateWithoutCreatedByDataInput {
  content: ContentUpdateOneRequiredInput
  voteCount: Int
  shoutInVoid: ShoutInVoidUpdateOneRequiredWithoutRepliesInput
  savedReplies: SavedReplyToShoutInVoidUpdateManyWithoutReplyToShoutInVoidInput
}

input ReplyToShoutInVoidUpdateWithoutSavedRepliesDataInput {
  createdBy: UserUpdateOneRequiredWithoutRepliesToShoutsInVoidsInput
  content: ContentUpdateOneRequiredInput
  voteCount: Int
  shoutInVoid: ShoutInVoidUpdateOneRequiredWithoutRepliesInput
}

input ReplyToShoutInVoidUpdateWithoutShoutInVoidDataInput {
  createdBy: UserUpdateOneRequiredWithoutRepliesToShoutsInVoidsInput
  content: ContentUpdateOneRequiredInput
  voteCount: Int
  savedReplies: SavedReplyToShoutInVoidUpdateManyWithoutReplyToShoutInVoidInput
}

input ReplyToShoutInVoidUpdateWithWhereUniqueWithoutCreatedByInput {
  where: ReplyToShoutInVoidWhereUniqueInput!
  data: ReplyToShoutInVoidUpdateWithoutCreatedByDataInput!
}

input ReplyToShoutInVoidUpdateWithWhereUniqueWithoutShoutInVoidInput {
  where: ReplyToShoutInVoidWhereUniqueInput!
  data: ReplyToShoutInVoidUpdateWithoutShoutInVoidDataInput!
}

input ReplyToShoutInVoidUpsertWithoutSavedRepliesInput {
  update: ReplyToShoutInVoidUpdateWithoutSavedRepliesDataInput!
  create: ReplyToShoutInVoidCreateWithoutSavedRepliesInput!
}

input ReplyToShoutInVoidUpsertWithWhereUniqueWithoutCreatedByInput {
  where: ReplyToShoutInVoidWhereUniqueInput!
  update: ReplyToShoutInVoidUpdateWithoutCreatedByDataInput!
  create: ReplyToShoutInVoidCreateWithoutCreatedByInput!
}

input ReplyToShoutInVoidUpsertWithWhereUniqueWithoutShoutInVoidInput {
  where: ReplyToShoutInVoidWhereUniqueInput!
  update: ReplyToShoutInVoidUpdateWithoutShoutInVoidDataInput!
  create: ReplyToShoutInVoidCreateWithoutShoutInVoidInput!
}

input ReplyToShoutInVoidWhereInput {
  replyToShoutInVoidId: ID
  replyToShoutInVoidId_not: ID
  replyToShoutInVoidId_in: [ID!]
  replyToShoutInVoidId_not_in: [ID!]
  replyToShoutInVoidId_lt: ID
  replyToShoutInVoidId_lte: ID
  replyToShoutInVoidId_gt: ID
  replyToShoutInVoidId_gte: ID
  replyToShoutInVoidId_contains: ID
  replyToShoutInVoidId_not_contains: ID
  replyToShoutInVoidId_starts_with: ID
  replyToShoutInVoidId_not_starts_with: ID
  replyToShoutInVoidId_ends_with: ID
  replyToShoutInVoidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdBy: UserWhereInput
  content: ContentWhereInput
  voteCount: Int
  voteCount_not: Int
  voteCount_in: [Int!]
  voteCount_not_in: [Int!]
  voteCount_lt: Int
  voteCount_lte: Int
  voteCount_gt: Int
  voteCount_gte: Int
  shoutInVoid: ShoutInVoidWhereInput
  savedReplies_every: SavedReplyToShoutInVoidWhereInput
  savedReplies_some: SavedReplyToShoutInVoidWhereInput
  savedReplies_none: SavedReplyToShoutInVoidWhereInput
  AND: [ReplyToShoutInVoidWhereInput!]
  OR: [ReplyToShoutInVoidWhereInput!]
  NOT: [ReplyToShoutInVoidWhereInput!]
}

input ReplyToShoutInVoidWhereUniqueInput {
  replyToShoutInVoidId: ID
}

type SavedEcho {
  savedEcho: ID!
  createdAt: DateTime!
  savedBy: User!
  originalContent: Content!
  originalShoutVoidGeohash: String!
  originalEchoVoidGeohash: String!
  echoInVoid: EchoInVoid!
}

type SavedEchoConnection {
  pageInfo: PageInfo!
  edges: [SavedEchoEdge]!
  aggregate: AggregateSavedEcho!
}

input SavedEchoCreateInput {
  savedEcho: ID
  savedBy: UserCreateOneWithoutSavedEchosInput!
  originalContent: ContentCreateOneInput!
  originalShoutVoidGeohash: String!
  originalEchoVoidGeohash: String!
  echoInVoid: EchoInVoidCreateOneWithoutSavedEchosInput!
}

input SavedEchoCreateManyWithoutEchoInVoidInput {
  create: [SavedEchoCreateWithoutEchoInVoidInput!]
  connect: [SavedEchoWhereUniqueInput!]
}

input SavedEchoCreateManyWithoutSavedByInput {
  create: [SavedEchoCreateWithoutSavedByInput!]
  connect: [SavedEchoWhereUniqueInput!]
}

input SavedEchoCreateWithoutEchoInVoidInput {
  savedEcho: ID
  savedBy: UserCreateOneWithoutSavedEchosInput!
  originalContent: ContentCreateOneInput!
  originalShoutVoidGeohash: String!
  originalEchoVoidGeohash: String!
}

input SavedEchoCreateWithoutSavedByInput {
  savedEcho: ID
  originalContent: ContentCreateOneInput!
  originalShoutVoidGeohash: String!
  originalEchoVoidGeohash: String!
  echoInVoid: EchoInVoidCreateOneWithoutSavedEchosInput!
}

type SavedEchoEdge {
  node: SavedEcho!
  cursor: String!
}

enum SavedEchoOrderByInput {
  savedEcho_ASC
  savedEcho_DESC
  createdAt_ASC
  createdAt_DESC
  originalShoutVoidGeohash_ASC
  originalShoutVoidGeohash_DESC
  originalEchoVoidGeohash_ASC
  originalEchoVoidGeohash_DESC
}

type SavedEchoPreviousValues {
  savedEcho: ID!
  createdAt: DateTime!
  originalShoutVoidGeohash: String!
  originalEchoVoidGeohash: String!
}

input SavedEchoScalarWhereInput {
  savedEcho: ID
  savedEcho_not: ID
  savedEcho_in: [ID!]
  savedEcho_not_in: [ID!]
  savedEcho_lt: ID
  savedEcho_lte: ID
  savedEcho_gt: ID
  savedEcho_gte: ID
  savedEcho_contains: ID
  savedEcho_not_contains: ID
  savedEcho_starts_with: ID
  savedEcho_not_starts_with: ID
  savedEcho_ends_with: ID
  savedEcho_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  originalShoutVoidGeohash: String
  originalShoutVoidGeohash_not: String
  originalShoutVoidGeohash_in: [String!]
  originalShoutVoidGeohash_not_in: [String!]
  originalShoutVoidGeohash_lt: String
  originalShoutVoidGeohash_lte: String
  originalShoutVoidGeohash_gt: String
  originalShoutVoidGeohash_gte: String
  originalShoutVoidGeohash_contains: String
  originalShoutVoidGeohash_not_contains: String
  originalShoutVoidGeohash_starts_with: String
  originalShoutVoidGeohash_not_starts_with: String
  originalShoutVoidGeohash_ends_with: String
  originalShoutVoidGeohash_not_ends_with: String
  originalEchoVoidGeohash: String
  originalEchoVoidGeohash_not: String
  originalEchoVoidGeohash_in: [String!]
  originalEchoVoidGeohash_not_in: [String!]
  originalEchoVoidGeohash_lt: String
  originalEchoVoidGeohash_lte: String
  originalEchoVoidGeohash_gt: String
  originalEchoVoidGeohash_gte: String
  originalEchoVoidGeohash_contains: String
  originalEchoVoidGeohash_not_contains: String
  originalEchoVoidGeohash_starts_with: String
  originalEchoVoidGeohash_not_starts_with: String
  originalEchoVoidGeohash_ends_with: String
  originalEchoVoidGeohash_not_ends_with: String
  AND: [SavedEchoScalarWhereInput!]
  OR: [SavedEchoScalarWhereInput!]
  NOT: [SavedEchoScalarWhereInput!]
}

type SavedEchoSubscriptionPayload {
  mutation: MutationType!
  node: SavedEcho
  updatedFields: [String!]
  previousValues: SavedEchoPreviousValues
}

input SavedEchoSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: SavedEchoWhereInput
  AND: [SavedEchoSubscriptionWhereInput!]
  OR: [SavedEchoSubscriptionWhereInput!]
  NOT: [SavedEchoSubscriptionWhereInput!]
}

input SavedEchoUpdateInput {
  savedBy: UserUpdateOneRequiredWithoutSavedEchosInput
  originalContent: ContentUpdateOneRequiredInput
  originalShoutVoidGeohash: String
  originalEchoVoidGeohash: String
  echoInVoid: EchoInVoidUpdateOneRequiredWithoutSavedEchosInput
}

input SavedEchoUpdateManyDataInput {
  originalShoutVoidGeohash: String
  originalEchoVoidGeohash: String
}

input SavedEchoUpdateManyMutationInput {
  originalShoutVoidGeohash: String
  originalEchoVoidGeohash: String
}

input SavedEchoUpdateManyWithoutEchoInVoidInput {
  create: [SavedEchoCreateWithoutEchoInVoidInput!]
  delete: [SavedEchoWhereUniqueInput!]
  connect: [SavedEchoWhereUniqueInput!]
  set: [SavedEchoWhereUniqueInput!]
  disconnect: [SavedEchoWhereUniqueInput!]
  update: [SavedEchoUpdateWithWhereUniqueWithoutEchoInVoidInput!]
  upsert: [SavedEchoUpsertWithWhereUniqueWithoutEchoInVoidInput!]
  deleteMany: [SavedEchoScalarWhereInput!]
  updateMany: [SavedEchoUpdateManyWithWhereNestedInput!]
}

input SavedEchoUpdateManyWithoutSavedByInput {
  create: [SavedEchoCreateWithoutSavedByInput!]
  delete: [SavedEchoWhereUniqueInput!]
  connect: [SavedEchoWhereUniqueInput!]
  set: [SavedEchoWhereUniqueInput!]
  disconnect: [SavedEchoWhereUniqueInput!]
  update: [SavedEchoUpdateWithWhereUniqueWithoutSavedByInput!]
  upsert: [SavedEchoUpsertWithWhereUniqueWithoutSavedByInput!]
  deleteMany: [SavedEchoScalarWhereInput!]
  updateMany: [SavedEchoUpdateManyWithWhereNestedInput!]
}

input SavedEchoUpdateManyWithWhereNestedInput {
  where: SavedEchoScalarWhereInput!
  data: SavedEchoUpdateManyDataInput!
}

input SavedEchoUpdateWithoutEchoInVoidDataInput {
  savedBy: UserUpdateOneRequiredWithoutSavedEchosInput
  originalContent: ContentUpdateOneRequiredInput
  originalShoutVoidGeohash: String
  originalEchoVoidGeohash: String
}

input SavedEchoUpdateWithoutSavedByDataInput {
  originalContent: ContentUpdateOneRequiredInput
  originalShoutVoidGeohash: String
  originalEchoVoidGeohash: String
  echoInVoid: EchoInVoidUpdateOneRequiredWithoutSavedEchosInput
}

input SavedEchoUpdateWithWhereUniqueWithoutEchoInVoidInput {
  where: SavedEchoWhereUniqueInput!
  data: SavedEchoUpdateWithoutEchoInVoidDataInput!
}

input SavedEchoUpdateWithWhereUniqueWithoutSavedByInput {
  where: SavedEchoWhereUniqueInput!
  data: SavedEchoUpdateWithoutSavedByDataInput!
}

input SavedEchoUpsertWithWhereUniqueWithoutEchoInVoidInput {
  where: SavedEchoWhereUniqueInput!
  update: SavedEchoUpdateWithoutEchoInVoidDataInput!
  create: SavedEchoCreateWithoutEchoInVoidInput!
}

input SavedEchoUpsertWithWhereUniqueWithoutSavedByInput {
  where: SavedEchoWhereUniqueInput!
  update: SavedEchoUpdateWithoutSavedByDataInput!
  create: SavedEchoCreateWithoutSavedByInput!
}

input SavedEchoWhereInput {
  savedEcho: ID
  savedEcho_not: ID
  savedEcho_in: [ID!]
  savedEcho_not_in: [ID!]
  savedEcho_lt: ID
  savedEcho_lte: ID
  savedEcho_gt: ID
  savedEcho_gte: ID
  savedEcho_contains: ID
  savedEcho_not_contains: ID
  savedEcho_starts_with: ID
  savedEcho_not_starts_with: ID
  savedEcho_ends_with: ID
  savedEcho_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  savedBy: UserWhereInput
  originalContent: ContentWhereInput
  originalShoutVoidGeohash: String
  originalShoutVoidGeohash_not: String
  originalShoutVoidGeohash_in: [String!]
  originalShoutVoidGeohash_not_in: [String!]
  originalShoutVoidGeohash_lt: String
  originalShoutVoidGeohash_lte: String
  originalShoutVoidGeohash_gt: String
  originalShoutVoidGeohash_gte: String
  originalShoutVoidGeohash_contains: String
  originalShoutVoidGeohash_not_contains: String
  originalShoutVoidGeohash_starts_with: String
  originalShoutVoidGeohash_not_starts_with: String
  originalShoutVoidGeohash_ends_with: String
  originalShoutVoidGeohash_not_ends_with: String
  originalEchoVoidGeohash: String
  originalEchoVoidGeohash_not: String
  originalEchoVoidGeohash_in: [String!]
  originalEchoVoidGeohash_not_in: [String!]
  originalEchoVoidGeohash_lt: String
  originalEchoVoidGeohash_lte: String
  originalEchoVoidGeohash_gt: String
  originalEchoVoidGeohash_gte: String
  originalEchoVoidGeohash_contains: String
  originalEchoVoidGeohash_not_contains: String
  originalEchoVoidGeohash_starts_with: String
  originalEchoVoidGeohash_not_starts_with: String
  originalEchoVoidGeohash_ends_with: String
  originalEchoVoidGeohash_not_ends_with: String
  echoInVoid: EchoInVoidWhereInput
  AND: [SavedEchoWhereInput!]
  OR: [SavedEchoWhereInput!]
  NOT: [SavedEchoWhereInput!]
}

input SavedEchoWhereUniqueInput {
  savedEcho: ID
}

type SavedReplyToEchoInVoid {
  savedReplyToEchoInVoid: ID!
  createdAt: DateTime!
  savedBy: User!
  originalReplyContent: Content!
  originalShoutContent: Content!
  originalVoidGeohash: String!
  replyToEchoInVoid: ReplyToEchoInVoid!
}

type SavedReplyToEchoInVoidConnection {
  pageInfo: PageInfo!
  edges: [SavedReplyToEchoInVoidEdge]!
  aggregate: AggregateSavedReplyToEchoInVoid!
}

input SavedReplyToEchoInVoidCreateInput {
  savedReplyToEchoInVoid: ID
  savedBy: UserCreateOneWithoutSavedRepliesToEchosInVoidsInput!
  originalReplyContent: ContentCreateOneInput!
  originalShoutContent: ContentCreateOneInput!
  originalVoidGeohash: String!
  replyToEchoInVoid: ReplyToEchoInVoidCreateOneWithoutSavedRepliesInput!
}

input SavedReplyToEchoInVoidCreateManyWithoutReplyToEchoInVoidInput {
  create: [SavedReplyToEchoInVoidCreateWithoutReplyToEchoInVoidInput!]
  connect: [SavedReplyToEchoInVoidWhereUniqueInput!]
}

input SavedReplyToEchoInVoidCreateManyWithoutSavedByInput {
  create: [SavedReplyToEchoInVoidCreateWithoutSavedByInput!]
  connect: [SavedReplyToEchoInVoidWhereUniqueInput!]
}

input SavedReplyToEchoInVoidCreateWithoutReplyToEchoInVoidInput {
  savedReplyToEchoInVoid: ID
  savedBy: UserCreateOneWithoutSavedRepliesToEchosInVoidsInput!
  originalReplyContent: ContentCreateOneInput!
  originalShoutContent: ContentCreateOneInput!
  originalVoidGeohash: String!
}

input SavedReplyToEchoInVoidCreateWithoutSavedByInput {
  savedReplyToEchoInVoid: ID
  originalReplyContent: ContentCreateOneInput!
  originalShoutContent: ContentCreateOneInput!
  originalVoidGeohash: String!
  replyToEchoInVoid: ReplyToEchoInVoidCreateOneWithoutSavedRepliesInput!
}

type SavedReplyToEchoInVoidEdge {
  node: SavedReplyToEchoInVoid!
  cursor: String!
}

enum SavedReplyToEchoInVoidOrderByInput {
  savedReplyToEchoInVoid_ASC
  savedReplyToEchoInVoid_DESC
  createdAt_ASC
  createdAt_DESC
  originalVoidGeohash_ASC
  originalVoidGeohash_DESC
}

type SavedReplyToEchoInVoidPreviousValues {
  savedReplyToEchoInVoid: ID!
  createdAt: DateTime!
  originalVoidGeohash: String!
}

input SavedReplyToEchoInVoidScalarWhereInput {
  savedReplyToEchoInVoid: ID
  savedReplyToEchoInVoid_not: ID
  savedReplyToEchoInVoid_in: [ID!]
  savedReplyToEchoInVoid_not_in: [ID!]
  savedReplyToEchoInVoid_lt: ID
  savedReplyToEchoInVoid_lte: ID
  savedReplyToEchoInVoid_gt: ID
  savedReplyToEchoInVoid_gte: ID
  savedReplyToEchoInVoid_contains: ID
  savedReplyToEchoInVoid_not_contains: ID
  savedReplyToEchoInVoid_starts_with: ID
  savedReplyToEchoInVoid_not_starts_with: ID
  savedReplyToEchoInVoid_ends_with: ID
  savedReplyToEchoInVoid_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  originalVoidGeohash: String
  originalVoidGeohash_not: String
  originalVoidGeohash_in: [String!]
  originalVoidGeohash_not_in: [String!]
  originalVoidGeohash_lt: String
  originalVoidGeohash_lte: String
  originalVoidGeohash_gt: String
  originalVoidGeohash_gte: String
  originalVoidGeohash_contains: String
  originalVoidGeohash_not_contains: String
  originalVoidGeohash_starts_with: String
  originalVoidGeohash_not_starts_with: String
  originalVoidGeohash_ends_with: String
  originalVoidGeohash_not_ends_with: String
  AND: [SavedReplyToEchoInVoidScalarWhereInput!]
  OR: [SavedReplyToEchoInVoidScalarWhereInput!]
  NOT: [SavedReplyToEchoInVoidScalarWhereInput!]
}

type SavedReplyToEchoInVoidSubscriptionPayload {
  mutation: MutationType!
  node: SavedReplyToEchoInVoid
  updatedFields: [String!]
  previousValues: SavedReplyToEchoInVoidPreviousValues
}

input SavedReplyToEchoInVoidSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: SavedReplyToEchoInVoidWhereInput
  AND: [SavedReplyToEchoInVoidSubscriptionWhereInput!]
  OR: [SavedReplyToEchoInVoidSubscriptionWhereInput!]
  NOT: [SavedReplyToEchoInVoidSubscriptionWhereInput!]
}

input SavedReplyToEchoInVoidUpdateInput {
  savedBy: UserUpdateOneRequiredWithoutSavedRepliesToEchosInVoidsInput
  originalReplyContent: ContentUpdateOneRequiredInput
  originalShoutContent: ContentUpdateOneRequiredInput
  originalVoidGeohash: String
  replyToEchoInVoid: ReplyToEchoInVoidUpdateOneRequiredWithoutSavedRepliesInput
}

input SavedReplyToEchoInVoidUpdateManyDataInput {
  originalVoidGeohash: String
}

input SavedReplyToEchoInVoidUpdateManyMutationInput {
  originalVoidGeohash: String
}

input SavedReplyToEchoInVoidUpdateManyWithoutReplyToEchoInVoidInput {
  create: [SavedReplyToEchoInVoidCreateWithoutReplyToEchoInVoidInput!]
  delete: [SavedReplyToEchoInVoidWhereUniqueInput!]
  connect: [SavedReplyToEchoInVoidWhereUniqueInput!]
  set: [SavedReplyToEchoInVoidWhereUniqueInput!]
  disconnect: [SavedReplyToEchoInVoidWhereUniqueInput!]
  update: [SavedReplyToEchoInVoidUpdateWithWhereUniqueWithoutReplyToEchoInVoidInput!]
  upsert: [SavedReplyToEchoInVoidUpsertWithWhereUniqueWithoutReplyToEchoInVoidInput!]
  deleteMany: [SavedReplyToEchoInVoidScalarWhereInput!]
  updateMany: [SavedReplyToEchoInVoidUpdateManyWithWhereNestedInput!]
}

input SavedReplyToEchoInVoidUpdateManyWithoutSavedByInput {
  create: [SavedReplyToEchoInVoidCreateWithoutSavedByInput!]
  delete: [SavedReplyToEchoInVoidWhereUniqueInput!]
  connect: [SavedReplyToEchoInVoidWhereUniqueInput!]
  set: [SavedReplyToEchoInVoidWhereUniqueInput!]
  disconnect: [SavedReplyToEchoInVoidWhereUniqueInput!]
  update: [SavedReplyToEchoInVoidUpdateWithWhereUniqueWithoutSavedByInput!]
  upsert: [SavedReplyToEchoInVoidUpsertWithWhereUniqueWithoutSavedByInput!]
  deleteMany: [SavedReplyToEchoInVoidScalarWhereInput!]
  updateMany: [SavedReplyToEchoInVoidUpdateManyWithWhereNestedInput!]
}

input SavedReplyToEchoInVoidUpdateManyWithWhereNestedInput {
  where: SavedReplyToEchoInVoidScalarWhereInput!
  data: SavedReplyToEchoInVoidUpdateManyDataInput!
}

input SavedReplyToEchoInVoidUpdateWithoutReplyToEchoInVoidDataInput {
  savedBy: UserUpdateOneRequiredWithoutSavedRepliesToEchosInVoidsInput
  originalReplyContent: ContentUpdateOneRequiredInput
  originalShoutContent: ContentUpdateOneRequiredInput
  originalVoidGeohash: String
}

input SavedReplyToEchoInVoidUpdateWithoutSavedByDataInput {
  originalReplyContent: ContentUpdateOneRequiredInput
  originalShoutContent: ContentUpdateOneRequiredInput
  originalVoidGeohash: String
  replyToEchoInVoid: ReplyToEchoInVoidUpdateOneRequiredWithoutSavedRepliesInput
}

input SavedReplyToEchoInVoidUpdateWithWhereUniqueWithoutReplyToEchoInVoidInput {
  where: SavedReplyToEchoInVoidWhereUniqueInput!
  data: SavedReplyToEchoInVoidUpdateWithoutReplyToEchoInVoidDataInput!
}

input SavedReplyToEchoInVoidUpdateWithWhereUniqueWithoutSavedByInput {
  where: SavedReplyToEchoInVoidWhereUniqueInput!
  data: SavedReplyToEchoInVoidUpdateWithoutSavedByDataInput!
}

input SavedReplyToEchoInVoidUpsertWithWhereUniqueWithoutReplyToEchoInVoidInput {
  where: SavedReplyToEchoInVoidWhereUniqueInput!
  update: SavedReplyToEchoInVoidUpdateWithoutReplyToEchoInVoidDataInput!
  create: SavedReplyToEchoInVoidCreateWithoutReplyToEchoInVoidInput!
}

input SavedReplyToEchoInVoidUpsertWithWhereUniqueWithoutSavedByInput {
  where: SavedReplyToEchoInVoidWhereUniqueInput!
  update: SavedReplyToEchoInVoidUpdateWithoutSavedByDataInput!
  create: SavedReplyToEchoInVoidCreateWithoutSavedByInput!
}

input SavedReplyToEchoInVoidWhereInput {
  savedReplyToEchoInVoid: ID
  savedReplyToEchoInVoid_not: ID
  savedReplyToEchoInVoid_in: [ID!]
  savedReplyToEchoInVoid_not_in: [ID!]
  savedReplyToEchoInVoid_lt: ID
  savedReplyToEchoInVoid_lte: ID
  savedReplyToEchoInVoid_gt: ID
  savedReplyToEchoInVoid_gte: ID
  savedReplyToEchoInVoid_contains: ID
  savedReplyToEchoInVoid_not_contains: ID
  savedReplyToEchoInVoid_starts_with: ID
  savedReplyToEchoInVoid_not_starts_with: ID
  savedReplyToEchoInVoid_ends_with: ID
  savedReplyToEchoInVoid_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  savedBy: UserWhereInput
  originalReplyContent: ContentWhereInput
  originalShoutContent: ContentWhereInput
  originalVoidGeohash: String
  originalVoidGeohash_not: String
  originalVoidGeohash_in: [String!]
  originalVoidGeohash_not_in: [String!]
  originalVoidGeohash_lt: String
  originalVoidGeohash_lte: String
  originalVoidGeohash_gt: String
  originalVoidGeohash_gte: String
  originalVoidGeohash_contains: String
  originalVoidGeohash_not_contains: String
  originalVoidGeohash_starts_with: String
  originalVoidGeohash_not_starts_with: String
  originalVoidGeohash_ends_with: String
  originalVoidGeohash_not_ends_with: String
  replyToEchoInVoid: ReplyToEchoInVoidWhereInput
  AND: [SavedReplyToEchoInVoidWhereInput!]
  OR: [SavedReplyToEchoInVoidWhereInput!]
  NOT: [SavedReplyToEchoInVoidWhereInput!]
}

input SavedReplyToEchoInVoidWhereUniqueInput {
  savedReplyToEchoInVoid: ID
}

type SavedReplyToShoutInVoid {
  savedReplyToShoutInVoidId: ID!
  createdAt: DateTime!
  savedBy: User!
  originalReplyContent: Content!
  originalShoutContent: Content!
  originalVoidGeohash: String!
  replyToShoutInVoid: ReplyToShoutInVoid!
}

type SavedReplyToShoutInVoidConnection {
  pageInfo: PageInfo!
  edges: [SavedReplyToShoutInVoidEdge]!
  aggregate: AggregateSavedReplyToShoutInVoid!
}

input SavedReplyToShoutInVoidCreateInput {
  savedReplyToShoutInVoidId: ID
  savedBy: UserCreateOneWithoutSavedRepliesToShoutsInVoidsInput!
  originalReplyContent: ContentCreateOneInput!
  originalShoutContent: ContentCreateOneInput!
  originalVoidGeohash: String!
  replyToShoutInVoid: ReplyToShoutInVoidCreateOneWithoutSavedRepliesInput!
}

input SavedReplyToShoutInVoidCreateManyWithoutReplyToShoutInVoidInput {
  create: [SavedReplyToShoutInVoidCreateWithoutReplyToShoutInVoidInput!]
  connect: [SavedReplyToShoutInVoidWhereUniqueInput!]
}

input SavedReplyToShoutInVoidCreateManyWithoutSavedByInput {
  create: [SavedReplyToShoutInVoidCreateWithoutSavedByInput!]
  connect: [SavedReplyToShoutInVoidWhereUniqueInput!]
}

input SavedReplyToShoutInVoidCreateWithoutReplyToShoutInVoidInput {
  savedReplyToShoutInVoidId: ID
  savedBy: UserCreateOneWithoutSavedRepliesToShoutsInVoidsInput!
  originalReplyContent: ContentCreateOneInput!
  originalShoutContent: ContentCreateOneInput!
  originalVoidGeohash: String!
}

input SavedReplyToShoutInVoidCreateWithoutSavedByInput {
  savedReplyToShoutInVoidId: ID
  originalReplyContent: ContentCreateOneInput!
  originalShoutContent: ContentCreateOneInput!
  originalVoidGeohash: String!
  replyToShoutInVoid: ReplyToShoutInVoidCreateOneWithoutSavedRepliesInput!
}

type SavedReplyToShoutInVoidEdge {
  node: SavedReplyToShoutInVoid!
  cursor: String!
}

enum SavedReplyToShoutInVoidOrderByInput {
  savedReplyToShoutInVoidId_ASC
  savedReplyToShoutInVoidId_DESC
  createdAt_ASC
  createdAt_DESC
  originalVoidGeohash_ASC
  originalVoidGeohash_DESC
}

type SavedReplyToShoutInVoidPreviousValues {
  savedReplyToShoutInVoidId: ID!
  createdAt: DateTime!
  originalVoidGeohash: String!
}

input SavedReplyToShoutInVoidScalarWhereInput {
  savedReplyToShoutInVoidId: ID
  savedReplyToShoutInVoidId_not: ID
  savedReplyToShoutInVoidId_in: [ID!]
  savedReplyToShoutInVoidId_not_in: [ID!]
  savedReplyToShoutInVoidId_lt: ID
  savedReplyToShoutInVoidId_lte: ID
  savedReplyToShoutInVoidId_gt: ID
  savedReplyToShoutInVoidId_gte: ID
  savedReplyToShoutInVoidId_contains: ID
  savedReplyToShoutInVoidId_not_contains: ID
  savedReplyToShoutInVoidId_starts_with: ID
  savedReplyToShoutInVoidId_not_starts_with: ID
  savedReplyToShoutInVoidId_ends_with: ID
  savedReplyToShoutInVoidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  originalVoidGeohash: String
  originalVoidGeohash_not: String
  originalVoidGeohash_in: [String!]
  originalVoidGeohash_not_in: [String!]
  originalVoidGeohash_lt: String
  originalVoidGeohash_lte: String
  originalVoidGeohash_gt: String
  originalVoidGeohash_gte: String
  originalVoidGeohash_contains: String
  originalVoidGeohash_not_contains: String
  originalVoidGeohash_starts_with: String
  originalVoidGeohash_not_starts_with: String
  originalVoidGeohash_ends_with: String
  originalVoidGeohash_not_ends_with: String
  AND: [SavedReplyToShoutInVoidScalarWhereInput!]
  OR: [SavedReplyToShoutInVoidScalarWhereInput!]
  NOT: [SavedReplyToShoutInVoidScalarWhereInput!]
}

type SavedReplyToShoutInVoidSubscriptionPayload {
  mutation: MutationType!
  node: SavedReplyToShoutInVoid
  updatedFields: [String!]
  previousValues: SavedReplyToShoutInVoidPreviousValues
}

input SavedReplyToShoutInVoidSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: SavedReplyToShoutInVoidWhereInput
  AND: [SavedReplyToShoutInVoidSubscriptionWhereInput!]
  OR: [SavedReplyToShoutInVoidSubscriptionWhereInput!]
  NOT: [SavedReplyToShoutInVoidSubscriptionWhereInput!]
}

input SavedReplyToShoutInVoidUpdateInput {
  savedBy: UserUpdateOneRequiredWithoutSavedRepliesToShoutsInVoidsInput
  originalReplyContent: ContentUpdateOneRequiredInput
  originalShoutContent: ContentUpdateOneRequiredInput
  originalVoidGeohash: String
  replyToShoutInVoid: ReplyToShoutInVoidUpdateOneRequiredWithoutSavedRepliesInput
}

input SavedReplyToShoutInVoidUpdateManyDataInput {
  originalVoidGeohash: String
}

input SavedReplyToShoutInVoidUpdateManyMutationInput {
  originalVoidGeohash: String
}

input SavedReplyToShoutInVoidUpdateManyWithoutReplyToShoutInVoidInput {
  create: [SavedReplyToShoutInVoidCreateWithoutReplyToShoutInVoidInput!]
  delete: [SavedReplyToShoutInVoidWhereUniqueInput!]
  connect: [SavedReplyToShoutInVoidWhereUniqueInput!]
  set: [SavedReplyToShoutInVoidWhereUniqueInput!]
  disconnect: [SavedReplyToShoutInVoidWhereUniqueInput!]
  update: [SavedReplyToShoutInVoidUpdateWithWhereUniqueWithoutReplyToShoutInVoidInput!]
  upsert: [SavedReplyToShoutInVoidUpsertWithWhereUniqueWithoutReplyToShoutInVoidInput!]
  deleteMany: [SavedReplyToShoutInVoidScalarWhereInput!]
  updateMany: [SavedReplyToShoutInVoidUpdateManyWithWhereNestedInput!]
}

input SavedReplyToShoutInVoidUpdateManyWithoutSavedByInput {
  create: [SavedReplyToShoutInVoidCreateWithoutSavedByInput!]
  delete: [SavedReplyToShoutInVoidWhereUniqueInput!]
  connect: [SavedReplyToShoutInVoidWhereUniqueInput!]
  set: [SavedReplyToShoutInVoidWhereUniqueInput!]
  disconnect: [SavedReplyToShoutInVoidWhereUniqueInput!]
  update: [SavedReplyToShoutInVoidUpdateWithWhereUniqueWithoutSavedByInput!]
  upsert: [SavedReplyToShoutInVoidUpsertWithWhereUniqueWithoutSavedByInput!]
  deleteMany: [SavedReplyToShoutInVoidScalarWhereInput!]
  updateMany: [SavedReplyToShoutInVoidUpdateManyWithWhereNestedInput!]
}

input SavedReplyToShoutInVoidUpdateManyWithWhereNestedInput {
  where: SavedReplyToShoutInVoidScalarWhereInput!
  data: SavedReplyToShoutInVoidUpdateManyDataInput!
}

input SavedReplyToShoutInVoidUpdateWithoutReplyToShoutInVoidDataInput {
  savedBy: UserUpdateOneRequiredWithoutSavedRepliesToShoutsInVoidsInput
  originalReplyContent: ContentUpdateOneRequiredInput
  originalShoutContent: ContentUpdateOneRequiredInput
  originalVoidGeohash: String
}

input SavedReplyToShoutInVoidUpdateWithoutSavedByDataInput {
  originalReplyContent: ContentUpdateOneRequiredInput
  originalShoutContent: ContentUpdateOneRequiredInput
  originalVoidGeohash: String
  replyToShoutInVoid: ReplyToShoutInVoidUpdateOneRequiredWithoutSavedRepliesInput
}

input SavedReplyToShoutInVoidUpdateWithWhereUniqueWithoutReplyToShoutInVoidInput {
  where: SavedReplyToShoutInVoidWhereUniqueInput!
  data: SavedReplyToShoutInVoidUpdateWithoutReplyToShoutInVoidDataInput!
}

input SavedReplyToShoutInVoidUpdateWithWhereUniqueWithoutSavedByInput {
  where: SavedReplyToShoutInVoidWhereUniqueInput!
  data: SavedReplyToShoutInVoidUpdateWithoutSavedByDataInput!
}

input SavedReplyToShoutInVoidUpsertWithWhereUniqueWithoutReplyToShoutInVoidInput {
  where: SavedReplyToShoutInVoidWhereUniqueInput!
  update: SavedReplyToShoutInVoidUpdateWithoutReplyToShoutInVoidDataInput!
  create: SavedReplyToShoutInVoidCreateWithoutReplyToShoutInVoidInput!
}

input SavedReplyToShoutInVoidUpsertWithWhereUniqueWithoutSavedByInput {
  where: SavedReplyToShoutInVoidWhereUniqueInput!
  update: SavedReplyToShoutInVoidUpdateWithoutSavedByDataInput!
  create: SavedReplyToShoutInVoidCreateWithoutSavedByInput!
}

input SavedReplyToShoutInVoidWhereInput {
  savedReplyToShoutInVoidId: ID
  savedReplyToShoutInVoidId_not: ID
  savedReplyToShoutInVoidId_in: [ID!]
  savedReplyToShoutInVoidId_not_in: [ID!]
  savedReplyToShoutInVoidId_lt: ID
  savedReplyToShoutInVoidId_lte: ID
  savedReplyToShoutInVoidId_gt: ID
  savedReplyToShoutInVoidId_gte: ID
  savedReplyToShoutInVoidId_contains: ID
  savedReplyToShoutInVoidId_not_contains: ID
  savedReplyToShoutInVoidId_starts_with: ID
  savedReplyToShoutInVoidId_not_starts_with: ID
  savedReplyToShoutInVoidId_ends_with: ID
  savedReplyToShoutInVoidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  savedBy: UserWhereInput
  originalReplyContent: ContentWhereInput
  originalShoutContent: ContentWhereInput
  originalVoidGeohash: String
  originalVoidGeohash_not: String
  originalVoidGeohash_in: [String!]
  originalVoidGeohash_not_in: [String!]
  originalVoidGeohash_lt: String
  originalVoidGeohash_lte: String
  originalVoidGeohash_gt: String
  originalVoidGeohash_gte: String
  originalVoidGeohash_contains: String
  originalVoidGeohash_not_contains: String
  originalVoidGeohash_starts_with: String
  originalVoidGeohash_not_starts_with: String
  originalVoidGeohash_ends_with: String
  originalVoidGeohash_not_ends_with: String
  replyToShoutInVoid: ReplyToShoutInVoidWhereInput
  AND: [SavedReplyToShoutInVoidWhereInput!]
  OR: [SavedReplyToShoutInVoidWhereInput!]
  NOT: [SavedReplyToShoutInVoidWhereInput!]
}

input SavedReplyToShoutInVoidWhereUniqueInput {
  savedReplyToShoutInVoidId: ID
}

type SavedShout {
  savedShoutId: ID!
  createdAt: DateTime!
  savedByUser: User!
  originalContent: Content!
  originalShoutVoidGeohash: String!
  shoutInVoid: ShoutInVoid!
  echoEdges(where: EchoEdgeWhereInput, orderBy: EchoEdgeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [EchoEdge!]
}

type SavedShoutConnection {
  pageInfo: PageInfo!
  edges: [SavedShoutEdge]!
  aggregate: AggregateSavedShout!
}

input SavedShoutCreateInput {
  savedShoutId: ID
  savedByUser: UserCreateOneWithoutSavedShoutsInput!
  originalContent: ContentCreateOneInput!
  originalShoutVoidGeohash: String!
  shoutInVoid: ShoutInVoidCreateOneWithoutSavedShoutsInput!
  echoEdges: EchoEdgeCreateManyWithoutSavedShoutInput
}

input SavedShoutCreateManyWithoutSavedByUserInput {
  create: [SavedShoutCreateWithoutSavedByUserInput!]
  connect: [SavedShoutWhereUniqueInput!]
}

input SavedShoutCreateManyWithoutShoutInVoidInput {
  create: [SavedShoutCreateWithoutShoutInVoidInput!]
  connect: [SavedShoutWhereUniqueInput!]
}

input SavedShoutCreateOneWithoutEchoEdgesInput {
  create: SavedShoutCreateWithoutEchoEdgesInput
  connect: SavedShoutWhereUniqueInput
}

input SavedShoutCreateWithoutEchoEdgesInput {
  savedShoutId: ID
  savedByUser: UserCreateOneWithoutSavedShoutsInput!
  originalContent: ContentCreateOneInput!
  originalShoutVoidGeohash: String!
  shoutInVoid: ShoutInVoidCreateOneWithoutSavedShoutsInput!
}

input SavedShoutCreateWithoutSavedByUserInput {
  savedShoutId: ID
  originalContent: ContentCreateOneInput!
  originalShoutVoidGeohash: String!
  shoutInVoid: ShoutInVoidCreateOneWithoutSavedShoutsInput!
  echoEdges: EchoEdgeCreateManyWithoutSavedShoutInput
}

input SavedShoutCreateWithoutShoutInVoidInput {
  savedShoutId: ID
  savedByUser: UserCreateOneWithoutSavedShoutsInput!
  originalContent: ContentCreateOneInput!
  originalShoutVoidGeohash: String!
  echoEdges: EchoEdgeCreateManyWithoutSavedShoutInput
}

type SavedShoutEdge {
  node: SavedShout!
  cursor: String!
}

enum SavedShoutOrderByInput {
  savedShoutId_ASC
  savedShoutId_DESC
  createdAt_ASC
  createdAt_DESC
  originalShoutVoidGeohash_ASC
  originalShoutVoidGeohash_DESC
}

type SavedShoutPreviousValues {
  savedShoutId: ID!
  createdAt: DateTime!
  originalShoutVoidGeohash: String!
}

input SavedShoutScalarWhereInput {
  savedShoutId: ID
  savedShoutId_not: ID
  savedShoutId_in: [ID!]
  savedShoutId_not_in: [ID!]
  savedShoutId_lt: ID
  savedShoutId_lte: ID
  savedShoutId_gt: ID
  savedShoutId_gte: ID
  savedShoutId_contains: ID
  savedShoutId_not_contains: ID
  savedShoutId_starts_with: ID
  savedShoutId_not_starts_with: ID
  savedShoutId_ends_with: ID
  savedShoutId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  originalShoutVoidGeohash: String
  originalShoutVoidGeohash_not: String
  originalShoutVoidGeohash_in: [String!]
  originalShoutVoidGeohash_not_in: [String!]
  originalShoutVoidGeohash_lt: String
  originalShoutVoidGeohash_lte: String
  originalShoutVoidGeohash_gt: String
  originalShoutVoidGeohash_gte: String
  originalShoutVoidGeohash_contains: String
  originalShoutVoidGeohash_not_contains: String
  originalShoutVoidGeohash_starts_with: String
  originalShoutVoidGeohash_not_starts_with: String
  originalShoutVoidGeohash_ends_with: String
  originalShoutVoidGeohash_not_ends_with: String
  AND: [SavedShoutScalarWhereInput!]
  OR: [SavedShoutScalarWhereInput!]
  NOT: [SavedShoutScalarWhereInput!]
}

type SavedShoutSubscriptionPayload {
  mutation: MutationType!
  node: SavedShout
  updatedFields: [String!]
  previousValues: SavedShoutPreviousValues
}

input SavedShoutSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: SavedShoutWhereInput
  AND: [SavedShoutSubscriptionWhereInput!]
  OR: [SavedShoutSubscriptionWhereInput!]
  NOT: [SavedShoutSubscriptionWhereInput!]
}

input SavedShoutUpdateInput {
  savedByUser: UserUpdateOneRequiredWithoutSavedShoutsInput
  originalContent: ContentUpdateOneRequiredInput
  originalShoutVoidGeohash: String
  shoutInVoid: ShoutInVoidUpdateOneRequiredWithoutSavedShoutsInput
  echoEdges: EchoEdgeUpdateManyWithoutSavedShoutInput
}

input SavedShoutUpdateManyDataInput {
  originalShoutVoidGeohash: String
}

input SavedShoutUpdateManyMutationInput {
  originalShoutVoidGeohash: String
}

input SavedShoutUpdateManyWithoutSavedByUserInput {
  create: [SavedShoutCreateWithoutSavedByUserInput!]
  delete: [SavedShoutWhereUniqueInput!]
  connect: [SavedShoutWhereUniqueInput!]
  set: [SavedShoutWhereUniqueInput!]
  disconnect: [SavedShoutWhereUniqueInput!]
  update: [SavedShoutUpdateWithWhereUniqueWithoutSavedByUserInput!]
  upsert: [SavedShoutUpsertWithWhereUniqueWithoutSavedByUserInput!]
  deleteMany: [SavedShoutScalarWhereInput!]
  updateMany: [SavedShoutUpdateManyWithWhereNestedInput!]
}

input SavedShoutUpdateManyWithoutShoutInVoidInput {
  create: [SavedShoutCreateWithoutShoutInVoidInput!]
  delete: [SavedShoutWhereUniqueInput!]
  connect: [SavedShoutWhereUniqueInput!]
  set: [SavedShoutWhereUniqueInput!]
  disconnect: [SavedShoutWhereUniqueInput!]
  update: [SavedShoutUpdateWithWhereUniqueWithoutShoutInVoidInput!]
  upsert: [SavedShoutUpsertWithWhereUniqueWithoutShoutInVoidInput!]
  deleteMany: [SavedShoutScalarWhereInput!]
  updateMany: [SavedShoutUpdateManyWithWhereNestedInput!]
}

input SavedShoutUpdateManyWithWhereNestedInput {
  where: SavedShoutScalarWhereInput!
  data: SavedShoutUpdateManyDataInput!
}

input SavedShoutUpdateOneWithoutEchoEdgesInput {
  create: SavedShoutCreateWithoutEchoEdgesInput
  update: SavedShoutUpdateWithoutEchoEdgesDataInput
  upsert: SavedShoutUpsertWithoutEchoEdgesInput
  delete: Boolean
  disconnect: Boolean
  connect: SavedShoutWhereUniqueInput
}

input SavedShoutUpdateWithoutEchoEdgesDataInput {
  savedByUser: UserUpdateOneRequiredWithoutSavedShoutsInput
  originalContent: ContentUpdateOneRequiredInput
  originalShoutVoidGeohash: String
  shoutInVoid: ShoutInVoidUpdateOneRequiredWithoutSavedShoutsInput
}

input SavedShoutUpdateWithoutSavedByUserDataInput {
  originalContent: ContentUpdateOneRequiredInput
  originalShoutVoidGeohash: String
  shoutInVoid: ShoutInVoidUpdateOneRequiredWithoutSavedShoutsInput
  echoEdges: EchoEdgeUpdateManyWithoutSavedShoutInput
}

input SavedShoutUpdateWithoutShoutInVoidDataInput {
  savedByUser: UserUpdateOneRequiredWithoutSavedShoutsInput
  originalContent: ContentUpdateOneRequiredInput
  originalShoutVoidGeohash: String
  echoEdges: EchoEdgeUpdateManyWithoutSavedShoutInput
}

input SavedShoutUpdateWithWhereUniqueWithoutSavedByUserInput {
  where: SavedShoutWhereUniqueInput!
  data: SavedShoutUpdateWithoutSavedByUserDataInput!
}

input SavedShoutUpdateWithWhereUniqueWithoutShoutInVoidInput {
  where: SavedShoutWhereUniqueInput!
  data: SavedShoutUpdateWithoutShoutInVoidDataInput!
}

input SavedShoutUpsertWithoutEchoEdgesInput {
  update: SavedShoutUpdateWithoutEchoEdgesDataInput!
  create: SavedShoutCreateWithoutEchoEdgesInput!
}

input SavedShoutUpsertWithWhereUniqueWithoutSavedByUserInput {
  where: SavedShoutWhereUniqueInput!
  update: SavedShoutUpdateWithoutSavedByUserDataInput!
  create: SavedShoutCreateWithoutSavedByUserInput!
}

input SavedShoutUpsertWithWhereUniqueWithoutShoutInVoidInput {
  where: SavedShoutWhereUniqueInput!
  update: SavedShoutUpdateWithoutShoutInVoidDataInput!
  create: SavedShoutCreateWithoutShoutInVoidInput!
}

input SavedShoutWhereInput {
  savedShoutId: ID
  savedShoutId_not: ID
  savedShoutId_in: [ID!]
  savedShoutId_not_in: [ID!]
  savedShoutId_lt: ID
  savedShoutId_lte: ID
  savedShoutId_gt: ID
  savedShoutId_gte: ID
  savedShoutId_contains: ID
  savedShoutId_not_contains: ID
  savedShoutId_starts_with: ID
  savedShoutId_not_starts_with: ID
  savedShoutId_ends_with: ID
  savedShoutId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  savedByUser: UserWhereInput
  originalContent: ContentWhereInput
  originalShoutVoidGeohash: String
  originalShoutVoidGeohash_not: String
  originalShoutVoidGeohash_in: [String!]
  originalShoutVoidGeohash_not_in: [String!]
  originalShoutVoidGeohash_lt: String
  originalShoutVoidGeohash_lte: String
  originalShoutVoidGeohash_gt: String
  originalShoutVoidGeohash_gte: String
  originalShoutVoidGeohash_contains: String
  originalShoutVoidGeohash_not_contains: String
  originalShoutVoidGeohash_starts_with: String
  originalShoutVoidGeohash_not_starts_with: String
  originalShoutVoidGeohash_ends_with: String
  originalShoutVoidGeohash_not_ends_with: String
  shoutInVoid: ShoutInVoidWhereInput
  echoEdges_every: EchoEdgeWhereInput
  echoEdges_some: EchoEdgeWhereInput
  echoEdges_none: EchoEdgeWhereInput
  AND: [SavedShoutWhereInput!]
  OR: [SavedShoutWhereInput!]
  NOT: [SavedShoutWhereInput!]
}

input SavedShoutWhereUniqueInput {
  savedShoutId: ID
}

type SavedVoid {
  savedVoidId: ID!
  createdAt: DateTime!
  createdBy: User!
  voidGeohash: String!
}

type SavedVoidConnection {
  pageInfo: PageInfo!
  edges: [SavedVoidEdge]!
  aggregate: AggregateSavedVoid!
}

input SavedVoidCreateInput {
  savedVoidId: ID
  createdBy: UserCreateOneWithoutSavedVoidsInput!
  voidGeohash: String!
}

input SavedVoidCreateManyWithoutCreatedByInput {
  create: [SavedVoidCreateWithoutCreatedByInput!]
  connect: [SavedVoidWhereUniqueInput!]
}

input SavedVoidCreateWithoutCreatedByInput {
  savedVoidId: ID
  voidGeohash: String!
}

type SavedVoidEdge {
  node: SavedVoid!
  cursor: String!
}

enum SavedVoidOrderByInput {
  savedVoidId_ASC
  savedVoidId_DESC
  createdAt_ASC
  createdAt_DESC
  voidGeohash_ASC
  voidGeohash_DESC
}

type SavedVoidPreviousValues {
  savedVoidId: ID!
  createdAt: DateTime!
  voidGeohash: String!
}

input SavedVoidScalarWhereInput {
  savedVoidId: ID
  savedVoidId_not: ID
  savedVoidId_in: [ID!]
  savedVoidId_not_in: [ID!]
  savedVoidId_lt: ID
  savedVoidId_lte: ID
  savedVoidId_gt: ID
  savedVoidId_gte: ID
  savedVoidId_contains: ID
  savedVoidId_not_contains: ID
  savedVoidId_starts_with: ID
  savedVoidId_not_starts_with: ID
  savedVoidId_ends_with: ID
  savedVoidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  voidGeohash: String
  voidGeohash_not: String
  voidGeohash_in: [String!]
  voidGeohash_not_in: [String!]
  voidGeohash_lt: String
  voidGeohash_lte: String
  voidGeohash_gt: String
  voidGeohash_gte: String
  voidGeohash_contains: String
  voidGeohash_not_contains: String
  voidGeohash_starts_with: String
  voidGeohash_not_starts_with: String
  voidGeohash_ends_with: String
  voidGeohash_not_ends_with: String
  AND: [SavedVoidScalarWhereInput!]
  OR: [SavedVoidScalarWhereInput!]
  NOT: [SavedVoidScalarWhereInput!]
}

type SavedVoidSubscriptionPayload {
  mutation: MutationType!
  node: SavedVoid
  updatedFields: [String!]
  previousValues: SavedVoidPreviousValues
}

input SavedVoidSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: SavedVoidWhereInput
  AND: [SavedVoidSubscriptionWhereInput!]
  OR: [SavedVoidSubscriptionWhereInput!]
  NOT: [SavedVoidSubscriptionWhereInput!]
}

input SavedVoidUpdateInput {
  createdBy: UserUpdateOneRequiredWithoutSavedVoidsInput
  voidGeohash: String
}

input SavedVoidUpdateManyDataInput {
  voidGeohash: String
}

input SavedVoidUpdateManyMutationInput {
  voidGeohash: String
}

input SavedVoidUpdateManyWithoutCreatedByInput {
  create: [SavedVoidCreateWithoutCreatedByInput!]
  delete: [SavedVoidWhereUniqueInput!]
  connect: [SavedVoidWhereUniqueInput!]
  set: [SavedVoidWhereUniqueInput!]
  disconnect: [SavedVoidWhereUniqueInput!]
  update: [SavedVoidUpdateWithWhereUniqueWithoutCreatedByInput!]
  upsert: [SavedVoidUpsertWithWhereUniqueWithoutCreatedByInput!]
  deleteMany: [SavedVoidScalarWhereInput!]
  updateMany: [SavedVoidUpdateManyWithWhereNestedInput!]
}

input SavedVoidUpdateManyWithWhereNestedInput {
  where: SavedVoidScalarWhereInput!
  data: SavedVoidUpdateManyDataInput!
}

input SavedVoidUpdateWithoutCreatedByDataInput {
  voidGeohash: String
}

input SavedVoidUpdateWithWhereUniqueWithoutCreatedByInput {
  where: SavedVoidWhereUniqueInput!
  data: SavedVoidUpdateWithoutCreatedByDataInput!
}

input SavedVoidUpsertWithWhereUniqueWithoutCreatedByInput {
  where: SavedVoidWhereUniqueInput!
  update: SavedVoidUpdateWithoutCreatedByDataInput!
  create: SavedVoidCreateWithoutCreatedByInput!
}

input SavedVoidWhereInput {
  savedVoidId: ID
  savedVoidId_not: ID
  savedVoidId_in: [ID!]
  savedVoidId_not_in: [ID!]
  savedVoidId_lt: ID
  savedVoidId_lte: ID
  savedVoidId_gt: ID
  savedVoidId_gte: ID
  savedVoidId_contains: ID
  savedVoidId_not_contains: ID
  savedVoidId_starts_with: ID
  savedVoidId_not_starts_with: ID
  savedVoidId_ends_with: ID
  savedVoidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdBy: UserWhereInput
  voidGeohash: String
  voidGeohash_not: String
  voidGeohash_in: [String!]
  voidGeohash_not_in: [String!]
  voidGeohash_lt: String
  voidGeohash_lte: String
  voidGeohash_gt: String
  voidGeohash_gte: String
  voidGeohash_contains: String
  voidGeohash_not_contains: String
  voidGeohash_starts_with: String
  voidGeohash_not_starts_with: String
  voidGeohash_ends_with: String
  voidGeohash_not_ends_with: String
  AND: [SavedVoidWhereInput!]
  OR: [SavedVoidWhereInput!]
  NOT: [SavedVoidWhereInput!]
}

input SavedVoidWhereUniqueInput {
  savedVoidId: ID
}

type ShoutInVoid {
  shoutInVoidId: ID!
  createdAt: DateTime!
  shoutedBy: User!
  content: Content!
  voteCount: Int!
  nvoid: NVoid!
  savedShouts(where: SavedShoutWhereInput, orderBy: SavedShoutOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SavedShout!]
  replies(where: ReplyToShoutInVoidWhereInput, orderBy: ReplyToShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ReplyToShoutInVoid!]
  echoEdges(where: EchoEdgeWhereInput, orderBy: EchoEdgeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [EchoEdge!]
}

type ShoutInVoidConnection {
  pageInfo: PageInfo!
  edges: [ShoutInVoidEdge]!
  aggregate: AggregateShoutInVoid!
}

input ShoutInVoidCreateInput {
  shoutInVoidId: ID
  shoutedBy: UserCreateOneWithoutShoutsInVoidsInput!
  content: ContentCreateOneInput!
  voteCount: Int!
  nvoid: NVoidCreateOneWithoutShoutsInput!
  savedShouts: SavedShoutCreateManyWithoutShoutInVoidInput
  replies: ReplyToShoutInVoidCreateManyWithoutShoutInVoidInput
  echoEdges: EchoEdgeCreateManyWithoutShoutInVoidInput
}

input ShoutInVoidCreateManyWithoutNvoidInput {
  create: [ShoutInVoidCreateWithoutNvoidInput!]
  connect: [ShoutInVoidWhereUniqueInput!]
}

input ShoutInVoidCreateManyWithoutShoutedByInput {
  create: [ShoutInVoidCreateWithoutShoutedByInput!]
  connect: [ShoutInVoidWhereUniqueInput!]
}

input ShoutInVoidCreateOneWithoutEchoEdgesInput {
  create: ShoutInVoidCreateWithoutEchoEdgesInput
  connect: ShoutInVoidWhereUniqueInput
}

input ShoutInVoidCreateOneWithoutRepliesInput {
  create: ShoutInVoidCreateWithoutRepliesInput
  connect: ShoutInVoidWhereUniqueInput
}

input ShoutInVoidCreateOneWithoutSavedShoutsInput {
  create: ShoutInVoidCreateWithoutSavedShoutsInput
  connect: ShoutInVoidWhereUniqueInput
}

input ShoutInVoidCreateWithoutEchoEdgesInput {
  shoutInVoidId: ID
  shoutedBy: UserCreateOneWithoutShoutsInVoidsInput!
  content: ContentCreateOneInput!
  voteCount: Int!
  nvoid: NVoidCreateOneWithoutShoutsInput!
  savedShouts: SavedShoutCreateManyWithoutShoutInVoidInput
  replies: ReplyToShoutInVoidCreateManyWithoutShoutInVoidInput
}

input ShoutInVoidCreateWithoutNvoidInput {
  shoutInVoidId: ID
  shoutedBy: UserCreateOneWithoutShoutsInVoidsInput!
  content: ContentCreateOneInput!
  voteCount: Int!
  savedShouts: SavedShoutCreateManyWithoutShoutInVoidInput
  replies: ReplyToShoutInVoidCreateManyWithoutShoutInVoidInput
  echoEdges: EchoEdgeCreateManyWithoutShoutInVoidInput
}

input ShoutInVoidCreateWithoutRepliesInput {
  shoutInVoidId: ID
  shoutedBy: UserCreateOneWithoutShoutsInVoidsInput!
  content: ContentCreateOneInput!
  voteCount: Int!
  nvoid: NVoidCreateOneWithoutShoutsInput!
  savedShouts: SavedShoutCreateManyWithoutShoutInVoidInput
  echoEdges: EchoEdgeCreateManyWithoutShoutInVoidInput
}

input ShoutInVoidCreateWithoutSavedShoutsInput {
  shoutInVoidId: ID
  shoutedBy: UserCreateOneWithoutShoutsInVoidsInput!
  content: ContentCreateOneInput!
  voteCount: Int!
  nvoid: NVoidCreateOneWithoutShoutsInput!
  replies: ReplyToShoutInVoidCreateManyWithoutShoutInVoidInput
  echoEdges: EchoEdgeCreateManyWithoutShoutInVoidInput
}

input ShoutInVoidCreateWithoutShoutedByInput {
  shoutInVoidId: ID
  content: ContentCreateOneInput!
  voteCount: Int!
  nvoid: NVoidCreateOneWithoutShoutsInput!
  savedShouts: SavedShoutCreateManyWithoutShoutInVoidInput
  replies: ReplyToShoutInVoidCreateManyWithoutShoutInVoidInput
  echoEdges: EchoEdgeCreateManyWithoutShoutInVoidInput
}

type ShoutInVoidEdge {
  node: ShoutInVoid!
  cursor: String!
}

enum ShoutInVoidOrderByInput {
  shoutInVoidId_ASC
  shoutInVoidId_DESC
  createdAt_ASC
  createdAt_DESC
  voteCount_ASC
  voteCount_DESC
}

type ShoutInVoidPreviousValues {
  shoutInVoidId: ID!
  createdAt: DateTime!
  voteCount: Int!
}

input ShoutInVoidScalarWhereInput {
  shoutInVoidId: ID
  shoutInVoidId_not: ID
  shoutInVoidId_in: [ID!]
  shoutInVoidId_not_in: [ID!]
  shoutInVoidId_lt: ID
  shoutInVoidId_lte: ID
  shoutInVoidId_gt: ID
  shoutInVoidId_gte: ID
  shoutInVoidId_contains: ID
  shoutInVoidId_not_contains: ID
  shoutInVoidId_starts_with: ID
  shoutInVoidId_not_starts_with: ID
  shoutInVoidId_ends_with: ID
  shoutInVoidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  voteCount: Int
  voteCount_not: Int
  voteCount_in: [Int!]
  voteCount_not_in: [Int!]
  voteCount_lt: Int
  voteCount_lte: Int
  voteCount_gt: Int
  voteCount_gte: Int
  AND: [ShoutInVoidScalarWhereInput!]
  OR: [ShoutInVoidScalarWhereInput!]
  NOT: [ShoutInVoidScalarWhereInput!]
}

type ShoutInVoidSubscriptionPayload {
  mutation: MutationType!
  node: ShoutInVoid
  updatedFields: [String!]
  previousValues: ShoutInVoidPreviousValues
}

input ShoutInVoidSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ShoutInVoidWhereInput
  AND: [ShoutInVoidSubscriptionWhereInput!]
  OR: [ShoutInVoidSubscriptionWhereInput!]
  NOT: [ShoutInVoidSubscriptionWhereInput!]
}

input ShoutInVoidUpdateInput {
  shoutedBy: UserUpdateOneRequiredWithoutShoutsInVoidsInput
  content: ContentUpdateOneRequiredInput
  voteCount: Int
  nvoid: NVoidUpdateOneRequiredWithoutShoutsInput
  savedShouts: SavedShoutUpdateManyWithoutShoutInVoidInput
  replies: ReplyToShoutInVoidUpdateManyWithoutShoutInVoidInput
  echoEdges: EchoEdgeUpdateManyWithoutShoutInVoidInput
}

input ShoutInVoidUpdateManyDataInput {
  voteCount: Int
}

input ShoutInVoidUpdateManyMutationInput {
  voteCount: Int
}

input ShoutInVoidUpdateManyWithoutNvoidInput {
  create: [ShoutInVoidCreateWithoutNvoidInput!]
  delete: [ShoutInVoidWhereUniqueInput!]
  connect: [ShoutInVoidWhereUniqueInput!]
  set: [ShoutInVoidWhereUniqueInput!]
  disconnect: [ShoutInVoidWhereUniqueInput!]
  update: [ShoutInVoidUpdateWithWhereUniqueWithoutNvoidInput!]
  upsert: [ShoutInVoidUpsertWithWhereUniqueWithoutNvoidInput!]
  deleteMany: [ShoutInVoidScalarWhereInput!]
  updateMany: [ShoutInVoidUpdateManyWithWhereNestedInput!]
}

input ShoutInVoidUpdateManyWithoutShoutedByInput {
  create: [ShoutInVoidCreateWithoutShoutedByInput!]
  delete: [ShoutInVoidWhereUniqueInput!]
  connect: [ShoutInVoidWhereUniqueInput!]
  set: [ShoutInVoidWhereUniqueInput!]
  disconnect: [ShoutInVoidWhereUniqueInput!]
  update: [ShoutInVoidUpdateWithWhereUniqueWithoutShoutedByInput!]
  upsert: [ShoutInVoidUpsertWithWhereUniqueWithoutShoutedByInput!]
  deleteMany: [ShoutInVoidScalarWhereInput!]
  updateMany: [ShoutInVoidUpdateManyWithWhereNestedInput!]
}

input ShoutInVoidUpdateManyWithWhereNestedInput {
  where: ShoutInVoidScalarWhereInput!
  data: ShoutInVoidUpdateManyDataInput!
}

input ShoutInVoidUpdateOneRequiredWithoutRepliesInput {
  create: ShoutInVoidCreateWithoutRepliesInput
  update: ShoutInVoidUpdateWithoutRepliesDataInput
  upsert: ShoutInVoidUpsertWithoutRepliesInput
  connect: ShoutInVoidWhereUniqueInput
}

input ShoutInVoidUpdateOneRequiredWithoutSavedShoutsInput {
  create: ShoutInVoidCreateWithoutSavedShoutsInput
  update: ShoutInVoidUpdateWithoutSavedShoutsDataInput
  upsert: ShoutInVoidUpsertWithoutSavedShoutsInput
  connect: ShoutInVoidWhereUniqueInput
}

input ShoutInVoidUpdateOneWithoutEchoEdgesInput {
  create: ShoutInVoidCreateWithoutEchoEdgesInput
  update: ShoutInVoidUpdateWithoutEchoEdgesDataInput
  upsert: ShoutInVoidUpsertWithoutEchoEdgesInput
  delete: Boolean
  disconnect: Boolean
  connect: ShoutInVoidWhereUniqueInput
}

input ShoutInVoidUpdateWithoutEchoEdgesDataInput {
  shoutedBy: UserUpdateOneRequiredWithoutShoutsInVoidsInput
  content: ContentUpdateOneRequiredInput
  voteCount: Int
  nvoid: NVoidUpdateOneRequiredWithoutShoutsInput
  savedShouts: SavedShoutUpdateManyWithoutShoutInVoidInput
  replies: ReplyToShoutInVoidUpdateManyWithoutShoutInVoidInput
}

input ShoutInVoidUpdateWithoutNvoidDataInput {
  shoutedBy: UserUpdateOneRequiredWithoutShoutsInVoidsInput
  content: ContentUpdateOneRequiredInput
  voteCount: Int
  savedShouts: SavedShoutUpdateManyWithoutShoutInVoidInput
  replies: ReplyToShoutInVoidUpdateManyWithoutShoutInVoidInput
  echoEdges: EchoEdgeUpdateManyWithoutShoutInVoidInput
}

input ShoutInVoidUpdateWithoutRepliesDataInput {
  shoutedBy: UserUpdateOneRequiredWithoutShoutsInVoidsInput
  content: ContentUpdateOneRequiredInput
  voteCount: Int
  nvoid: NVoidUpdateOneRequiredWithoutShoutsInput
  savedShouts: SavedShoutUpdateManyWithoutShoutInVoidInput
  echoEdges: EchoEdgeUpdateManyWithoutShoutInVoidInput
}

input ShoutInVoidUpdateWithoutSavedShoutsDataInput {
  shoutedBy: UserUpdateOneRequiredWithoutShoutsInVoidsInput
  content: ContentUpdateOneRequiredInput
  voteCount: Int
  nvoid: NVoidUpdateOneRequiredWithoutShoutsInput
  replies: ReplyToShoutInVoidUpdateManyWithoutShoutInVoidInput
  echoEdges: EchoEdgeUpdateManyWithoutShoutInVoidInput
}

input ShoutInVoidUpdateWithoutShoutedByDataInput {
  content: ContentUpdateOneRequiredInput
  voteCount: Int
  nvoid: NVoidUpdateOneRequiredWithoutShoutsInput
  savedShouts: SavedShoutUpdateManyWithoutShoutInVoidInput
  replies: ReplyToShoutInVoidUpdateManyWithoutShoutInVoidInput
  echoEdges: EchoEdgeUpdateManyWithoutShoutInVoidInput
}

input ShoutInVoidUpdateWithWhereUniqueWithoutNvoidInput {
  where: ShoutInVoidWhereUniqueInput!
  data: ShoutInVoidUpdateWithoutNvoidDataInput!
}

input ShoutInVoidUpdateWithWhereUniqueWithoutShoutedByInput {
  where: ShoutInVoidWhereUniqueInput!
  data: ShoutInVoidUpdateWithoutShoutedByDataInput!
}

input ShoutInVoidUpsertWithoutEchoEdgesInput {
  update: ShoutInVoidUpdateWithoutEchoEdgesDataInput!
  create: ShoutInVoidCreateWithoutEchoEdgesInput!
}

input ShoutInVoidUpsertWithoutRepliesInput {
  update: ShoutInVoidUpdateWithoutRepliesDataInput!
  create: ShoutInVoidCreateWithoutRepliesInput!
}

input ShoutInVoidUpsertWithoutSavedShoutsInput {
  update: ShoutInVoidUpdateWithoutSavedShoutsDataInput!
  create: ShoutInVoidCreateWithoutSavedShoutsInput!
}

input ShoutInVoidUpsertWithWhereUniqueWithoutNvoidInput {
  where: ShoutInVoidWhereUniqueInput!
  update: ShoutInVoidUpdateWithoutNvoidDataInput!
  create: ShoutInVoidCreateWithoutNvoidInput!
}

input ShoutInVoidUpsertWithWhereUniqueWithoutShoutedByInput {
  where: ShoutInVoidWhereUniqueInput!
  update: ShoutInVoidUpdateWithoutShoutedByDataInput!
  create: ShoutInVoidCreateWithoutShoutedByInput!
}

input ShoutInVoidWhereInput {
  shoutInVoidId: ID
  shoutInVoidId_not: ID
  shoutInVoidId_in: [ID!]
  shoutInVoidId_not_in: [ID!]
  shoutInVoidId_lt: ID
  shoutInVoidId_lte: ID
  shoutInVoidId_gt: ID
  shoutInVoidId_gte: ID
  shoutInVoidId_contains: ID
  shoutInVoidId_not_contains: ID
  shoutInVoidId_starts_with: ID
  shoutInVoidId_not_starts_with: ID
  shoutInVoidId_ends_with: ID
  shoutInVoidId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  shoutedBy: UserWhereInput
  content: ContentWhereInput
  voteCount: Int
  voteCount_not: Int
  voteCount_in: [Int!]
  voteCount_not_in: [Int!]
  voteCount_lt: Int
  voteCount_lte: Int
  voteCount_gt: Int
  voteCount_gte: Int
  nvoid: NVoidWhereInput
  savedShouts_every: SavedShoutWhereInput
  savedShouts_some: SavedShoutWhereInput
  savedShouts_none: SavedShoutWhereInput
  replies_every: ReplyToShoutInVoidWhereInput
  replies_some: ReplyToShoutInVoidWhereInput
  replies_none: ReplyToShoutInVoidWhereInput
  echoEdges_every: EchoEdgeWhereInput
  echoEdges_some: EchoEdgeWhereInput
  echoEdges_none: EchoEdgeWhereInput
  AND: [ShoutInVoidWhereInput!]
  OR: [ShoutInVoidWhereInput!]
  NOT: [ShoutInVoidWhereInput!]
}

input ShoutInVoidWhereUniqueInput {
  shoutInVoidId: ID
}

type Subscription {
  content(where: ContentSubscriptionWhereInput): ContentSubscriptionPayload
  echoEdge(where: EchoEdgeSubscriptionWhereInput): EchoEdgeSubscriptionPayload
  echoInVoid(where: EchoInVoidSubscriptionWhereInput): EchoInVoidSubscriptionPayload
  nVoid(where: NVoidSubscriptionWhereInput): NVoidSubscriptionPayload
  replyToEchoInVoid(where: ReplyToEchoInVoidSubscriptionWhereInput): ReplyToEchoInVoidSubscriptionPayload
  replyToShoutInVoid(where: ReplyToShoutInVoidSubscriptionWhereInput): ReplyToShoutInVoidSubscriptionPayload
  savedEcho(where: SavedEchoSubscriptionWhereInput): SavedEchoSubscriptionPayload
  savedReplyToEchoInVoid(where: SavedReplyToEchoInVoidSubscriptionWhereInput): SavedReplyToEchoInVoidSubscriptionPayload
  savedReplyToShoutInVoid(where: SavedReplyToShoutInVoidSubscriptionWhereInput): SavedReplyToShoutInVoidSubscriptionPayload
  savedShout(where: SavedShoutSubscriptionWhereInput): SavedShoutSubscriptionPayload
  savedVoid(where: SavedVoidSubscriptionWhereInput): SavedVoidSubscriptionPayload
  shoutInVoid(where: ShoutInVoidSubscriptionWhereInput): ShoutInVoidSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
}

type User {
  userId: ID!
  createdAt: DateTime!
  username: String!
  password: String!
  currentLocationGeohash: String!
  shoutsInVoids(where: ShoutInVoidWhereInput, orderBy: ShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ShoutInVoid!]
  savedShouts(where: SavedShoutWhereInput, orderBy: SavedShoutOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SavedShout!]
  echosInVoids(where: EchoInVoidWhereInput, orderBy: EchoInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [EchoInVoid!]
  savedEchos(where: SavedEchoWhereInput, orderBy: SavedEchoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SavedEcho!]
  repliesToShoutsInVoids(where: ReplyToShoutInVoidWhereInput, orderBy: ReplyToShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ReplyToShoutInVoid!]
  savedRepliesToShoutsInVoids(where: SavedReplyToShoutInVoidWhereInput, orderBy: SavedReplyToShoutInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SavedReplyToShoutInVoid!]
  repliesToEchosInVoids(where: ReplyToEchoInVoidWhereInput, orderBy: ReplyToEchoInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ReplyToEchoInVoid!]
  savedRepliesToEchosInVoids(where: SavedReplyToEchoInVoidWhereInput, orderBy: SavedReplyToEchoInVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SavedReplyToEchoInVoid!]
  createdVoids(where: NVoidWhereInput, orderBy: NVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [NVoid!]
  savedVoids(where: SavedVoidWhereInput, orderBy: SavedVoidOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SavedVoid!]
}

type UserConnection {
  pageInfo: PageInfo!
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  userId: ID
  username: String!
  password: String!
  currentLocationGeohash: String!
  shoutsInVoids: ShoutInVoidCreateManyWithoutShoutedByInput
  savedShouts: SavedShoutCreateManyWithoutSavedByUserInput
  echosInVoids: EchoInVoidCreateManyWithoutEchoedByInput
  savedEchos: SavedEchoCreateManyWithoutSavedByInput
  repliesToShoutsInVoids: ReplyToShoutInVoidCreateManyWithoutCreatedByInput
  savedRepliesToShoutsInVoids: SavedReplyToShoutInVoidCreateManyWithoutSavedByInput
  repliesToEchosInVoids: ReplyToEchoInVoidCreateManyWithoutCreatedByInput
  savedRepliesToEchosInVoids: SavedReplyToEchoInVoidCreateManyWithoutSavedByInput
  createdVoids: NVoidCreateManyWithoutCreatedByInput
  savedVoids: SavedVoidCreateManyWithoutCreatedByInput
}

input UserCreateOneInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutCreatedVoidsInput {
  create: UserCreateWithoutCreatedVoidsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutEchosInVoidsInput {
  create: UserCreateWithoutEchosInVoidsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutRepliesToEchosInVoidsInput {
  create: UserCreateWithoutRepliesToEchosInVoidsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutRepliesToShoutsInVoidsInput {
  create: UserCreateWithoutRepliesToShoutsInVoidsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutSavedEchosInput {
  create: UserCreateWithoutSavedEchosInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutSavedRepliesToEchosInVoidsInput {
  create: UserCreateWithoutSavedRepliesToEchosInVoidsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutSavedRepliesToShoutsInVoidsInput {
  create: UserCreateWithoutSavedRepliesToShoutsInVoidsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutSavedShoutsInput {
  create: UserCreateWithoutSavedShoutsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutSavedVoidsInput {
  create: UserCreateWithoutSavedVoidsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutShoutsInVoidsInput {
  create: UserCreateWithoutShoutsInVoidsInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutCreatedVoidsInput {
  userId: ID
  username: String!
  password: String!
  currentLocationGeohash: String!
  shoutsInVoids: ShoutInVoidCreateManyWithoutShoutedByInput
  savedShouts: SavedShoutCreateManyWithoutSavedByUserInput
  echosInVoids: EchoInVoidCreateManyWithoutEchoedByInput
  savedEchos: SavedEchoCreateManyWithoutSavedByInput
  repliesToShoutsInVoids: ReplyToShoutInVoidCreateManyWithoutCreatedByInput
  savedRepliesToShoutsInVoids: SavedReplyToShoutInVoidCreateManyWithoutSavedByInput
  repliesToEchosInVoids: ReplyToEchoInVoidCreateManyWithoutCreatedByInput
  savedRepliesToEchosInVoids: SavedReplyToEchoInVoidCreateManyWithoutSavedByInput
  savedVoids: SavedVoidCreateManyWithoutCreatedByInput
}

input UserCreateWithoutEchosInVoidsInput {
  userId: ID
  username: String!
  password: String!
  currentLocationGeohash: String!
  shoutsInVoids: ShoutInVoidCreateManyWithoutShoutedByInput
  savedShouts: SavedShoutCreateManyWithoutSavedByUserInput
  savedEchos: SavedEchoCreateManyWithoutSavedByInput
  repliesToShoutsInVoids: ReplyToShoutInVoidCreateManyWithoutCreatedByInput
  savedRepliesToShoutsInVoids: SavedReplyToShoutInVoidCreateManyWithoutSavedByInput
  repliesToEchosInVoids: ReplyToEchoInVoidCreateManyWithoutCreatedByInput
  savedRepliesToEchosInVoids: SavedReplyToEchoInVoidCreateManyWithoutSavedByInput
  createdVoids: NVoidCreateManyWithoutCreatedByInput
  savedVoids: SavedVoidCreateManyWithoutCreatedByInput
}

input UserCreateWithoutRepliesToEchosInVoidsInput {
  userId: ID
  username: String!
  password: String!
  currentLocationGeohash: String!
  shoutsInVoids: ShoutInVoidCreateManyWithoutShoutedByInput
  savedShouts: SavedShoutCreateManyWithoutSavedByUserInput
  echosInVoids: EchoInVoidCreateManyWithoutEchoedByInput
  savedEchos: SavedEchoCreateManyWithoutSavedByInput
  repliesToShoutsInVoids: ReplyToShoutInVoidCreateManyWithoutCreatedByInput
  savedRepliesToShoutsInVoids: SavedReplyToShoutInVoidCreateManyWithoutSavedByInput
  savedRepliesToEchosInVoids: SavedReplyToEchoInVoidCreateManyWithoutSavedByInput
  createdVoids: NVoidCreateManyWithoutCreatedByInput
  savedVoids: SavedVoidCreateManyWithoutCreatedByInput
}

input UserCreateWithoutRepliesToShoutsInVoidsInput {
  userId: ID
  username: String!
  password: String!
  currentLocationGeohash: String!
  shoutsInVoids: ShoutInVoidCreateManyWithoutShoutedByInput
  savedShouts: SavedShoutCreateManyWithoutSavedByUserInput
  echosInVoids: EchoInVoidCreateManyWithoutEchoedByInput
  savedEchos: SavedEchoCreateManyWithoutSavedByInput
  savedRepliesToShoutsInVoids: SavedReplyToShoutInVoidCreateManyWithoutSavedByInput
  repliesToEchosInVoids: ReplyToEchoInVoidCreateManyWithoutCreatedByInput
  savedRepliesToEchosInVoids: SavedReplyToEchoInVoidCreateManyWithoutSavedByInput
  createdVoids: NVoidCreateManyWithoutCreatedByInput
  savedVoids: SavedVoidCreateManyWithoutCreatedByInput
}

input UserCreateWithoutSavedEchosInput {
  userId: ID
  username: String!
  password: String!
  currentLocationGeohash: String!
  shoutsInVoids: ShoutInVoidCreateManyWithoutShoutedByInput
  savedShouts: SavedShoutCreateManyWithoutSavedByUserInput
  echosInVoids: EchoInVoidCreateManyWithoutEchoedByInput
  repliesToShoutsInVoids: ReplyToShoutInVoidCreateManyWithoutCreatedByInput
  savedRepliesToShoutsInVoids: SavedReplyToShoutInVoidCreateManyWithoutSavedByInput
  repliesToEchosInVoids: ReplyToEchoInVoidCreateManyWithoutCreatedByInput
  savedRepliesToEchosInVoids: SavedReplyToEchoInVoidCreateManyWithoutSavedByInput
  createdVoids: NVoidCreateManyWithoutCreatedByInput
  savedVoids: SavedVoidCreateManyWithoutCreatedByInput
}

input UserCreateWithoutSavedRepliesToEchosInVoidsInput {
  userId: ID
  username: String!
  password: String!
  currentLocationGeohash: String!
  shoutsInVoids: ShoutInVoidCreateManyWithoutShoutedByInput
  savedShouts: SavedShoutCreateManyWithoutSavedByUserInput
  echosInVoids: EchoInVoidCreateManyWithoutEchoedByInput
  savedEchos: SavedEchoCreateManyWithoutSavedByInput
  repliesToShoutsInVoids: ReplyToShoutInVoidCreateManyWithoutCreatedByInput
  savedRepliesToShoutsInVoids: SavedReplyToShoutInVoidCreateManyWithoutSavedByInput
  repliesToEchosInVoids: ReplyToEchoInVoidCreateManyWithoutCreatedByInput
  createdVoids: NVoidCreateManyWithoutCreatedByInput
  savedVoids: SavedVoidCreateManyWithoutCreatedByInput
}

input UserCreateWithoutSavedRepliesToShoutsInVoidsInput {
  userId: ID
  username: String!
  password: String!
  currentLocationGeohash: String!
  shoutsInVoids: ShoutInVoidCreateManyWithoutShoutedByInput
  savedShouts: SavedShoutCreateManyWithoutSavedByUserInput
  echosInVoids: EchoInVoidCreateManyWithoutEchoedByInput
  savedEchos: SavedEchoCreateManyWithoutSavedByInput
  repliesToShoutsInVoids: ReplyToShoutInVoidCreateManyWithoutCreatedByInput
  repliesToEchosInVoids: ReplyToEchoInVoidCreateManyWithoutCreatedByInput
  savedRepliesToEchosInVoids: SavedReplyToEchoInVoidCreateManyWithoutSavedByInput
  createdVoids: NVoidCreateManyWithoutCreatedByInput
  savedVoids: SavedVoidCreateManyWithoutCreatedByInput
}

input UserCreateWithoutSavedShoutsInput {
  userId: ID
  username: String!
  password: String!
  currentLocationGeohash: String!
  shoutsInVoids: ShoutInVoidCreateManyWithoutShoutedByInput
  echosInVoids: EchoInVoidCreateManyWithoutEchoedByInput
  savedEchos: SavedEchoCreateManyWithoutSavedByInput
  repliesToShoutsInVoids: ReplyToShoutInVoidCreateManyWithoutCreatedByInput
  savedRepliesToShoutsInVoids: SavedReplyToShoutInVoidCreateManyWithoutSavedByInput
  repliesToEchosInVoids: ReplyToEchoInVoidCreateManyWithoutCreatedByInput
  savedRepliesToEchosInVoids: SavedReplyToEchoInVoidCreateManyWithoutSavedByInput
  createdVoids: NVoidCreateManyWithoutCreatedByInput
  savedVoids: SavedVoidCreateManyWithoutCreatedByInput
}

input UserCreateWithoutSavedVoidsInput {
  userId: ID
  username: String!
  password: String!
  currentLocationGeohash: String!
  shoutsInVoids: ShoutInVoidCreateManyWithoutShoutedByInput
  savedShouts: SavedShoutCreateManyWithoutSavedByUserInput
  echosInVoids: EchoInVoidCreateManyWithoutEchoedByInput
  savedEchos: SavedEchoCreateManyWithoutSavedByInput
  repliesToShoutsInVoids: ReplyToShoutInVoidCreateManyWithoutCreatedByInput
  savedRepliesToShoutsInVoids: SavedReplyToShoutInVoidCreateManyWithoutSavedByInput
  repliesToEchosInVoids: ReplyToEchoInVoidCreateManyWithoutCreatedByInput
  savedRepliesToEchosInVoids: SavedReplyToEchoInVoidCreateManyWithoutSavedByInput
  createdVoids: NVoidCreateManyWithoutCreatedByInput
}

input UserCreateWithoutShoutsInVoidsInput {
  userId: ID
  username: String!
  password: String!
  currentLocationGeohash: String!
  savedShouts: SavedShoutCreateManyWithoutSavedByUserInput
  echosInVoids: EchoInVoidCreateManyWithoutEchoedByInput
  savedEchos: SavedEchoCreateManyWithoutSavedByInput
  repliesToShoutsInVoids: ReplyToShoutInVoidCreateManyWithoutCreatedByInput
  savedRepliesToShoutsInVoids: SavedReplyToShoutInVoidCreateManyWithoutSavedByInput
  repliesToEchosInVoids: ReplyToEchoInVoidCreateManyWithoutCreatedByInput
  savedRepliesToEchosInVoids: SavedReplyToEchoInVoidCreateManyWithoutSavedByInput
  createdVoids: NVoidCreateManyWithoutCreatedByInput
  savedVoids: SavedVoidCreateManyWithoutCreatedByInput
}

type UserEdge {
  node: User!
  cursor: String!
}

enum UserOrderByInput {
  userId_ASC
  userId_DESC
  createdAt_ASC
  createdAt_DESC
  username_ASC
  username_DESC
  password_ASC
  password_DESC
  currentLocationGeohash_ASC
  currentLocationGeohash_DESC
}

type UserPreviousValues {
  userId: ID!
  createdAt: DateTime!
  username: String!
  password: String!
  currentLocationGeohash: String!
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UserWhereInput
  AND: [UserSubscriptionWhereInput!]
  OR: [UserSubscriptionWhereInput!]
  NOT: [UserSubscriptionWhereInput!]
}

input UserUpdateDataInput {
  username: String
  password: String
  currentLocationGeohash: String
  shoutsInVoids: ShoutInVoidUpdateManyWithoutShoutedByInput
  savedShouts: SavedShoutUpdateManyWithoutSavedByUserInput
  echosInVoids: EchoInVoidUpdateManyWithoutEchoedByInput
  savedEchos: SavedEchoUpdateManyWithoutSavedByInput
  repliesToShoutsInVoids: ReplyToShoutInVoidUpdateManyWithoutCreatedByInput
  savedRepliesToShoutsInVoids: SavedReplyToShoutInVoidUpdateManyWithoutSavedByInput
  repliesToEchosInVoids: ReplyToEchoInVoidUpdateManyWithoutCreatedByInput
  savedRepliesToEchosInVoids: SavedReplyToEchoInVoidUpdateManyWithoutSavedByInput
  createdVoids: NVoidUpdateManyWithoutCreatedByInput
  savedVoids: SavedVoidUpdateManyWithoutCreatedByInput
}

input UserUpdateInput {
  username: String
  password: String
  currentLocationGeohash: String
  shoutsInVoids: ShoutInVoidUpdateManyWithoutShoutedByInput
  savedShouts: SavedShoutUpdateManyWithoutSavedByUserInput
  echosInVoids: EchoInVoidUpdateManyWithoutEchoedByInput
  savedEchos: SavedEchoUpdateManyWithoutSavedByInput
  repliesToShoutsInVoids: ReplyToShoutInVoidUpdateManyWithoutCreatedByInput
  savedRepliesToShoutsInVoids: SavedReplyToShoutInVoidUpdateManyWithoutSavedByInput
  repliesToEchosInVoids: ReplyToEchoInVoidUpdateManyWithoutCreatedByInput
  savedRepliesToEchosInVoids: SavedReplyToEchoInVoidUpdateManyWithoutSavedByInput
  createdVoids: NVoidUpdateManyWithoutCreatedByInput
  savedVoids: SavedVoidUpdateManyWithoutCreatedByInput
}

input UserUpdateManyMutationInput {
  username: String
  password: String
  currentLocationGeohash: String
}

input UserUpdateOneRequiredInput {
  create: UserCreateInput
  update: UserUpdateDataInput
  upsert: UserUpsertNestedInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutCreatedVoidsInput {
  create: UserCreateWithoutCreatedVoidsInput
  update: UserUpdateWithoutCreatedVoidsDataInput
  upsert: UserUpsertWithoutCreatedVoidsInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutEchosInVoidsInput {
  create: UserCreateWithoutEchosInVoidsInput
  update: UserUpdateWithoutEchosInVoidsDataInput
  upsert: UserUpsertWithoutEchosInVoidsInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutRepliesToEchosInVoidsInput {
  create: UserCreateWithoutRepliesToEchosInVoidsInput
  update: UserUpdateWithoutRepliesToEchosInVoidsDataInput
  upsert: UserUpsertWithoutRepliesToEchosInVoidsInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutRepliesToShoutsInVoidsInput {
  create: UserCreateWithoutRepliesToShoutsInVoidsInput
  update: UserUpdateWithoutRepliesToShoutsInVoidsDataInput
  upsert: UserUpsertWithoutRepliesToShoutsInVoidsInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutSavedEchosInput {
  create: UserCreateWithoutSavedEchosInput
  update: UserUpdateWithoutSavedEchosDataInput
  upsert: UserUpsertWithoutSavedEchosInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutSavedRepliesToEchosInVoidsInput {
  create: UserCreateWithoutSavedRepliesToEchosInVoidsInput
  update: UserUpdateWithoutSavedRepliesToEchosInVoidsDataInput
  upsert: UserUpsertWithoutSavedRepliesToEchosInVoidsInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutSavedRepliesToShoutsInVoidsInput {
  create: UserCreateWithoutSavedRepliesToShoutsInVoidsInput
  update: UserUpdateWithoutSavedRepliesToShoutsInVoidsDataInput
  upsert: UserUpsertWithoutSavedRepliesToShoutsInVoidsInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutSavedShoutsInput {
  create: UserCreateWithoutSavedShoutsInput
  update: UserUpdateWithoutSavedShoutsDataInput
  upsert: UserUpsertWithoutSavedShoutsInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutSavedVoidsInput {
  create: UserCreateWithoutSavedVoidsInput
  update: UserUpdateWithoutSavedVoidsDataInput
  upsert: UserUpsertWithoutSavedVoidsInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutShoutsInVoidsInput {
  create: UserCreateWithoutShoutsInVoidsInput
  update: UserUpdateWithoutShoutsInVoidsDataInput
  upsert: UserUpsertWithoutShoutsInVoidsInput
  connect: UserWhereUniqueInput
}

input UserUpdateWithoutCreatedVoidsDataInput {
  username: String
  password: String
  currentLocationGeohash: String
  shoutsInVoids: ShoutInVoidUpdateManyWithoutShoutedByInput
  savedShouts: SavedShoutUpdateManyWithoutSavedByUserInput
  echosInVoids: EchoInVoidUpdateManyWithoutEchoedByInput
  savedEchos: SavedEchoUpdateManyWithoutSavedByInput
  repliesToShoutsInVoids: ReplyToShoutInVoidUpdateManyWithoutCreatedByInput
  savedRepliesToShoutsInVoids: SavedReplyToShoutInVoidUpdateManyWithoutSavedByInput
  repliesToEchosInVoids: ReplyToEchoInVoidUpdateManyWithoutCreatedByInput
  savedRepliesToEchosInVoids: SavedReplyToEchoInVoidUpdateManyWithoutSavedByInput
  savedVoids: SavedVoidUpdateManyWithoutCreatedByInput
}

input UserUpdateWithoutEchosInVoidsDataInput {
  username: String
  password: String
  currentLocationGeohash: String
  shoutsInVoids: ShoutInVoidUpdateManyWithoutShoutedByInput
  savedShouts: SavedShoutUpdateManyWithoutSavedByUserInput
  savedEchos: SavedEchoUpdateManyWithoutSavedByInput
  repliesToShoutsInVoids: ReplyToShoutInVoidUpdateManyWithoutCreatedByInput
  savedRepliesToShoutsInVoids: SavedReplyToShoutInVoidUpdateManyWithoutSavedByInput
  repliesToEchosInVoids: ReplyToEchoInVoidUpdateManyWithoutCreatedByInput
  savedRepliesToEchosInVoids: SavedReplyToEchoInVoidUpdateManyWithoutSavedByInput
  createdVoids: NVoidUpdateManyWithoutCreatedByInput
  savedVoids: SavedVoidUpdateManyWithoutCreatedByInput
}

input UserUpdateWithoutRepliesToEchosInVoidsDataInput {
  username: String
  password: String
  currentLocationGeohash: String
  shoutsInVoids: ShoutInVoidUpdateManyWithoutShoutedByInput
  savedShouts: SavedShoutUpdateManyWithoutSavedByUserInput
  echosInVoids: EchoInVoidUpdateManyWithoutEchoedByInput
  savedEchos: SavedEchoUpdateManyWithoutSavedByInput
  repliesToShoutsInVoids: ReplyToShoutInVoidUpdateManyWithoutCreatedByInput
  savedRepliesToShoutsInVoids: SavedReplyToShoutInVoidUpdateManyWithoutSavedByInput
  savedRepliesToEchosInVoids: SavedReplyToEchoInVoidUpdateManyWithoutSavedByInput
  createdVoids: NVoidUpdateManyWithoutCreatedByInput
  savedVoids: SavedVoidUpdateManyWithoutCreatedByInput
}

input UserUpdateWithoutRepliesToShoutsInVoidsDataInput {
  username: String
  password: String
  currentLocationGeohash: String
  shoutsInVoids: ShoutInVoidUpdateManyWithoutShoutedByInput
  savedShouts: SavedShoutUpdateManyWithoutSavedByUserInput
  echosInVoids: EchoInVoidUpdateManyWithoutEchoedByInput
  savedEchos: SavedEchoUpdateManyWithoutSavedByInput
  savedRepliesToShoutsInVoids: SavedReplyToShoutInVoidUpdateManyWithoutSavedByInput
  repliesToEchosInVoids: ReplyToEchoInVoidUpdateManyWithoutCreatedByInput
  savedRepliesToEchosInVoids: SavedReplyToEchoInVoidUpdateManyWithoutSavedByInput
  createdVoids: NVoidUpdateManyWithoutCreatedByInput
  savedVoids: SavedVoidUpdateManyWithoutCreatedByInput
}

input UserUpdateWithoutSavedEchosDataInput {
  username: String
  password: String
  currentLocationGeohash: String
  shoutsInVoids: ShoutInVoidUpdateManyWithoutShoutedByInput
  savedShouts: SavedShoutUpdateManyWithoutSavedByUserInput
  echosInVoids: EchoInVoidUpdateManyWithoutEchoedByInput
  repliesToShoutsInVoids: ReplyToShoutInVoidUpdateManyWithoutCreatedByInput
  savedRepliesToShoutsInVoids: SavedReplyToShoutInVoidUpdateManyWithoutSavedByInput
  repliesToEchosInVoids: ReplyToEchoInVoidUpdateManyWithoutCreatedByInput
  savedRepliesToEchosInVoids: SavedReplyToEchoInVoidUpdateManyWithoutSavedByInput
  createdVoids: NVoidUpdateManyWithoutCreatedByInput
  savedVoids: SavedVoidUpdateManyWithoutCreatedByInput
}

input UserUpdateWithoutSavedRepliesToEchosInVoidsDataInput {
  username: String
  password: String
  currentLocationGeohash: String
  shoutsInVoids: ShoutInVoidUpdateManyWithoutShoutedByInput
  savedShouts: SavedShoutUpdateManyWithoutSavedByUserInput
  echosInVoids: EchoInVoidUpdateManyWithoutEchoedByInput
  savedEchos: SavedEchoUpdateManyWithoutSavedByInput
  repliesToShoutsInVoids: ReplyToShoutInVoidUpdateManyWithoutCreatedByInput
  savedRepliesToShoutsInVoids: SavedReplyToShoutInVoidUpdateManyWithoutSavedByInput
  repliesToEchosInVoids: ReplyToEchoInVoidUpdateManyWithoutCreatedByInput
  createdVoids: NVoidUpdateManyWithoutCreatedByInput
  savedVoids: SavedVoidUpdateManyWithoutCreatedByInput
}

input UserUpdateWithoutSavedRepliesToShoutsInVoidsDataInput {
  username: String
  password: String
  currentLocationGeohash: String
  shoutsInVoids: ShoutInVoidUpdateManyWithoutShoutedByInput
  savedShouts: SavedShoutUpdateManyWithoutSavedByUserInput
  echosInVoids: EchoInVoidUpdateManyWithoutEchoedByInput
  savedEchos: SavedEchoUpdateManyWithoutSavedByInput
  repliesToShoutsInVoids: ReplyToShoutInVoidUpdateManyWithoutCreatedByInput
  repliesToEchosInVoids: ReplyToEchoInVoidUpdateManyWithoutCreatedByInput
  savedRepliesToEchosInVoids: SavedReplyToEchoInVoidUpdateManyWithoutSavedByInput
  createdVoids: NVoidUpdateManyWithoutCreatedByInput
  savedVoids: SavedVoidUpdateManyWithoutCreatedByInput
}

input UserUpdateWithoutSavedShoutsDataInput {
  username: String
  password: String
  currentLocationGeohash: String
  shoutsInVoids: ShoutInVoidUpdateManyWithoutShoutedByInput
  echosInVoids: EchoInVoidUpdateManyWithoutEchoedByInput
  savedEchos: SavedEchoUpdateManyWithoutSavedByInput
  repliesToShoutsInVoids: ReplyToShoutInVoidUpdateManyWithoutCreatedByInput
  savedRepliesToShoutsInVoids: SavedReplyToShoutInVoidUpdateManyWithoutSavedByInput
  repliesToEchosInVoids: ReplyToEchoInVoidUpdateManyWithoutCreatedByInput
  savedRepliesToEchosInVoids: SavedReplyToEchoInVoidUpdateManyWithoutSavedByInput
  createdVoids: NVoidUpdateManyWithoutCreatedByInput
  savedVoids: SavedVoidUpdateManyWithoutCreatedByInput
}

input UserUpdateWithoutSavedVoidsDataInput {
  username: String
  password: String
  currentLocationGeohash: String
  shoutsInVoids: ShoutInVoidUpdateManyWithoutShoutedByInput
  savedShouts: SavedShoutUpdateManyWithoutSavedByUserInput
  echosInVoids: EchoInVoidUpdateManyWithoutEchoedByInput
  savedEchos: SavedEchoUpdateManyWithoutSavedByInput
  repliesToShoutsInVoids: ReplyToShoutInVoidUpdateManyWithoutCreatedByInput
  savedRepliesToShoutsInVoids: SavedReplyToShoutInVoidUpdateManyWithoutSavedByInput
  repliesToEchosInVoids: ReplyToEchoInVoidUpdateManyWithoutCreatedByInput
  savedRepliesToEchosInVoids: SavedReplyToEchoInVoidUpdateManyWithoutSavedByInput
  createdVoids: NVoidUpdateManyWithoutCreatedByInput
}

input UserUpdateWithoutShoutsInVoidsDataInput {
  username: String
  password: String
  currentLocationGeohash: String
  savedShouts: SavedShoutUpdateManyWithoutSavedByUserInput
  echosInVoids: EchoInVoidUpdateManyWithoutEchoedByInput
  savedEchos: SavedEchoUpdateManyWithoutSavedByInput
  repliesToShoutsInVoids: ReplyToShoutInVoidUpdateManyWithoutCreatedByInput
  savedRepliesToShoutsInVoids: SavedReplyToShoutInVoidUpdateManyWithoutSavedByInput
  repliesToEchosInVoids: ReplyToEchoInVoidUpdateManyWithoutCreatedByInput
  savedRepliesToEchosInVoids: SavedReplyToEchoInVoidUpdateManyWithoutSavedByInput
  createdVoids: NVoidUpdateManyWithoutCreatedByInput
  savedVoids: SavedVoidUpdateManyWithoutCreatedByInput
}

input UserUpsertNestedInput {
  update: UserUpdateDataInput!
  create: UserCreateInput!
}

input UserUpsertWithoutCreatedVoidsInput {
  update: UserUpdateWithoutCreatedVoidsDataInput!
  create: UserCreateWithoutCreatedVoidsInput!
}

input UserUpsertWithoutEchosInVoidsInput {
  update: UserUpdateWithoutEchosInVoidsDataInput!
  create: UserCreateWithoutEchosInVoidsInput!
}

input UserUpsertWithoutRepliesToEchosInVoidsInput {
  update: UserUpdateWithoutRepliesToEchosInVoidsDataInput!
  create: UserCreateWithoutRepliesToEchosInVoidsInput!
}

input UserUpsertWithoutRepliesToShoutsInVoidsInput {
  update: UserUpdateWithoutRepliesToShoutsInVoidsDataInput!
  create: UserCreateWithoutRepliesToShoutsInVoidsInput!
}

input UserUpsertWithoutSavedEchosInput {
  update: UserUpdateWithoutSavedEchosDataInput!
  create: UserCreateWithoutSavedEchosInput!
}

input UserUpsertWithoutSavedRepliesToEchosInVoidsInput {
  update: UserUpdateWithoutSavedRepliesToEchosInVoidsDataInput!
  create: UserCreateWithoutSavedRepliesToEchosInVoidsInput!
}

input UserUpsertWithoutSavedRepliesToShoutsInVoidsInput {
  update: UserUpdateWithoutSavedRepliesToShoutsInVoidsDataInput!
  create: UserCreateWithoutSavedRepliesToShoutsInVoidsInput!
}

input UserUpsertWithoutSavedShoutsInput {
  update: UserUpdateWithoutSavedShoutsDataInput!
  create: UserCreateWithoutSavedShoutsInput!
}

input UserUpsertWithoutSavedVoidsInput {
  update: UserUpdateWithoutSavedVoidsDataInput!
  create: UserCreateWithoutSavedVoidsInput!
}

input UserUpsertWithoutShoutsInVoidsInput {
  update: UserUpdateWithoutShoutsInVoidsDataInput!
  create: UserCreateWithoutShoutsInVoidsInput!
}

input UserWhereInput {
  userId: ID
  userId_not: ID
  userId_in: [ID!]
  userId_not_in: [ID!]
  userId_lt: ID
  userId_lte: ID
  userId_gt: ID
  userId_gte: ID
  userId_contains: ID
  userId_not_contains: ID
  userId_starts_with: ID
  userId_not_starts_with: ID
  userId_ends_with: ID
  userId_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  username: String
  username_not: String
  username_in: [String!]
  username_not_in: [String!]
  username_lt: String
  username_lte: String
  username_gt: String
  username_gte: String
  username_contains: String
  username_not_contains: String
  username_starts_with: String
  username_not_starts_with: String
  username_ends_with: String
  username_not_ends_with: String
  password: String
  password_not: String
  password_in: [String!]
  password_not_in: [String!]
  password_lt: String
  password_lte: String
  password_gt: String
  password_gte: String
  password_contains: String
  password_not_contains: String
  password_starts_with: String
  password_not_starts_with: String
  password_ends_with: String
  password_not_ends_with: String
  currentLocationGeohash: String
  currentLocationGeohash_not: String
  currentLocationGeohash_in: [String!]
  currentLocationGeohash_not_in: [String!]
  currentLocationGeohash_lt: String
  currentLocationGeohash_lte: String
  currentLocationGeohash_gt: String
  currentLocationGeohash_gte: String
  currentLocationGeohash_contains: String
  currentLocationGeohash_not_contains: String
  currentLocationGeohash_starts_with: String
  currentLocationGeohash_not_starts_with: String
  currentLocationGeohash_ends_with: String
  currentLocationGeohash_not_ends_with: String
  shoutsInVoids_every: ShoutInVoidWhereInput
  shoutsInVoids_some: ShoutInVoidWhereInput
  shoutsInVoids_none: ShoutInVoidWhereInput
  savedShouts_every: SavedShoutWhereInput
  savedShouts_some: SavedShoutWhereInput
  savedShouts_none: SavedShoutWhereInput
  echosInVoids_every: EchoInVoidWhereInput
  echosInVoids_some: EchoInVoidWhereInput
  echosInVoids_none: EchoInVoidWhereInput
  savedEchos_every: SavedEchoWhereInput
  savedEchos_some: SavedEchoWhereInput
  savedEchos_none: SavedEchoWhereInput
  repliesToShoutsInVoids_every: ReplyToShoutInVoidWhereInput
  repliesToShoutsInVoids_some: ReplyToShoutInVoidWhereInput
  repliesToShoutsInVoids_none: ReplyToShoutInVoidWhereInput
  savedRepliesToShoutsInVoids_every: SavedReplyToShoutInVoidWhereInput
  savedRepliesToShoutsInVoids_some: SavedReplyToShoutInVoidWhereInput
  savedRepliesToShoutsInVoids_none: SavedReplyToShoutInVoidWhereInput
  repliesToEchosInVoids_every: ReplyToEchoInVoidWhereInput
  repliesToEchosInVoids_some: ReplyToEchoInVoidWhereInput
  repliesToEchosInVoids_none: ReplyToEchoInVoidWhereInput
  savedRepliesToEchosInVoids_every: SavedReplyToEchoInVoidWhereInput
  savedRepliesToEchosInVoids_some: SavedReplyToEchoInVoidWhereInput
  savedRepliesToEchosInVoids_none: SavedReplyToEchoInVoidWhereInput
  createdVoids_every: NVoidWhereInput
  createdVoids_some: NVoidWhereInput
  createdVoids_none: NVoidWhereInput
  savedVoids_every: SavedVoidWhereInput
  savedVoids_some: SavedVoidWhereInput
  savedVoids_none: SavedVoidWhereInput
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
}

input UserWhereUniqueInput {
  userId: ID
}
`
      }
    