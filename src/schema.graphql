type Shout {
    voteCount: Int!
    shoutId: ID!
    #geohash: String!
    createdAt: String!
    content: String! 
    postedBy: User!
    echos: [Echo!]
    nvoid: NVoid!
    replies: [Reply!]
}
type Reply {
    originalShout: Shout!
    voteCount: Int!
    replyId: ID! 
    createdAt: String! 
    content: String!
    postedBy: User!
    #void: Void! #get from shout
}
type Echo {
    echoId: ID!
    nvoid: NVoid!
    originalShout: Shout!
    createdAt: String!
    createdBy: User!
    echoedBy: User!
}
type NVoid {
    voidId: ID!
    geohash: String!
    createdAt: String!
    shouts: [Shout!]
}
type User {
    createdAt: String!
    userId: ID!
    createdShouts: [Shout!]
    savedShouts: [Shout!]
    echos: [Echo!]
    savedVoids: [NVoid!]
    currentLocationGeohash: String!
    lastLocationUpdate: String!
    username: String!
    password: String!
    replies: [Reply!]
}
type AuthPayload {
    token: String
    user: User
    #currentLocationGeohash: String!
}
type Query {
    getUser(userId: ID!): User
    getVoidById(voidId: ID!): NVoid
    getVoidByLocation(geohash: String!): NVoid
    getEcho(echoId: ID!): Echo
    getShout(shoutId: ID!): Shout
}

type Mutation {
    #getUser(userId: ID!): User
    #getVoidById(voidId: ID!): Void
    #getVoidByLocation(geohash: String!): Void
    #getEcho(echoId: ID!): Echo
    #getShout(shoutId: ID!): Shout
    login(username: String!, password: String!): AuthPayload
    signup(username: String!, password: String!, currentLocationGeohash: String!): AuthPayload
    shout(content: String!): Shout
    upvoteShout(shoutId: ID!): Shout!
    downvoteShout(shoutId: ID!): Shout!
    upvoteReply(replyId: ID!): Shout! #clients will never request/view indv reply
    downvoteReply(replyId: ID!): Shout!
    saveShout(shoutId: ID!): User!
    saveVoid(voidId: ID!): User!
    echo(shoutId: ID!): Echo
    updateLocation(currentLocationGeohash: String!): User!
}
#type Shitpost {
#    shitpostId: ID! 
#    postedBy: User! 
#    createdAt: String! 
#    encryptedContent: String!
#    channel: Channel!
#}

#type Channel {
#    channelId: ID!
#    name: String!
#    owner: User! 
#    createdAt: String! 
#    memberEdges: [Edge!] 
#    shitposts: [Shitpost!] 
#}

#type User {
#    userId: ID! 
#    name: String!
#    memberOfChannelEdges: [Edge!]  
#    ownerOfChannels: [Channel!] 
#}

#type Edge {
#    edgeId: ID!
#    user: User!
#    channel: Channel!
#}

#ype AuthPayload {
#    token: String
#    user: User
#}

#type Query {
    #getShitpost(shitpostId: ID!): Shitpost
    #getChannel(channelId: ID!): Channel
    #getUser(userId: ID!): User
#}

#type Mutation {
    #login(email: String!, password: String!): AuthPayload
    #signup(email: String!, password: String!, name: String!): AuthPayload
    #createChannel(name: String!): Channel
    #addMember(channelId: ID!, memberUserId: ID!): User
    #shitpost(encryptedContent: String!, channelId: ID!): Shitpost
    #deleteShitpost(shitpostId: ID!): Shitpost
    #removeMember(channelId: ID!, memberId: ID!): Channel!
    #deleteChannel(channelId: ID!): Channel
#}