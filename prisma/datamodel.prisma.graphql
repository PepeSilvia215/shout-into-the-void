# container of all post messages, such as shout, echo, and replies
# designed so that these are created when an original shout or reply is created
# saves space since all saved shouts, echos, saved echos, and saved replies will
# connect to this and it will only be created once
# also will present unique deletion method where when a user deletes their own shout,
# they can choose to delete the shout and the reference content
# this will cause any that uses this like saved shouts, echos, and saved replies 
# will no longer have the content, very similar to reddits delete function and users
# will see a placeholder. a refernce will be made if this user choses to delete all
# of their content in the future, in a deeper menu to be made
type Content {
    contentId: ID! @id
    createdAt: DateTime! @createdAt
    createdBy: User! @relation(link: INLINE)
    message: String!
    includeUsername: Boolean!
}

type User {
    userId: ID! @id
    createdAt: DateTime! @createdAt
    username: String!
    password: String!
    currentLocationGeohash: String!
    shoutsInVoids: [ShoutInVoid!] @relation(name: "UsersShoutsInVoids", link: INLINE)
    savedShouts: [SavedShout!] @relation(name: "UsersSavedShouts", link: INLINE)
    echosInVoids: [EchoInVoid!] @relation(name: "UsersEchosInVoids", link: INLINE)
    savedEchos: [SavedEcho!] @relation(name: "UsersSavedEchos", link: INLINE)
    repliesToShoutsInVoids: [ReplyToShoutInVoid!] @relation(name: "UsersRepliesToShouts", link: INLINE)
    savedRepliesToShoutsInVoids: [SavedReplyToShoutInVoid!] @relation(name: "UsersSavedRepliesToShouts", link: INLINE)
    repliesToEchosInVoids: [ReplyToEchoInVoid!] @relation(name: "UsersRepliesToEchos", link: INLINE)
    savedRepliesToEchosInVoids: [SavedReplyToEchoInVoid!] @relation(name: "UsersSavedRepliesToEchos", link: INLINE)
    createdVoids: [NVoid!] @relation(name: "UsersCreatedVoids", link: INLINE)
    savedVoids: [SavedVoid!] @relation(name: "UsersSavedVoids", link: INLINE)
}
type ShoutInVoid {
    shoutInVoidId: ID! @id
    createdAt: DateTime! @createdAt
    shoutedBy: User! @relation(name: "UsersShoutsInVoids")
    content: Content! @relation(link: INLINE)
    voteCount: Int!
    nvoid: NVoid! @relation(name: "ShoutsInVoid")
    savedShouts: [SavedShout!] @relation(name: "OriginalShoutToSavedShoutEdge", link: INLINE)
    replies: [ReplyToShoutInVoid!] @relation(name: "OriginalShoutToReplyEdge", link: INLINE)
}
type ReplyToShoutInVoid {
    replyToShoutInVoidId: ID! @id
    createdAt: DateTime! @createdAt
    createdBy: User! @relation(name: "UsersRepliesToShouts")
    content: Content! @relation(link: INLINE)
    voteCount: Int!
    shoutInVoid: ShoutInVoid! @relation(name: "OriginalShoutToReplyEdge")
    savedReplies: [SavedReplyToShoutInVoid!] @relation(name: "OriginalReplyToSavedReplyToShoutEdge", link: INLINE)
}
type SavedReplyToShoutInVoid {
    savedReplyToShoutInVoidId: ID! @id
    createdAt: DateTime! @createdAt
    savedBy: User! @relation(name: "UsersSavedRepliesToShouts")
    originalReplyContent: Content! @relation(name: "ReplyContentToSavedReplyToShoutInVoid", link: INLINE)
    originalShoutContent: Content! @relation(name: "ShoutContentToSavedReplyToShoutInVoid", link: INLINE)
    originalVoidGeohash: String!
    replyToShoutInVoid: ReplyToShoutInVoid! @relation(name: "OriginalReplyToSavedReplyToShoutEdge")
}
# user saves a shout in void
type SavedShout {
    savedShoutId: ID! @id
    createdAt: DateTime! @createdAt
    savedByUser: User! @relation(name: "UsersSavedShouts")
    originalContent: Content! @relation(link: INLINE)
    originalShoutVoidGeohash: String!
    shoutInVoid: ShoutInVoid! @relation(name: "OriginalShoutToSavedShoutEdge")
}
# echo of a saved shout
type EchoInVoid {
    echoInVoidId: ID! @id
    createdAt: DateTime! @createdAt
    echoedBy: User! @relation(name: "UsersEchosInVoids")
    originalContent: Content! @relation(link: INLINE)
    voteCount: Int!
    originalShoutVoidGeohash: String!
    nvoid: NVoid! @relation(name: "EchosInVoid")
    savedEchos: [SavedEcho!] @relation(name: "OriginalEchoToSavedEchoEdge", link: INLINE)
    replies: [ReplyToEchoInVoid!] @relation(name: "OriginalEchoToReplyToEchoEdge", link: INLINE)
}
type ReplyToEchoInVoid {
    replyToEchoInVoidId: ID! @id
    createdAt: DateTime! @createdAt
    createdBy: User! @relation(name: "UsersRepliesToEchos")
    content: Content! @relation(link: INLINE)
    voteCount: Int!
    echoInVoid: EchoInVoid! @relation(name: "OriginalEchoToReplyToEchoEdge")
    savedReplies: [SavedReplyToEchoInVoid!] @relation(name: "OriginalReplyToSavedReplyToEchoEdge", link: INLINE)
}
type SavedReplyToEchoInVoid {
    savedReplyToEchoInVoid: ID! @id
    createdAt: DateTime! @createdAt
    savedBy: User! @relation(name: "UsersSavedRepliesToEchos")
    originalReplyContent: Content! @relation(name: "ReplyContentToSavedReplyToEchoInVoid", link: INLINE)
    originalShoutContent: Content! @relation(name: "ShoutContentToSavedReplyToEchoInVoid", link: INLINE)
    originalVoidGeohash: String!
    replyToEchoInVoid: ReplyToEchoInVoid! @relation(name: "OriginalReplyToSavedReplyToEchoEdge")
}
type SavedEcho {
    savedEcho: ID! @id
    createdAt: DateTime! @createdAt
    savedBy: User! @relation(name: "UsersSavedEchos")
    originalContent: Content! @relation(link: INLINE)
    originalShoutVoidGeohash: String!
    originalEchoVoidGeohash: String!
    echoInVoid: EchoInVoid! @relation(name: "OriginalEchoToSavedEchoEdge")
}
type NVoid {
    voidId: ID! @id
    createdAt: DateTime! @createdAt
    createdBy: User! @relation(name: "UsersCreatedVoids")
    voidGeohash: String!
    shouts: [ShoutInVoid!] @relation(name: "ShoutsInVoid", link: INLINE)
    echos: [EchoInVoid!] @relation(name: "EchosInVoid", link: INLINE)
}
type SavedVoid {
    savedVoidId: ID! @id
    createdAt: DateTime! @createdAt
    createdBy: User! @relation(name: "UsersSavedVoids")
    voidGeohash: String!
}